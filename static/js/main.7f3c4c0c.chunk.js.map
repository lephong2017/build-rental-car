{"version":3,"sources":["views/list-car-slider/banner/banner2.jpg","views/list-car-slider/banner/banner3.jpg","views/list-car-slider/banner/banner6.png","images/icon/step3.png","images/banner6.png","serviceWorker.js","redux/auth0/auth0.js","redux/auth0/ActionTypes.js","redux/product/product.js","redux/product/ActionTypes.js","redux/car/car.js","redux/car/ActionTypes.js","redux/car-detail/carDetail.js","redux/car-detail/ActionTypes.js","redux/car/itemCar.js","redux/car/numberData.js","redux/partner/partner.js","redux/partner/ActionTypes.js","redux/partner/itemPartner.js","redux/partner/numberDataPartner.js","redux/orders/orders.js","redux/orders/ActionTypes.js","redux/orders/itemOrders.js","redux/orders/numberDataOrders.js","redux/typecar/typecar.js","redux/typecar/ActionTypes.js","redux/typecar/itemTypecar.js","redux/typecar/numberTypecar.js","redux/customer/customer.js","redux/customer/ActionTypes.js","redux/customer/itemCustomer.js","redux/customer/numberCustomer.js","redux/feature/feature.js","redux/feature/ActionTypes.js","redux/feature/itemFeature.js","redux/feature/numberFeature.js","redux/location/location.js","redux/location/ActionTypes.js","redux/location/itemLocation.js","redux/location/numberLocation.js","redux/packages/packages.js","redux/packages/ActionTypes.js","redux/packages/itemPackages.js","redux/packages/numberPackages.js","redux/payment/payment.js","redux/payment/ActionTypes.js","redux/payment/itemPayment.js","redux/payment/numberPayment.js","redux/procedure/procedure.js","redux/procedure/ActionTypes.js","redux/procedure/itemProcedure.js","redux/procedure/numberProcedure.js","redux/index.js","containers/menu/options.js","settings/index.js","utils/callAPI/apiCallerNotToken.js","actions/auth0/index.js","utils/callAPI/apiCaller.js","utils/const/index.js","actions/auth0/auth0.js","components/notification/Notification.js","views/page/register/index.js","views/page/login/index.js","components/Drawer/Drawer.js","utils/key-component/settings_key_antd.js","containers/menu/Menu.js","views/layout/Header.js","views/list-car-slider/ListCars.js","views/page/home/QuickBook.js","views/layout/Content.js","views/App.js","components/breadcrumb/index.js","history.js","containers/private/layout-management/sidebar/index.js","containers/private/management/car/function/index.js","settings/withDirection.js","containers/wrapper/Panel.style.js","components/ptp__table/default-value/table.js","components/ptp__table/default-value/pagination.js","components/ptp__table/default-value/index.js","components/ptp__table/index.js","components/ptp__form-layout/components/trigger/Button.js","components/ptp__form-layout/components/trigger/index.js","components/ptp__form-layout/containers/FormView.js","components/ptp__form-layout/validations/form-item/Input.js","components/ptp__form-layout/components/form-items/Input.js","components/ptp__form-layout/components/form-items/TextArea.js","components/ptp__form-layout/validations/form-item/Email.js","components/ptp__form-layout/components/form-items/Email.js","components/ptp__form-layout/components/form-items/NumberInput.js","components/ptp__form-layout/components/form-items/PasswordInput.js","components/ptp__form-layout/components/form-items/PhoneNumberInput.js","components/ptp__form-layout/components/form-items/Select.js","components/ptp__form-layout/components/form-items/MultiSelect.js","components/ptp__form-layout/components/form-items/RadioButton.js","components/ptp__form-layout/components/form-items/Checkbox.js","components/ptp__form-layout/components/form-items/Link.js","components/ptp__form-layout/components/form-items/DatePicker.js","components/ptp__form-layout/components/form-items/Url.js","components/ptp__form-layout/containers/FormActions.js","components/ptp__form-layout/components/index.js","components/ptp__form-layout/index.js","containers/private/management/car/action/layout.js","containers/private/management/car/action/add/FormCar.js","containers/private/management/car/action/edit/edit.js","redux/car/actions.js","containers/private/management/car/index.js","containers/private/management/partner/function/index.js","containers/private/management/partner/action/layout.js","containers/private/management/partner/action/add/FormPartner.js","containers/private/management/partner/action/edit/edit.js","redux/partner/actions.js","containers/private/management/partner/index.js","containers/private/management/orders/function/index.js","containers/private/management/orders/action/layout.js","containers/private/management/orders/action/add/FormOrder.js","containers/private/management/orders/action/edit/edit.js","redux/orders/actions.js","containers/private/management/orders/index.js","containers/private/management/typecar/function/index.js","containers/private/management/typecar/action/layout.js","containers/private/management/typecar/action/add/FormTypecar.js","containers/private/management/typecar/action/edit/edit.js","redux/typecar/actions.js","containers/private/management/typecar/index.js","containers/private/management/customer/function/index.js","containers/private/management/customer/action/layout.js","containers/private/management/customer/action/add/FormCustomer.js","containers/private/management/customer/action/edit/edit.js","redux/customer/actions.js","containers/private/management/customer/index.js","containers/private/management/feature/function/index.js","containers/private/management/feature/action/layout.js","containers/private/management/feature/action/add/FormFeature.js","containers/private/management/feature/action/edit/edit.js","redux/feature/actions.js","containers/private/management/feature/index.js","containers/private/management/location/function/index.js","containers/private/management/location/action/layout.js","containers/private/management/location/action/add/FormLocation.js","containers/private/management/location/action/edit/edit.js","redux/location/actions.js","containers/private/management/location/index.js","containers/private/management/packages/function/index.js","containers/private/management/packages/action/layout.js","containers/private/management/packages/action/add/FormPackages.js","containers/private/management/packages/action/edit/edit.js","redux/packages/actions.js","containers/private/management/packages/index.js","containers/private/management/payment/function/index.js","containers/private/management/payment/action/layout.js","containers/private/management/payment/action/add/FormPayment.js","containers/private/management/payment/action/edit/edit.js","redux/payment/actions.js","containers/private/management/payment/index.js","containers/private/management/procedure/function/index.js","containers/private/management/procedure/action/layout.js","containers/private/management/procedure/action/add/FormProcedure.js","containers/private/management/procedure/action/edit/edit.js","redux/procedure/actions.js","containers/private/management/procedure/index.js","containers/private/route.js","containers/private/layout-management/index.js","app/AppRoute.js","containers/private/pricing/pricing.js","app/App.js","views/page/product/QuickBook.js","views/page/product/Sidebar.js","views/layout/Footer.js","containers/filterbar/FunctionFilter.js","containers/step/Step.js","views/page/product/ItemCar.js","views/page/product/GridCard.js","components/pagination/Pagination.js","views/page/product/index.js","views/page/detail/sidebar/FormContent.js","views/page/detail/sidebar/Sidebar.js","redux/car-detail/actProduct.js","views/page/detail/content/index.js","views/page/detail/index.js","views/page/info-order/sidebar/FormContent.js","views/page/info-order/sidebar/Sidebar.js","views/page/info-order/content/index.js","views/page/info-order/index.js","views/page/final/sidebar/InfoCustomer.js","views/page/final/sidebar/InfoDetail.js","views/page/final/sidebar/Sidebar.js","views/page/final/content/index.js","views/page/final/index.js","router.js","index.js","images/car/hyundai.png"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","auth","arguments","length","undefined","action","type","auth0","product","listProduct","price","name","products","state","Object","objectSpread","listCar","car","data","init","carDetail","item","number","numberData","listPARTNER","PARTNER","listORDERS","ORDERS","listTYPECAR","TYPECAR","listCUSTOMER","CUSTOMER","listFEATURE","FEATURE","listLOCATION","LOCATION","listPACKAGE","PACKAGE","listPAYMENT","PAYMENT","listPROCEDURE","PROCEDURE","appReducers","combineReducers","itemCar","numberCar","partner","itemPartner","numberDataPartner","orders","itemOrders","numberDataOrders","typecar","itemTypecar","numberTypecar","customer","itemCustomer","numberCustomer","feature","itemFeature","numberFeature","itemLocation","numberLocation","packages","itemPackages","numberPackages","payment","itemPayment","numberPayment","procedure","itemProcedure","numberProcedure","options","key","label","leftIcon","children","settings","apiUrl","API_URL_S","API_URL_IAM","API_URL_REGISTER","concat","API_URL_LOGIN","callRegisterAPI","method","body","IAM","axios","url","config","headers","content-type","accept","authorization","catch","err","actGetIAM","object","grant_type","apikey","dispatch","callGetIAM","then","res","console","log","sessionStorage","setItem","error","callApi","endpoint","access-control-request-origin","ACCESS_TOKEN","actRegisterRequest","user","emails","value","email","userName","username","password","callApis","actLogin","showNotification","message","description","notification","placement","FormItem","Form","Item","RegistrationForm","confirmDirty","autoCompleteResult","dataAPI","handleSubmit","e","preventDefault","_this","props","form","validateFieldsAndScroll","values","onClose","handleConfirmBlur","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","getFieldDecorator","this","react_default","a","createElement","es_form","onSubmit","layout","rules","required","input","placeholder","validator","onBlur","es_button","style","float","htmlType","Component","FormRegister","create","withRouter","connect","actRegister","getItem","LoginForm","handleLoginRequest","login_FormItem","FormLogin","CONST_VARIABLE","access_token","removeItem","App","visible","childrenDrawer","showDrawer","showChildrenDrawer","onChildrenDrawerClose","_this$props","styleProps","componentWillShow","drawer","title","width","height","mask","maskClosable","maskStyle","className","zIndex","closable","destroyOnClose","getContainer","lastIndex","updateIndex","SubMenu","Menu","HeaderContent","current","visibleLogin","visibleRegister","getMenuItem","_ref","singleOption","icon","map","child","menu","Link","to","onCloseLogin","showDrawerLogin","onCloseRegister","showDrawerRegister","handleClick","_this2","listPropForDrawerLogin","color","backgroundColor","hasButtonFooter","login","listPropForDrawerRegister","page_register","onClick","selectedKeys","mode","Drawer_App","ListCarSlider","listParner","image","banner1","banner2","banner3","lib","showThumbs","showArrows","infiniteLoop","swipeScrollTolerance","autoPlay","interval","showStatus","onChange","onClickItem","onClickThumb","slide","id","src","alt","Option","Select","range","start","end","result","i","push","BookCar","city","dateRental","dateReturn","disable","disabledDate","moment","endOf","disabledDateTime","disabledHours","splice","disabledMinutes","disabledSeconds","disabledRangeTime","_","handleCityChange","val","onChangeDateRental","dateString","onChangeDateReturn","numDayRental","Date","getDate","formItemLayout","formLayout","labelCol","span","wrapperCol","row","es_col","QuickBook_FormItem","assign","es_select","defaultValue","date_picker","format","disabledTime","pathname","disabled","QuickBook","Content","ListCars","sm","md","home_QuickBook","Header","Layout","App_Header","App_Content","layout_Content","BreadcrumbContent","breadcrumb","createBrowserHistory","MenuItemGroup","ItemGroup","Sider","history","reload","defaultSelectedKeys","defaultOpenKeys","sidebar_SubMenu","FunctionContent","fullScreen","visibled","showDrawerAdd","setFullScreen","handleFullScreenMode","setNotFullScreen","size","theme","rtl","document","getElementsByTagName","getAttribute","withDirection","data-rtl","PanelWrapper","styled","div","_templateObject","WithDirection","table","bordered","rowKey","indentSize","scroll","pagination","showPageSizeOptions","SVGComponentTransferFunctionElement","defaultPageSize","pageSizeOptions","showQuickJumper","showSizeChanger","simple","showTotal","total","Search","Input","components","header","cell","onResize","restProps","objectWithoutProperties","react_resizable","TableContent","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleResize","index","_ref2","columns","nextColumns","toConsumableArray","getListFilterAttr","info","filtered","listFilterAttr","keys","ind","getListSorterAttr","sorted","listSortedAttr","renderFilterInfo","event","vals","clearFiltered","renderSorterInfo","_this$props2","nameButtonSort","field","order","clearSorted","_this$props3","rowSelection","col","onHeaderCell","column","configPagination","onShowSizeChange","display","marginTop","react_csv","onSearch","dataSource","onRow","record","React","getFunction","attr","actions","filter","act","attrbtn","render","renderTriggerItem","listTrigger","attribute","trigger","attri","singleTrigger","attrbTrigger","findTriggerWithAttr","Button_default","FormLayoutContent","findFieldWithAttr","listFields","singleField","attrbField","getOptionRule","colValues","validation","checkHasRule","initialValue","submit","formID","layouts","classNames","rowForm","gutter","cols","_cols$width","lg","xl","xxl","attrbLayout","FormView_FormItem","require","_default","triggerChange","checkRule","option","optionsRule","Input_FormItem","TextArea","TextArea_FormItem","autosize","minRows","maxRows","Email_FormItem","NumberInput_FormItem","PasswordInput_FormItem","PhoneNumberInput_FormItem","handleChange","nextProps","Select_FormItem","showSearch","Select_Option","text","MultiSelect_FormItem","MultiSelect_Option","es_radio","checked","Checkbox_FormItem","es_checkbox","Link_FormItem","link","DatePicker_FormItem","Url_FormItem","content","getElementById","click","dataType","Input_default","TextArea_default","Email_default","PasswordInput_default","NumberInput_default","PhoneNumberInput_default","Select_default","MultiSelect_default","Checkbox_default","RadioButton_default","Link_default","DatePicker_default","Url_default","renderFormItem","FormView","FormActions","edit_view","edit_submit","FormEditContent","changeView","edit","onSubmitAdd","purchDate","dataSubmit","ptp_form_layout_default","obj","onSubmitEdit","brank","reqCountData","accesstoken","actCountData","reqLoadDataPaging","pageIndex","pageSize","actLoadDataPaging","reqFindCar","actFindCar","actDeleteCar","actUpdateCar","actAddCar","CarManagement","fullScreenMode","visibledAdd","visibledEdit","filteredInfo","sortedInfo","selectedRowKeys","recordSelected","idEdit","onCloseAdd","showDrawerEdit","handleFindCar","onCloseEdit","onSelectChange","filters","sorter","onRowSelect","clearFilters","arrayVal","indexOf","attrFilter","defineProperty","handleChangeSelectInRow","handleOnSearch","handleSearchCar","_this$state","loadDataPaging","countAllCar","handleAddCar","handleDelete","handleDeleteCar","handleSubmitEdit","handleUpdateCar","_this$state2","_this$state3","_this$state4","dataIndex","b","sortOrder","columnKey","defaultSortOrder","typeCar","align","page","hideDefaultSelections","selections","onSelect","Array","changableRowKeys","newSelectedRowKeys","listPropForDrawer","FormCar","listPropForDrawerEdit","edit_edit","Panel_style","management_car_function","ptp_table","Car","reqAddCar","reqUpdateCar","reqDeleteCar","keyword","reqSearchCar","FormAddContent","Partner","nameCompany","phoneNumber","actFindPartner","actDeletePartner","actUpdatePartner","actAddPartner","PartnerManagement","handleFindPartner","handleSearchPartner","countAllPartner","handleAddPartner","handleDeletePartner","handleUpdatePartner","numberPartner","FormPartner","action_edit_edit","management_partner_function","reqAddPartner","reqFindPartner","reqUpdatePartner","reqDeletePartner","reqSearchPartner","nameCustomer","nameCar","priceOrder","actFindOrders","actDeleteOrders","actUpdateOrders","actAddOrders","OrderManagement","handleFindOrder","handleSearchOrder","countAllOrder","handleAddOrder","handleDeleteOrder","handleUpdateOrder","typeOrder","numberOrder","FormOrder","orders_action_edit_edit","management_orders_function","Orders","reqAddOrders","reqFindOrders","reqUpdateOrders","reqDeleteOrders","reqSearchOrders","Typecar","typeDescription","actFindTypecar","actDeleteTypecar","actUpdateTypecar","actAddTypecar","TypecarManagement","handleFindTypecar","handleSearchTypecar","countAllTypecar","handleAddTypecar","handleDeleteTypecar","handleUpdateTypecar","FormTypecar","typecar_action_edit_edit","management_typecar_function","reqAddTypecar","reqFindTypecar","reqUpdateTypecar","reqDeleteTypecar","reqSearchTypecar","fistNameAndLastName","actFindCustomer","actDeleteCustomer","actUpdateCustomer","actAddCustomer","CustomerManagement","handleFindCustomer","handleSearchCustomer","countAllCustomer","handleAddCustomer","handleDeleteCustomer","handleUpdateCustomer","sortcustomer","defaultSortCustomer","typeCustomer","sortCustomer","FormCustomer","customer_action_edit_edit","management_customer_function","Customer","reqAddCustomer","reqFindCustomer","reqUpdateCustomer","reqDeleteCustomer","reqSearchCustomer","nameFeature","actFindFeature","actDeleteFeature","actUpdateFeature","actAddFeature","FeatureManagement","handleFindFeature","handleSearchFeature","countAllFeature","handleAddFeature","handleDeleteFeature","handleUpdateFeature","sortfeature","defaultSortFeature","typeFeature","sortFeature","FormFeature","feature_action_edit_edit","management_feature_function","Feature","reqAddFeature","reqFindFeature","reqUpdateFeature","reqDeleteFeature","reqSearchFeature","country","address","actFindLocation","actDeleteLocation","actUpdateLocation","actAddLocation","LocationManagement","handleFindLocation","handleSearchLocation","countAllLocation","handleAddLocation","handleDeleteLocation","handleUpdateLocation","sortlocation","FormLocation","location_action_edit_edit","management_location_function","Location","reqAddLocation","reqFindLocation","reqUpdateLocation","reqDeleteLocation","reqSearchLocation","actFindPackage","actDeletePackage","actUpdatePackage","actAddPackage","PackagesManagement","handleFindPackages","handleSearchPackages","countAllPackages","handleAddPackages","handleDeletePackages","handleUpdatePackages","sortpackages","defaultSortPackages","typePackages","sortPackages","FormPackages","packages_action_edit_edit","management_packages_function","Package","reqAddPackage","reqFindPackage","reqUpdatePackage","reqDeletePackage","reqSearchPackage","namePayments","actFindPayment","actDeletePayment","actUpdatePayment","actAddPayment","PaymentManagement","handleFindPayment","handleSearchPayment","countAllPayment","handleAddPayment","handleDeletePayment","handleUpdatePayment","sortpayment","defaultSortPayment","typePayment","sortPayment","FormPayment","payment_action_edit_edit","management_payment_function","Payment","reqAddPayment","reqFindPayment","reqUpdatePayment","reqDeletePayment","reqSearchPayment","actFindProcedure","actDeleteProcedure","actUpdateProcedure","actAddProcedure","ProcedureManagement","handleFindProcedure","handleSearchProcedure","countAllProcedure","handleAddProcedure","handleDeleteProcedure","handleUpdateProcedure","sortprocedure","defaultSortProcedure","typeProcedure","sortProcedure","FormProcedure","procedure_action_edit_edit","management_procedure_function","Procedure","reqAddProcedure","reqFindProcedure","reqUpdateProcedure","reqDeleteProcedure","reqSearchProcedure","adminRoutes","path","exact","component","private_management_car","private_management_partner","private_management_orders","private_management_typecar","private_management_customer","private_management_feature","private_management_location","private_management_packages","private_management_payment","private_management_procedure","AppRouter","singleRoute","otherProps","Route","LayoutContent","flexDirection","border","layout_management_sidebar","layout_management_Content","components_breadcrumb","route","layout_management","Pricing","renderListDetail","dataRender","react_infinite_scroller_default","initialLoad","pageStart","useWindow","list","itemLayout","renderItem","Meta","avatar","plus2Image","showModal","onCloseModal","background","pricing_pricing","modal","onCancel","footer","app_App_Content","AppRoute","onChangeCity","product_QuickBook_FormItem","QuickBook_Option","SidebarContent","filterPrice","priceStart","priceEnd","onSearchPrice","justifyContent","alignItems","margin","padding","product_QuickBook","es_slider","FooterContent","FunctionFilter_Search","labelInValue","FunctionFilter_Option","Step","Steps","StepContent","steps","step","ItemCar","card","cover","imageLink","textAlign","fontSize","gridStyle","GridItem","renderListCard","product_ItemCar","PaginationContent","es_pagination","defaultCurrent","Footer","ContentApp","collapsed","toggle","loadProductAct","searchProductAct","loadCountData","product_Header","product_Content","step_Step","Sidebar","FunctionFilter","GridCard","Pagination","product_Footer","reqSearchProduct","getDateRental","dateEnd","dateStart","yearStart","getFullYear","monthEnd","getMonth","monthStart","month","day","onOk","rowStyleOrder","FormContent_FormItem","FormContent_Option","dist_default","env","client","sandbox","production","currency","locale","tagline","shape","onError","onSuccess","FormContent","actLoadDataDatailOfCar","ContentInfoCar","handleDataDetail","rate","allowClear","arrFeature","split","pop","arrProcedure","detail","loadDataDetailOfCar","params","detail_Header","detail_Content","detail_content","sidebar_Sidebar","detail_Footer","imageCar","sidebar_FormContent","NormalLoginForm","content_FormItem","prefix","content_Option","content_TextArea","rows","WrappedNormalLoginForm","info_order_Header","info_order_Content","info_order_sidebar_Sidebar","info_order_content","info_order_Footer","InfoCustomer","InfoDetail","iconSuccess","final_Header","final_Content","final_sidebar_Sidebar","final_content","final_Footer","PublicRoutes","Router","SearchCar","DetailCar","InfoRentalCar","FinalRentalCar","MainApp","reactRouterMiddleware","routerMiddleware","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleWares","thunk","store","createStore","connectRouter","applyMiddleware","apply","Apply","es","router","ReactDOM","src_Apply","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f3c4c0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner2.ed47e129.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner3.edb1220f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner6.31bd98a7.png\";","module.exports = __webpack_public_path__ + \"static/media/step3.530f61c4.png\";","module.exports = __webpack_public_path__ + \"static/media/banner6.31bd98a7.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as Types from './ActionTypes';\r\nvar auth0 = false;\r\n   \r\nconst auth = (state = auth0, action) => {\r\n    switch (action.type) {\r\n        case Types.LOGIN: \r\n            return action.auth0;\r\n        default: return auth0;\r\n        }\r\n    };\r\n\r\nexport default auth;","export const REGISTER = 'REGISTER';\r\nexport const LOGIN = 'LOGIN';","import * as Types from './ActionTypes';\r\nvar product ={\r\n   listProduct:[\r\n    {\r\n        price:'500 000',\r\n        name:'Toyota'\r\n    },\r\n    {\r\n        price:'200 000',\r\n        name:'Toyota'\r\n    },\r\n    {\r\n        price:'700 000',\r\n        name:'Toyota'\r\n    },\r\n    {\r\n        price:'200 000',\r\n        name:'Toyota'\r\n    },\r\n    {\r\n        price:'250 000',\r\n        name:'Toyota'\r\n    },\r\n    {\r\n        price:'200 000',\r\n        name:'Toyota'\r\n    },\r\n   ]\r\n};\r\n   \r\nconst products = (state = product, action) => {\r\n    switch (action.type) {\r\n        case Types.LOAD_PRODUCT:\r\n            return {...state};\r\n            // return {...state,listProduct:action.listProduct};\r\n            default: return {...state};\r\n        }\r\n    };\r\n\r\nexport default products;","export const LOAD_PRODUCT = 'LOAD_PRODUCT';","import * as Types from './ActionTypes';\r\nvar listCar = [];\r\n   \r\nconst car = (state = listCar, action) => {\r\n    switch (action.type) {\r\n        case Types.LOAD_CAR: \r\n            return action.data;\r\n        case Types.ADD_CAR: \r\n            return action.data;\r\n        case Types.DELETE_CAR: \r\n            return action.data;\r\n        case Types.UPDATE_CAR: \r\n            return action.data;\r\n        \r\n        default: return state;\r\n        }\r\n    };\r\n\r\nexport default car;","export const LOAD_CAR = 'LOAD_CAR';\r\n\r\nexport const ADD_CAR= 'ADD_CAR';\r\nexport const EDIT_CAR= 'EDIT_CAR';\r\nexport const UPDATE_CAR= 'UPDATE_CAR';\r\nexport const DELETE_CAR= 'DELETE_CAR';\r\nexport const IS_FETCHING_CAR= 'IS_FETCHING_CAR';\r\nexport const FETCH_CAR_FILTER = 'FETCH_CAR_FILTER';\r\nexport const FIND_CAR= 'FIND_CAR';\r\nexport const COUNT_DATA= 'COUNT_DATA';","import * as Types from 'redux/car-detail/ActionTypes';\r\nvar init = {};\r\n   \r\nconst carDetail = (state = init, action) => {\r\n    switch (action.type) {\r\n        case Types.LOAD_DETAIL_CAR:\r\n            return action.carDetail;\r\n            // return {...state,listProduct:action.listProduct};\r\n            default: return state;\r\n        }\r\n    };\r\n\r\nexport default carDetail;","export const LOAD_DETAIL_CAR = 'LOAD_DETAIL_CAR';","import * as Types from './ActionTypes';\r\nvar car ={};\r\n   \r\nconst item = (state = car, action) => {\r\n    switch (action.type) {\r\n        case Types.FIND_CAR: \r\n            return action.data;\r\n        default: return {...state};\r\n        }\r\n    };\r\n\r\nexport default item;","import * as Types from './ActionTypes';\r\nvar number = 5;\r\n   \r\nconst numberData = (state = number, action) => {\r\n    switch (action.type) {\r\n        case Types.COUNT_DATA: \r\n            number= action.data;\r\n            return action.data;\r\n        default: return state;\r\n        }\r\n    };\r\n\r\nexport default numberData;","import * as Types from 'redux/partner/ActionTypes';\r\nvar listPARTNER = [];\r\n   \r\nconst PARTNER = (state = listPARTNER, action) => {\r\n    switch (action.type) {\r\n        case Types.LOAD_PARTNER: \r\n            return action.data;\r\n        case Types.ADD_PARTNER: \r\n            return action.data;\r\n        case Types.DELETE_PARTNER: \r\n            return action.data;\r\n        case Types.UPDATE_PARTNER: \r\n            return action.data;\r\n        \r\n        default: return state;\r\n        }\r\n    };\r\n\r\nexport default PARTNER;","export const LOAD_PARTNER = 'LOAD_PARTNER';\r\n\r\nexport const ADD_PARTNER= 'ADD_PARTNER';\r\nexport const EDIT_PARTNER= 'EDIT_PARTNER';\r\nexport const UPDATE_PARTNER= 'UPDATE_PARTNER';\r\nexport const DELETE_PARTNER= 'DELETE_PARTNER';\r\nexport const IS_FETCHING_PARTNER= 'IS_FETCHING_PARTNER';\r\nexport const FETCH_PARTNER_FILTER = 'FETCH_PARTNER_FILTER';\r\nexport const FIND_PARTNER= 'FIND_PARTNER';\r\nexport const COUNT_DATA= 'COUNT_DATA';","import * as Types from 'redux/partner/ActionTypes';\r\nvar PARTNER ={};\r\n   \r\nconst item = (state = PARTNER, action) => {\r\n    switch (action.type) {\r\n        case Types.FIND_PARTNER: \r\n            return action.data;\r\n        default: return {...state};\r\n        }\r\n    };\r\n\r\nexport default item;","import * as Types from 'redux/partner/ActionTypes';\r\nvar number = 5;\r\n   \r\nconst numberData = (state = number, action) => {\r\n    switch (action.type) {\r\n        case Types.COUNT_DATA: \r\n            number= action.data;\r\n            return action.data;\r\n        default: return state;\r\n        }\r\n    };\r\n\r\nexport default numberData;","import * as Types from 'redux/orders/ActionTypes';\r\nvar listORDERS = [];\r\n   \r\nconst ORDERS = (state = listORDERS, action) => {\r\n    switch (action.type) {\r\n        case Types.LOAD_ORDERS: \r\n            return action.data;\r\n        case Types.ADD_ORDERS: \r\n            return action.data;\r\n        case Types.DELETE_ORDERS: \r\n            return action.data;\r\n        case Types.UPDATE_ORDERS: \r\n            return action.data;\r\n        \r\n        default: return state;\r\n        }\r\n    };\r\n\r\nexport default ORDERS;","export const LOAD_ORDERS = 'LOAD_ORDERS';\r\n\r\nexport const ADD_ORDERS= 'ADD_ORDERS';\r\nexport const EDIT_ORDERS= 'EDIT_ORDERS';\r\nexport const UPDATE_ORDERS= 'UPDATE_ORDERS';\r\nexport const DELETE_ORDERS= 'DELETE_ORDERS';\r\nexport const IS_FETCHING_ORDERS= 'IS_FETCHING_ORDERS';\r\nexport const FETCH_ORDERS_FILTER = 'FETCH_ORDERS_FILTER';\r\nexport const FIND_ORDERS= 'FIND_ORDERS';\r\nexport const COUNT_DATA= 'COUNT_DATA';","import * as Types from 'redux/orders/ActionTypes';\r\nvar ORDERS ={};\r\n   \r\nconst item = (state = ORDERS, action) => {\r\n    switch (action.type) {\r\n        case Types.FIND_ORDERS: \r\n            return action.data;\r\n        default: return {...state};\r\n        }\r\n    };\r\n\r\nexport default item;","import * as Types from 'redux/orders/ActionTypes';\r\nvar number = 5;\r\n   \r\nconst numberData = (state = number, action) => {\r\n    switch (action.type) {\r\n        case Types.COUNT_DATA: \r\n            number= action.data;\r\n            return action.data;\r\n        default: return state;\r\n        }\r\n    };\r\n\r\nexport default numberData;","import * as Types from 'redux/typecar/ActionTypes';\r\nvar listTYPECAR = [];\r\n   \r\nconst TYPECAR = (state = listTYPECAR, action) => {\r\n    switch (action.type) {\r\n        case Types.LOAD_TYPECAR: \r\n            return action.data;\r\n        case Types.ADD_TYPECAR: \r\n            return action.data;\r\n        case Types.DELETE_TYPECAR: \r\n            return action.data;\r\n        case Types.UPDATE_TYPECAR: \r\n            return action.data;\r\n        \r\n        default: return state;\r\n        }\r\n    };\r\n\r\nexport default TYPECAR;","export const LOAD_TYPECAR = 'LOAD_TYPECAR';\r\n\r\nexport const ADD_TYPECAR= 'ADD_TYPECAR';\r\nexport const EDIT_TYPECAR= 'EDIT_TYPECAR';\r\nexport const UPDATE_TYPECAR= 'UPDATE_TYPECAR';\r\nexport const DELETE_TYPECAR= 'DELETE_TYPECAR';\r\nexport const IS_FETCHING_TYPECAR= 'IS_FETCHING_TYPECAR';\r\nexport const FETCH_TYPECAR_FILTER = 'FETCH_TYPECAR_FILTER';\r\nexport const FIND_TYPECAR= 'FIND_TYPECAR';\r\nexport const COUNT_DATA= 'COUNT_DATA';","import * as Types from 'redux/partner/ActionTypes';\r\nvar PARTNER ={};\r\n   \r\nconst item = (state = PARTNER, action) => {\r\n    switch (action.type) {\r\n        case Types.FIND_PARTNER: \r\n            return action.data;\r\n        default: return {...state};\r\n        }\r\n    };\r\n\r\nexport default item;","import * as Types from 'redux/partner/ActionTypes';\r\nvar number = 5;\r\n   \r\nconst numberData = (state = number, action) => {\r\n    switch (action.type) {\r\n        case Types.COUNT_DATA: \r\n            number= action.data;\r\n            return action.data;\r\n        default: return state;\r\n        }\r\n    };\r\n\r\nexport default numberData;","import * as Types from 'redux/customer/ActionTypes';\r\nvar listCUSTOMER = [];\r\n   \r\nconst CUSTOMER = (state = listCUSTOMER, action) => {\r\n    switch (action.type) {\r\n        case Types.LOAD_CUSTOMER: \r\n            return action.data;\r\n        case Types.ADD_CUSTOMER: \r\n            return action.data;\r\n        case Types.DELETE_CUSTOMER: \r\n            return action.data;\r\n        case Types.UPDATE_CUSTOMER: \r\n            return action.data;\r\n        \r\n        default: return state;\r\n        }\r\n    };\r\n\r\nexport default CUSTOMER;","export const LOAD_CUSTOMER = 'LOAD_CUSTOMER';\r\n\r\nexport const ADD_CUSTOMER= 'ADD_CUSTOMER';\r\nexport const EDIT_CUSTOMER= 'EDIT_CUSTOMER';\r\nexport const UPDATE_CUSTOMER= 'UPDATE_CUSTOMER';\r\nexport const DELETE_CUSTOMER= 'DELETE_CUSTOMER';\r\nexport const IS_FETCHING_CUSTOMER= 'IS_FETCHING_CUSTOMER';\r\nexport const FETCH_CUSTOMER_FILTER = 'FETCH_CUSTOMER_FILTER';\r\nexport const FIND_CUSTOMER= 'FIND_CUSTOMER';\r\nexport const COUNT_DATA= 'COUNT_DATA';","import * as Types from 'redux/customer/ActionTypes';\r\nvar CUSTOMER ={};\r\n   \r\nconst item = (state = CUSTOMER, action) => {\r\n    switch (action.type) {\r\n        case Types.FIND_CUSTOMER: \r\n            return action.data;\r\n        default: return {...state};\r\n        }\r\n    };\r\n\r\nexport default item;","import * as Types from 'redux/customer/ActionTypes';\r\nvar number = 5;\r\n   \r\nconst numberData = (state = number, action) => {\r\n    switch (action.type) {\r\n        case Types.COUNT_DATA: \r\n            number= action.data;\r\n            return action.data;\r\n        default: return state;\r\n        }\r\n    };\r\n\r\nexport default numberData;","import * as Types from 'redux/feature/ActionTypes';\r\nvar listFEATURE = [];\r\n   \r\nconst FEATURE = (state = listFEATURE, action) => {\r\n    switch (action.type) {\r\n        case Types.LOAD_FEATURE: \r\n            return action.data;\r\n        case Types.ADD_FEATURE: \r\n            return action.data;\r\n        case Types.DELETE_FEATURE: \r\n            return action.data;\r\n        case Types.UPDATE_FEATURE: \r\n            return action.data;\r\n        \r\n        default: return state;\r\n        }\r\n    };\r\n\r\nexport default FEATURE;","export const LOAD_FEATURE = 'LOAD_FEATURE';\r\n\r\nexport const ADD_FEATURE= 'ADD_FEATURE';\r\nexport const EDIT_FEATURE= 'EDIT_FEATURE';\r\nexport const UPDATE_FEATURE= 'UPDATE_FEATURE';\r\nexport const DELETE_FEATURE= 'DELETE_FEATURE';\r\nexport const IS_FETCHING_FEATURE= 'IS_FETCHING_FEATURE';\r\nexport const FETCH_FEATURE_FILTER = 'FETCH_FEATURE_FILTER';\r\nexport const FIND_FEATURE= 'FIND_FEATURE';\r\nexport const COUNT_DATA= 'COUNT_DATA';","import * as Types from 'redux/feature/ActionTypes';\r\nvar FEATURE ={};\r\n   \r\nconst item = (state = FEATURE, action) => {\r\n    switch (action.type) {\r\n        case Types.FIND_FEATURE: \r\n            return action.data;\r\n        default: return {...state};\r\n        }\r\n    };\r\n\r\nexport default item;","import * as Types from 'redux/feature/ActionTypes';\r\nvar number = 5;\r\n   \r\nconst numberData = (state = number, action) => {\r\n    switch (action.type) {\r\n        case Types.COUNT_DATA: \r\n            number= action.data;\r\n            return action.data;\r\n        default: return state;\r\n        }\r\n    };\r\n\r\nexport default numberData;","import * as Types from 'redux/location/ActionTypes';\r\nvar listLOCATION = [];\r\n   \r\nconst LOCATION = (state = listLOCATION, action) => {\r\n    switch (action.type) {\r\n        case Types.LOAD_LOCATION: \r\n            return action.data;\r\n        case Types.ADD_LOCATION: \r\n            return action.data;\r\n        case Types.DELETE_LOCATION: \r\n            return action.data;\r\n        case Types.UPDATE_LOCATION: \r\n            return action.data;\r\n        \r\n        default: return state;\r\n        }\r\n    };\r\n\r\nexport default LOCATION;","export const LOAD_LOCATION = 'LOAD_LOCATION';\r\n\r\nexport const ADD_LOCATION= 'ADD_LOCATION';\r\nexport const EDIT_LOCATION= 'EDIT_LOCATION';\r\nexport const UPDATE_LOCATION= 'UPDATE_LOCATION';\r\nexport const DELETE_LOCATION= 'DELETE_LOCATION';\r\nexport const IS_FETCHING_LOCATION= 'IS_FETCHING_LOCATION';\r\nexport const FETCH_LOCATION_FILTER = 'FETCH_LOCATION_FILTER';\r\nexport const FIND_LOCATION= 'FIND_LOCATION';\r\nexport const COUNT_DATA= 'COUNT_DATA';","import * as Types from 'redux/location/ActionTypes';\r\nvar LOCATION ={};\r\n   \r\nconst item = (state = LOCATION, action) => {\r\n    switch (action.type) {\r\n        case Types.FIND_LOCATION: \r\n            return action.data;\r\n        default: return {...state};\r\n        }\r\n    };\r\n\r\nexport default item;","import * as Types from 'redux/location/ActionTypes';\r\nvar number = 5;\r\n   \r\nconst numberData = (state = number, action) => {\r\n    switch (action.type) {\r\n        case Types.COUNT_DATA: \r\n            number= action.data;\r\n            return action.data;\r\n        default: return state;\r\n        }\r\n    };\r\n\r\nexport default numberData;","import * as Types from 'redux/packages/ActionTypes';\r\nvar listPACKAGE = [];\r\n   \r\nconst PACKAGE = (state = listPACKAGE, action) => {\r\n    switch (action.type) {\r\n        case Types.LOAD_PACKAGE: \r\n            return action.data;\r\n        case Types.ADD_PACKAGE: \r\n            return action.data;\r\n        case Types.DELETE_PACKAGE: \r\n            return action.data;\r\n        case Types.UPDATE_PACKAGE: \r\n            return action.data;\r\n        \r\n        default: return state;\r\n        }\r\n    };\r\n\r\nexport default PACKAGE;","export const LOAD_PACKAGE = 'LOAD_PACKAGE';\r\n\r\nexport const ADD_PACKAGE= 'ADD_PACKAGE';\r\nexport const EDIT_PACKAGE= 'EDIT_PACKAGE';\r\nexport const UPDATE_PACKAGE= 'UPDATE_PACKAGE';\r\nexport const DELETE_PACKAGE= 'DELETE_PACKAGE';\r\nexport const IS_FETCHING_PACKAGE= 'IS_FETCHING_PACKAGE';\r\nexport const FETCH_PACKAGE_FILTER = 'FETCH_PACKAGE_FILTER';\r\nexport const FIND_PACKAGE= 'FIND_PACKAGE';\r\nexport const COUNT_DATA= 'COUNT_DATA';","import * as Types from 'redux/packages/ActionTypes';\r\nvar PACKAGE ={};\r\n   \r\nconst item = (state = PACKAGE, action) => {\r\n    switch (action.type) {\r\n        case Types.FIND_PACKAGE: \r\n            return action.data;\r\n        default: return {...state};\r\n        }\r\n    };\r\n\r\nexport default item;","import * as Types from 'redux/packages/ActionTypes';\r\nvar number = 5;\r\n   \r\nconst numberData = (state = number, action) => {\r\n    switch (action.type) {\r\n        case Types.COUNT_DATA: \r\n            number= action.data;\r\n            return action.data;\r\n        default: return state;\r\n        }\r\n    };\r\n\r\nexport default numberData;","import * as Types from 'redux/payment/ActionTypes';\r\nvar listPAYMENT = [];\r\n   \r\nconst PAYMENT = (state = listPAYMENT, action) => {\r\n    switch (action.type) {\r\n        case Types.LOAD_PAYMENT: \r\n            return action.data;\r\n        case Types.ADD_PAYMENT: \r\n            return action.data;\r\n        case Types.DELETE_PAYMENT: \r\n            return action.data;\r\n        case Types.UPDATE_PAYMENT: \r\n            return action.data;\r\n        \r\n        default: return state;\r\n        }\r\n    };\r\n\r\nexport default PAYMENT;","export const LOAD_PAYMENT = 'LOAD_PAYMENT';\r\n\r\nexport const ADD_PAYMENT= 'ADD_PAYMENT';\r\nexport const EDIT_PAYMENT= 'EDIT_PAYMENT';\r\nexport const UPDATE_PAYMENT= 'UPDATE_PAYMENT';\r\nexport const DELETE_PAYMENT= 'DELETE_PAYMENT';\r\nexport const IS_FETCHING_PAYMENT= 'IS_FETCHING_PAYMENT';\r\nexport const FETCH_PAYMENT_FILTER = 'FETCH_PAYMENT_FILTER';\r\nexport const FIND_PAYMENT= 'FIND_PAYMENT';\r\nexport const COUNT_DATA= 'COUNT_DATA';","import * as Types from 'redux/payment/ActionTypes';\r\nvar PAYMENT ={};\r\n   \r\nconst item = (state = PAYMENT, action) => {\r\n    switch (action.type) {\r\n        case Types.FIND_PAYMENT: \r\n            return action.data;\r\n        default: return {...state};\r\n        }\r\n    };\r\n\r\nexport default item;","import * as Types from 'redux/payment/ActionTypes';\r\nvar number = 5;\r\n   \r\nconst numberData = (state = number, action) => {\r\n    switch (action.type) {\r\n        case Types.COUNT_DATA: \r\n            number= action.data;\r\n            return action.data;\r\n        default: return state;\r\n        }\r\n    };\r\n\r\nexport default numberData;","import * as Types from 'redux/procedure/ActionTypes';\r\nvar listPROCEDURE = [];\r\n   \r\nconst PROCEDURE = (state = listPROCEDURE, action) => {\r\n    switch (action.type) {\r\n        case Types.LOAD_PROCEDURE: \r\n            return action.data;\r\n        case Types.ADD_PROCEDURE: \r\n            return action.data;\r\n        case Types.DELETE_PROCEDURE: \r\n            return action.data;\r\n        case Types.UPDATE_PROCEDURE: \r\n            return action.data;\r\n        \r\n        default: return state;\r\n        }\r\n    };\r\n\r\nexport default PROCEDURE;","export const LOAD_PROCEDURE = 'LOAD_PROCEDURE';\r\n\r\nexport const ADD_PROCEDURE= 'ADD_PROCEDURE';\r\nexport const EDIT_PROCEDURE= 'EDIT_PROCEDURE';\r\nexport const UPDATE_PROCEDURE= 'UPDATE_PROCEDURE';\r\nexport const DELETE_PROCEDURE= 'DELETE_PROCEDURE';\r\nexport const IS_FETCHING_PROCEDURE= 'IS_FETCHING_PROCEDURE';\r\nexport const FETCH_PROCEDURE_FILTER = 'FETCH_PROCEDURE_FILTER';\r\nexport const FIND_PROCEDURE= 'FIND_PROCEDURE';\r\nexport const COUNT_DATA= 'COUNT_DATA';","import * as Types from 'redux/procedure/ActionTypes';\r\nvar PROCEDURE ={};\r\n   \r\nconst item = (state = PROCEDURE, action) => {\r\n    switch (action.type) {\r\n        case Types.FIND_PROCEDURE: \r\n            return action.data;\r\n        default: return {...state};\r\n        }\r\n    };\r\n\r\nexport default item;","import * as Types from 'redux/procedure/ActionTypes';\r\nvar number = 5;\r\n   \r\nconst numberData = (state = number, action) => {\r\n    switch (action.type) {\r\n        case Types.COUNT_DATA: \r\n            number= action.data;\r\n            return action.data;\r\n        default: return state;\r\n        }\r\n    };\r\n\r\nexport default numberData;","import { combineReducers } from 'redux';\r\nimport auth0 from 'redux/auth0/auth0';\r\nimport products from 'redux/product/product';\r\nimport car from 'redux/car/car';\r\nimport carDetail from 'redux/car-detail/carDetail';\r\nimport itemCar from 'redux/car/itemCar';\r\nimport numberCar from 'redux/car/numberData';\r\n\r\nimport partner from 'redux/partner/partner';\r\nimport itemPartner from 'redux/partner/itemPartner';\r\nimport numberDataPartner from 'redux/partner/numberDataPartner';\r\n\r\nimport orders from 'redux/orders/orders';\r\nimport itemOrders from 'redux/orders/itemOrders';\r\nimport numberDataOrders from 'redux/orders/numberDataOrders';\r\n\r\nimport typecar from 'redux/typecar/typecar';\r\nimport itemTypecar from 'redux/typecar/itemTypecar';\r\nimport numberTypecar from 'redux/typecar/numberTypecar';\r\n\r\nimport customer from 'redux/customer/customer';\r\nimport itemCustomer from 'redux/customer/itemCustomer';\r\nimport numberCustomer from 'redux/customer/numberCustomer';\r\n\r\n\r\n//#endregion\r\nimport feature from 'redux/feature/feature';\r\nimport itemFeature from 'redux/feature/itemFeature';\r\nimport numberFeature from 'redux/feature/numberFeature';\r\n\r\nimport location from 'redux/location/location';\r\nimport itemLocation from 'redux/location/itemLocation';\r\nimport numberLocation  from 'redux/location/numberLocation';\r\n//#endregion\r\nimport packages from 'redux/packages/packages';\r\nimport itemPackages from 'redux/packages/itemPackages';\r\nimport numberPackages  from 'redux/packages/numberPackages';\r\n\r\nimport payment from 'redux/payment/payment';\r\nimport itemPayment from 'redux/payment/itemPayment';\r\nimport numberPayment  from 'redux/payment/numberPayment';\r\n//#endregion\r\nimport procedure from 'redux/procedure/procedure';\r\nimport itemProcedure from 'redux/procedure/itemProcedure';\r\nimport numberProcedure  from 'redux/procedure/numberProcedure';\r\nconst appReducers = combineReducers({\r\n    auth0,\r\n    products,\r\n\r\n    car,\r\n    carDetail,\r\n    itemCar,\r\n    numberCar,\r\n\r\n    partner,\r\n    itemPartner,\r\n    numberDataPartner,\r\n\r\n    orders,\r\n    itemOrders,\r\n    numberDataOrders,\r\n\r\n    typecar,\r\n    itemTypecar,\r\n    numberTypecar,\r\n    \r\n    customer, \r\n    itemCustomer, \r\n    numberCustomer,\r\n   \r\n    //#endregion\r\n    feature,\r\n    itemFeature,\r\n    numberFeature,\r\n    //#endregion\r\n    location,\r\n    itemLocation,\r\n    numberLocation,\r\n    //#endregion\r\n    packages,\r\n    itemPackages,\r\n    numberPackages,\r\n    //#endregion\r\n    payment,\r\n    itemPayment,\r\n    numberPayment,\r\n    //#endregion\r\n    procedure,\r\n    itemProcedure,\r\n    numberProcedure,\r\n \r\n});\r\n\r\n\r\nexport default appReducers;","\r\nconst options = [\r\n    {\r\n      key: \"\",\r\n      label: \"Trang chủ\",\r\n      leftIcon: \"ion-pie-graph\"\r\n    },\r\n    {\r\n      key: \"dashboard\",\r\n      label: \"Dùng thử\",\r\n      leftIcon: \"ion-pie-graph\"\r\n    },\r\n    {\r\n      key: \"about\",\r\n      label: \"Giới thiệu\",\r\n      leftIcon: \"ion-pie-graph\"\r\n    },\r\n    {\r\n      key: \"vietnam\",\r\n      label: \"Việt Nam\",\r\n      leftIcon: \"ion-ios-people\",\r\n      children: [\r\n        {\r\n          key: \"english\",\r\n          label: \"English\" \r\n        },\r\n        {\r\n          key: \"vietnam\",\r\n          label: \"Viet Name\" \r\n        },\r\n      ]\r\n    },\r\n  ];\r\n  export default options;","export const tenantId = \"d5b87848-1b6b-4b73-9f62-bd230025746c\";\r\nexport const secret = \"NDJjMGI2ODctZGM2YS00MjVhLWExMzMtNGI4NDFjNDE2MzRh\";\r\nexport const apikeys = \"aIr9I1oFfXQTYk_6p4ddNVe8LB4wbO70YPCmADnfkAmx\";\r\nexport const clientId = \"e65187a3-b3eb-4df8-8ba4-5f586e3dce2a\";\r\nexport default {\r\n    apiUrl: 'http://yoursite.com/api/',\r\n    API_URL_S : 'https://demowebaspnetcore.azurewebsites.net',\r\n    // API_URL_S : 'https://localhost:5001',\r\n    API_URL_IAM: 'https://iam.bluemix.net/identity/token',\r\n    API_URL_REGISTER: `https://appid-management.ng.bluemix.net/management/v4/${tenantId}/cloud_directory/sign_up`,\r\n    API_URL_LOGIN: `https://appid-oauth.ng.bluemix.net/oauth/v3/d5b87848-1b6b-4b73-9f62-bd230025746c/token`,\r\n  };\r\n\r\n  export const ACCESS_TOKEN= '';","import axios from 'axios';\r\nimport config from 'settings/index';\r\n\r\nexport const callRegisterAPI=( method = 'GET', body,IAM) =>{\r\n    return axios({\r\n        url: `${config.API_URL_REGISTER}`,\r\n        method,\r\n        headers:{\r\n            'content-type' : 'application/json',\r\n            'accept' : 'application/json',\r\n            'authorization' : `${IAM}`\r\n        },\r\n        data: body\r\n    }).catch(err => {\r\n        return (err);\r\n    });\r\n};\r\nexport const callLogin=( method = 'GET', body,username,password) =>{\r\n    return axios({\r\n        url: `${config.API_URL_LOGIN}`,\r\n        method,\r\n        headers:{\r\n            'content-type': 'application/x-www-form-urlencoded',\r\n            'accept': 'application/json',\r\n            'Authorization':'Basic '+btoa(`${username}:${password}`)\r\n        },\r\n        data: body\r\n    }).catch(err => {\r\n        return (err);\r\n    });\r\n};\r\nexport const callGetIAM=( method = 'GET', body) =>{\r\n    return axios({\r\n        url: `${config.API_URL_IAM}`,\r\n        method,\r\n        headers:{\r\n            'content-type': 'application/x-www-form-urlencoded',\r\n            'accept': 'application/json'\r\n        },\r\n        data: body\r\n    }).catch(err => {\r\n        return (err);\r\n    });\r\n};\r\n\r\nexport default function callApi(endpoint, method = 'GET', body) {\r\n    return axios({\r\n        url: `${config.API_URL_S}/${endpoint}`,\r\n        method,\r\n        headers:{\r\n            'access-control-request-origin':'*',\r\n            'content-type' : 'application/json',\r\n        },\r\n        data: body\r\n    }).catch(err => {\r\n        return (err);\r\n    });\r\n};\r\n","import {callRegisterAPI,callGetIAM} from 'utils/callAPI/apiCallerNotToken';\r\nimport {apikeys, clientId, secret} from 'settings/index';\r\n\r\nexport const actRegister = (data) => {\r\n    const IAM = sessionStorage.getItem('IAM');\r\n    return (dispatch) => {\r\n        return callRegisterAPI('POST', data,IAM).then((res) => {\r\n            console.log(res.data);\r\n            \r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\nexport const actLogin = (data,) => {\r\n    // const IAM = sessionStorage.getItem('IAM');\r\n    const username=clientId;\r\n    const password=secret;\r\n    return (dispatch) => {\r\n        return callRegisterAPI('POST', data,username,password).then((res) => {\r\n            console.log(res.data);\r\n            \r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\nexport const actGetIAM = () => {\r\n    const object = {\r\n        data:{\r\n            grant_type : 'urn:ibm:params:oauth:grant-type:apikey',\r\n            apikey : apikeys\r\n        },\r\n    }\r\n    return (dispatch) => {\r\n        return callGetIAM('POST', object.data).then((res) => {\r\n            console.log(res);\r\n            sessionStorage.setItem('IAM',res.data);\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\n","import axios from 'axios';\r\nimport  config from 'settings/index';\r\n\r\nexport default function callApi(endpoint, method = 'GET', body,accesstoken) {\r\n    return axios({\r\n        url: `${config.API_URL_S}/${endpoint}`,\r\n        method,\r\n        headers:{\r\n            'access-control-request-origin':'*',\r\n            'content-type' : 'application/json-patch+json',\r\n            'accept':'application/json'\r\n            // 'Authorization': 'Bearer ' + accesstoken,\r\n        },\r\n        data: body\r\n    }).catch(err => {\r\n        return (err);\r\n    });\r\n};\r\n","export const LOGIN ='LOGIN';\r\nexport const REGISTER ='REGISTER';\r\nexport const ACCESS_TOKEN ='ACCESS_TOKEN';","import callApis from 'utils/callAPI/apiCaller';\r\nimport * as CONST_VARIABLE from 'utils/const/index';\r\nimport * as Types from 'redux/auth0/ActionTypes';\r\nexport const actRegisterRequest = (user) => {\r\n    const body={\r\n        emails:[\r\n            {\r\n                value: user.email\r\n            }   \r\n        ],\r\n        userName:user.username,\r\n        password:user.password\r\n    } \r\n    return callApis('AppID/RegisterAccount', 'POST', body,'accesstoken').then(res => {\r\n        sessionStorage.setItem(CONST_VARIABLE.REGISTER, body);\r\n    }).catch(error => console.log(\"Fetch Error \"+ error));\r\n}\r\n\r\nexport const actLoginRequest = (user) => {\r\n    return (dispatch) => {\r\n        return callApis(`AppID/LoginAccount`, 'POST', user,'accesstoken').then(res => {\r\n            if(res.data){\r\n                sessionStorage.setItem(CONST_VARIABLE.LOGIN, user);             \r\n                sessionStorage.setItem(CONST_VARIABLE.ACCESS_TOKEN, res.data.access_token);\r\n                dispatch(actLogin(true));\r\n            } \r\n            else sessionStorage.removeItem(CONST_VARIABLE.LOGIN);\r\n        });\r\n    }\r\n};\r\n\r\nexport const actLogin=(auth0)=>{\r\n    return {\r\n        type: Types.LOGIN,\r\n        auth0\r\n    }\r\n}\r\n\r\n","import {notification } from 'antd';\r\nexport const showNotification=(message,description,options,type)=>{\r\n    notification[type]({\r\n        message: message,\r\n        description: description,\r\n    });\r\n    notification.config({\r\n        placement: options,\r\n    });\r\n}","import { Form, Input,  Checkbox, Button,  } from 'antd';\r\nimport React,{Component} from 'react';\r\nimport {actRegister,actGetIAM} from 'actions/auth0/index';\r\nimport {actRegisterRequest} from 'actions/auth0/auth0';\r\n\r\nimport { withRouter,Link} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {showNotification} from 'components/notification/Notification';\r\nconst FormItem = Form.Item;\r\n\r\nclass RegistrationForm extends Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n    dataAPI:{}\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        actRegisterRequest(values);\r\n        showNotification(\"Đăng ký rồi\",\"Đợi xíu đi\",\"topRight\",\"success\");\r\n      }else{\r\n        console.log(\"ok error\");\r\n      }\r\n    });\r\n    this.props.onClose();\r\n  }\r\n\r\n  handleConfirmBlur = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  }\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Mật khẩu bạn nhập không khớp với mật khẩu trên!');\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], { force: true });\r\n    }\r\n    callback();\r\n  }\r\n\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} layout=\"vertical\"> \r\n        <FormItem\r\n          // {...formItemLayout}\r\n          label=\"Tên đăng nhập\"\r\n        >\r\n          {getFieldDecorator('username', {\r\n            rules: [ {\r\n              required: true, message: 'Vui lòng nhập tên đăng nhập của bạn!',\r\n            }],\r\n          })(\r\n            <Input type='text' placeholder='Nhập tên đăng nhập!'/>\r\n          )}\r\n        </FormItem>\r\n        <FormItem\r\n          // {...formItemLayout}\r\n          label=\"E-mail\"\r\n        >\r\n          {getFieldDecorator('email', {\r\n            rules: [{\r\n              type: 'email', message: 'Vui lòng nhập đúng định dạng E-mail!',\r\n            }, {\r\n              required: true, message: 'Vui lòng cung cấp E-mail của bạn!',\r\n            }],\r\n          })(\r\n            <Input type='email' placeholder='Nhập địa chỉ email của bạn!'/>\r\n          )}\r\n        </FormItem>\r\n        <FormItem\r\n          // {...formItemLayout}\r\n          label=\"Mật khẩu\"\r\n        >\r\n          {getFieldDecorator('password', {\r\n            rules: [{\r\n              required: true, message: 'Vui lòng nhập password!',\r\n            }, {\r\n              validator: this.validateToNextPassword,\r\n            }],\r\n          })(\r\n            <Input type=\"password\" placeholder='Nhập mật khẩu của bạn!'/>\r\n          )}\r\n        </FormItem>\r\n        <FormItem\r\n          // {...formItemLayout}\r\n          label=\"Xác nhận mật khẩu\"\r\n        >\r\n          {getFieldDecorator('confirm', {\r\n            rules: [{\r\n              required: true, message: 'Vui lòng xác nhận lại password!',\r\n            }, {\r\n              validator: this.compareToFirstPassword,\r\n            }],\r\n          })(\r\n            <Input type=\"password\" onBlur={this.handleConfirmBlur} placeholder='Nhập lại mật khẩu của bạn'/>\r\n          )}\r\n        </FormItem>\r\n        <FormItem >\r\n          <Button style={{float:'right'}} type=\"primary\" htmlType=\"submit\">Đăng ký</Button>\r\n        </FormItem>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst FormRegister=  Form.create()(RegistrationForm);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      auth: state.auth,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    actRegister:(data)=>{\r\n          dispatch(actRegister(data));\r\n    },\r\n    actGetIAM:()=>{\r\n          dispatch(actGetIAM());\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormRegister));","import { Form, Input,  Button,  } from 'antd';\r\nimport React,{Component} from 'react';\r\n\r\n// import {actLogin} from 'actions/auth0/index'; \r\nimport { withRouter,} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {showNotification} from 'components/notification/Notification';\r\nimport {actLoginRequest} from 'actions/auth0/auth0';\r\nconst FormItem = Form.Item;\r\n\r\n\r\nclass LoginForm extends Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        showNotification(\"Đăng nhập rồi\",\"Đợi xíu đi\",\"topRight\",\"success\");\r\n        this.props.handleLoginRequest(values);\r\n      }\r\n    });\r\n  }\r\n\r\n  handleConfirmBlur = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} layout=\"vertical\"> \r\n        <FormItem\r\n          // {...formItemLayout}\r\n          label=\"E-mail\"\r\n        >\r\n          {getFieldDecorator('userName', {\r\n            rules: [{\r\n              type: 'email', message: 'Vui lòng nhập đúng định dạng E-mail!',\r\n            }, {\r\n              required: true, message: 'Vui lòng cung cấp E-mail của bạn!',\r\n            }],\r\n          })(\r\n            <Input type='email' placeholder='Nhập tên đăng nhập đã đăng ký'/>\r\n          )}\r\n        </FormItem>\r\n        <FormItem\r\n          // {...formItemLayout}\r\n          label=\"Mật khẩu\"\r\n        >\r\n          {getFieldDecorator('password', {\r\n            rules: [{\r\n              required: true, message: 'Vui lòng nhập password!',\r\n            }]\r\n          })(\r\n            <Input type=\"password\" placeholder='Nhập mật khẩu đã đăng ký'/>\r\n          )}\r\n        </FormItem>\r\n       \r\n        <FormItem >\r\n          <Button style={{float:'right'}} type=\"primary\" htmlType=\"submit\">Đăng nhập</Button>\r\n        </FormItem>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst FormLogin= Form.create()(LoginForm);\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      auth0: state.auth0,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    handleLoginRequest:(data)=>{\r\n          dispatch(actLoginRequest(data));\r\n    },\r\n\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormLogin));","import { Drawer,  } from 'antd';\r\nimport React,{Component} from 'react';\r\nexport default class App extends Component {\r\n  state = { visible: false, childrenDrawer: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  showChildrenDrawer = () => {\r\n    this.setState({\r\n      childrenDrawer: true,\r\n    });\r\n  };\r\n\r\n  onChildrenDrawerClose = () => {\r\n    this.setState({\r\n      childrenDrawer: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    var {styleProps,visible,onClose,componentWillShow} = this.props;\r\n    return (\r\n        <Drawer\r\n          key={this.props.key}\r\n          title={styleProps.title}\r\n          width={styleProps.width}\r\n          height={styleProps.height}\r\n          mask={styleProps.mask}\r\n          maskClosable={styleProps.maskClosable}\r\n          maskStyle={styleProps.maskStyle}\r\n          style={styleProps.style}\r\n          className={styleProps.className}\r\n          zIndex={styleProps.zIndex}\r\n          placement={styleProps.placement}\r\n          closable={styleProps.closable}\r\n          onClose={onClose}\r\n          visible={visible}\r\n          destroyOnClose={styleProps.destroyOnClose}\r\n          getContainer={styleProps.getContainer}\r\n\r\n        >\r\n            {componentWillShow(this.props.key)}\r\n          \r\n          {/* <div  style={styles.divFooter} >\r\n            {\r\n                (hasButtonFooter)?\r\n                styleProps.listButtonFooter.map((val,ind)=>{\r\n                    switch (val.type){\r\n                        case 'SUBMIT': \r\n                            return <Button onClick={val.event.onClick} type={val.buttonTypeColor}>{val.name}</Button>\r\n                        case 'CANCEL': \r\n                            return <Button onClick={val.event.onClick} type={val.buttonTypeColor}>{val.name}</Button>\r\n                        case 'NEXT': \r\n                            return <Button onClick={val.event.onClick} type={val.buttonTypeColor}>{val.name}</Button>\r\n                        case 'PREV': \r\n                            return <Button onClick={val.event.onClick} type={val.buttonTypeColor}>{val.name}</Button>\r\n                        \r\n                        default :return <Button onClick={onClose} >Close</Button>\r\n                    }\r\n                })\r\n                :\r\n                    <div>\r\n                        <Button  style={{  marginRight: 8, }}  onClick={onClose} >  Cancel  </Button>\r\n                        <Button onClick={onClose} type=\"primary\"> Submit </Button>\r\n                    </div>\r\n            }\r\n          </div> */}\r\n        </Drawer>\r\n    );\r\n  }\r\n}\r\n","let lastIndex = 0;\nexport const updateIndex = () => {\n  lastIndex++;\n  return lastIndex;\n}","import { Menu, Icon,Button, } from 'antd';\r\nimport React,{Component} from 'react';\r\nimport {Link, } from 'react-router-dom';\r\nimport options from './options';\r\nimport Register from 'views/page/register/index';\r\nimport Login from 'views/page/login/index';\r\nimport Drawer from 'components/Drawer/Drawer';\r\nimport { withRouter,} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {updateIndex} from 'utils/key-component/settings_key_antd';\r\nconst SubMenu = Menu.SubMenu;\r\nclass HeaderContent extends Component {\r\n  \r\n  state = {\r\n    current: 'mail',\r\n    visibleLogin: false,\r\n    visibleRegister: false,\r\n  }\r\n\r\n\r\n  getMenuItem = ({ singleOption, }) => {\r\n    const { key, label, leftIcon, children } = singleOption;\r\n    if (children) {\r\n      return (\r\n        <SubMenu\r\n          key={key}\r\n          title={\r\n            <span >\r\n              <Icon type={leftIcon} />\r\n              <span>{label} </span>\r\n            </span>\r\n          }\r\n        >\r\n          {children.map(child => {\r\n            return (\r\n              <Menu.Item  key={`${child.key}`}>\r\n                <Link  to={`/${child.key}`}>\r\n                  <span>{child.label} </span>\r\n                </Link>\r\n              </Menu.Item>\r\n            );\r\n          })}\r\n        </SubMenu>\r\n      );\r\n    }\r\n    return (\r\n      <Menu.Item key={key}>\r\n        <Link to={`/${key}`}>\r\n          <span>\r\n            <Icon type={leftIcon} />\r\n            <span > {label}  </span>\r\n          </span>\r\n        </Link>\r\n      </Menu.Item>\r\n    );\r\n  }\r\n  \r\n  onCloseLogin = () => { this.setState({ visibleLogin: false, }) };\r\n  showDrawerLogin = () => {  this.setState({  visibleLogin: true, }); };\r\n  onCloseRegister = () => { this.setState({ visibleRegister:false}) };\r\n  showDrawerRegister = () => {  this.setState({  visibleRegister: true, }); };\r\n  handleClick = (e) => {\r\n    if(e.key==='register'){\r\n      this.showDrawerRegister();\r\n    }else if(e.key==='login'){\r\n      this.showDrawerLogin();\r\n    }\r\n    this.setState({\r\n      current: e.key,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const listPropForDrawerLogin={\r\n      styleProps:{\r\n        title:\"Vui lòng đăng nhập để sử dụng hệ thống này!\",\r\n        width:420,\r\n        height:'100%',\r\n        maskStyle:{\r\n            color:'red'\r\n        },\r\n          mask:true,\r\n          maskClosable:true,\r\n        style:{\r\n            backgroundColor:'#fafafa'\r\n        },\r\n        className:\"ok\",\r\n        zIndex:1,\r\n        placement:\"left\",\r\n        closable:this.state.visibleLogin,\r\n        destroyOnClose:false,\r\n      },\r\n      onClose:this.onCloseLogin,\r\n      visible:this.state.visibleLogin,\r\n      hasButtonFooter:false,\r\n      componentWillShow:()=> <Login key={`${updateIndex()}`} onClose={this.onCloseLogin}/>,\r\n  }\r\n    const listPropForDrawerRegister={\r\n      styleProps:{\r\n        title:\"Vui lòng đăng ký để sử dụng hệ thống này!\",\r\n        width:420,\r\n        height:'100%',\r\n        maskStyle:{\r\n            color:'red'\r\n        },\r\n          mask:true,\r\n          maskClosable:true,\r\n        style:{\r\n            backgroundColor:'#fafafa'\r\n        },\r\n        className:\"ok\",\r\n        zIndex:1,\r\n        placement:\"left\",\r\n        closable:this.state.visibleRegister,\r\n        destroyOnClose:false,\r\n      },\r\n      onClose:this.onCloseRegister,\r\n      visible:this.state.visibleRegister,\r\n      hasButtonFooter:false,\r\n      componentWillShow:()=> <Register key={`${updateIndex()}`} onClose={this.onCloseRegister}/>,\r\n  }\r\n    return (\r\n      <Menu\r\n        onClick={this.handleClick}\r\n        selectedKeys={[this.state.current]}\r\n        mode=\"horizontal\"\r\n      >\r\n        {options.map(singleOption =>  this.getMenuItem({singleOption })  )}\r\n\r\n        <Menu.Item key={\"register\"}>\r\n            <Button onClick={this.handleClick}>Đăng ký</Button>\r\n        </Menu.Item>\r\n        {\r\n          (this.props.auth0)?\r\n        <div key={`${updateIndex()}`}></div>:\r\n          <Menu.Item key={\"login\"}>\r\n              <Button onClick={this.handleClick}>Đăng nhập</Button>\r\n          </Menu.Item>\r\n        }\r\n        <Drawer \r\n            key={'registerDrawer'}\r\n            styleProps={listPropForDrawerRegister.styleProps} \r\n            visible={listPropForDrawerRegister.visible} \r\n            onClose={listPropForDrawerRegister.onClose}\r\n            hasButtonFooter={listPropForDrawerRegister.hasButtonFooter}    \r\n            componentWillShow={listPropForDrawerRegister.componentWillShow}\r\n        />\r\n        <Drawer \r\n            key={'loginDrawer'}\r\n            styleProps={listPropForDrawerLogin.styleProps} \r\n            visible={listPropForDrawerLogin.visible} \r\n            onClose={listPropForDrawerLogin.onClose}\r\n            hasButtonFooter={listPropForDrawerLogin.hasButtonFooter}    \r\n            componentWillShow={listPropForDrawerLogin.componentWillShow}\r\n        />\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      auth0: state.auth0,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HeaderContent));","import React,{Component} from 'react';\r\nimport './css/header.css';\r\nimport MenuContent from 'containers/menu/Menu';\r\n\r\nclass HeaderContent extends Component {\r\n  render() {\r\n    return (\r\n      <MenuContent/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderContent;","import React,{Component} from 'react';\r\nimport  {Carousel}  from 'react-responsive-carousel';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport banner1 from './banner/banner2.jpg';\r\nimport banner2 from './banner/banner3.jpg';\r\nimport banner3 from './banner/banner6.png';\r\n// import './Slides.css'\r\nclass ListCarSlider extends Component{\r\n    state={\r\n        listParner: [\r\n            { image: banner1 },\r\n            { image: banner2  },\r\n            { image: banner3 }\r\n        ]\r\n    }\r\n    render(){\r\n        return(\r\n            <Carousel \r\n                showThumbs={false}\r\n                showArrows={false}\r\n                infiniteLoop={true}\r\n                swipeScrollTolerance={6}\r\n                autoPlay={true}\r\n                interval={5000}\r\n                showStatus={false}\r\n                onChange={this.onChange}\r\n                onClickItem={this.onClickItem}\r\n                onClickThumb={this.onClickThumb}>\r\n\r\n                {this.state.listParner.map((slide) =>\r\n                    <div id=\"slider\" key={slide.image}>\r\n                        <div id=\"slider-img\">\r\n                            {/* <li> */}\r\n                                <img                     \r\n                                src={slide.image} \r\n                                alt={slide.image} \r\n                                className = \"img-slider\"/> \r\n                            {/* </li> */}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Carousel>\r\n        );\r\n    }\r\n}\r\nexport default ListCarSlider;","import { Form,DatePicker , Select, Row, Col, Button, } from 'antd';\r\nimport React,{Component} from 'react';\r\nimport moment from 'moment';\r\nimport {Link} from 'react-router-dom';\r\nimport './css/form.css';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nconst range=(start, end)=> {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n}\r\nclass BookCar extends Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n    city:'ThuDuc',\r\n    dateRental:null,\r\n    dateReturn:null,\r\n    disable: true\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  }\r\n  disabledDate=(current) =>{\r\n    return current && current < moment().endOf('day');\r\n  }\r\n  \r\n  disabledDateTime=() =>{\r\n    return {\r\n      disabledHours: () => range(0, 24).splice(4, 20),\r\n      disabledMinutes: () => range(30, 60),\r\n      disabledSeconds: () => [55, 56],\r\n    };\r\n  }\r\n  \r\n  disabledRangeTime=(_, type)=> {\r\n    if (type === 'start') {\r\n      return {\r\n        disabledHours: () => range(0, 60).splice(4, 20),\r\n        disabledMinutes: () => range(30, 60),\r\n        disabledSeconds: () => [55, 56],\r\n      };\r\n    }\r\n    return {\r\n      disabledHours: () => range(0, 60).splice(20, 4),\r\n      disabledMinutes: () => range(0, 31),\r\n      disabledSeconds: () => [55, 56],\r\n    };\r\n  }\r\n\r\n  handleCityChange=(val)=>{\r\n    this.setState({city:val});\r\n  }\r\n\r\n  onChangeDateRental=(value, dateString)=> {\r\n    this.setState({dateRental: dateString});\r\n    if(this.state.dateReturn) {\r\n      this.setState({disable:false})\r\n    }\r\n  }\r\n\r\n  onChangeDateReturn=(value, dateString)=> {\r\n    const numDayRental = new Date(dateString).getDate() - new Date(this.state.dateRental).getDate();\r\n    this.setState({dateReturn: dateString, numDayRental: numDayRental });\r\n    if(this.state.dateRental) {\r\n      this.setState({disable:false})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { formLayout } = this.state;\r\n    const formItemLayout = formLayout === 'horizontal' ? {\r\n        labelCol: { span: 4 },\r\n        wrapperCol: { span: 14 },\r\n      } : null;\r\n    return (\r\n      <Row className=\"form_content\">\r\n          <Col span={24} >\r\n            <Form layout={null} onSubmit={this.handleSubmit}>\r\n                <FormItem\r\n                    {...formItemLayout}\r\n                    label=\"Chọn Tỉnh/ Thành phố\"\r\n                    >\r\n                    <Select\r\n                        value={this.state.city}\r\n                        // size={size}\r\n                        style={{ width: '100%' }}\r\n                        defaultValue=\"ThuDuc\"\r\n                        onChange={this.handleCityChange}\r\n                        >\r\n                            <Option value=\"BinhDuong\">Bình Dương</Option>\r\n                            <Option value=\"ThuDuc\">Thủ Đức</Option>\r\n                    </Select>\r\n                </FormItem>\r\n                <FormItem\r\n                    {...formItemLayout}\r\n                    label=\"Chọn ngày thuê \"\r\n                    >\r\n                    {getFieldDecorator('dateRental', {\r\n                      rules: [{\r\n                        required: true, message: 'Vui lòng chọn ngày thuê xe!',\r\n                      }],\r\n                    })(\r\n                      <DatePicker\r\n                        format=\"YYYY-MM-DD\"\r\n                        placeholder=\"Select Time\"\r\n                        disabledDate={this.disabledDate}\r\n                        disabledTime={this.disabledRangeTime}\r\n                        onChange={this.onChangeDateRental}\r\n                        style={{width:'100%'}}\r\n                        />\r\n                    )}\r\n                </FormItem>\r\n                <FormItem\r\n                    {...formItemLayout}\r\n                    label=\"Chọn ngày trả\"\r\n                    >\r\n                    {getFieldDecorator('dateReturn', {\r\n                      rules: [{\r\n                        required: true, message: 'Vui lòng chọn ngày trả xe!',\r\n                      }],\r\n                    })(\r\n                      <DatePicker\r\n                        // showTime\r\n                        format=\"YYYY-MM-DD\"\r\n                        placeholder=\"Select Time\"\r\n                        disabledDate={this.disabledDate}\r\n                        disabledTime={this.disabledRangeTime}\r\n                        onChange={this.onChangeDateReturn}\r\n                        // onOk={this.onOk}\r\n                        style={{width:'100%'}}\r\n                        />\r\n                    )}\r\n                </FormItem>\r\n                <FormItem style={{float:'right'}}>\r\n                        <Link to={{ \r\n                            pathname: '/tim-xe', \r\n                            state: { \r\n                              city: this.state.city, \r\n                              dateRental: this.state.dateRental,\r\n                              dateReturn: this.state.dateReturn\r\n                              }\r\n                            }}>\r\n                          <Button disabled={this.state.disable} type=\"primary\" htmlType=\"submit\">Chọn xe</Button>\r\n                        </Link>\r\n                </FormItem>\r\n            </Form>\r\n          </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst QuickBook = Form.create()(BookCar );\r\nexport default QuickBook;","import {  Row ,Col, } from 'antd';\r\nimport React,{Component} from 'react';\r\nimport MainSlider from 'views/list-car-slider/ListCars';\r\nimport './css/slider.css';\r\nimport './css/content.css';\r\nimport QuickBook from 'views/page/home/QuickBook';\r\nclass Content extends Component {\r\n\r\n  render() {\r\n    return ( \r\n      <div>\r\n        <Row className=\"silder_content\">\r\n          <MainSlider/>\r\n        </Row>\r\n        {/* <Affix style={{ position: 'absolute', top: '15%', right: '10%'}}> */}\r\n          <Row className=\"book_content\" >\r\n            <Col sm={24} md={16} style={{width:'100%'}}>\r\n                <QuickBook/>\r\n            </Col>\r\n          </Row>\r\n        {/* </Affix> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;","import React, {Component} from 'react';\r\nimport { Layout } from 'antd';\r\nimport HeaderContent from './layout/Header';\r\n// import FooterContent from './layout/Footer';\r\nimport ContentSite from './layout/Content';\r\nimport 'antd/dist/antd.css';\r\nimport './css/app.css';\r\nconst { Header, Content } = Layout;\r\nclass App extends Component{\r\n    render(){\r\n        return (\r\n            <div className=\"layout-theme\" style={{ backgroundColor: \"#f5f5f5\" }}>\r\n                <Layout>\r\n                    <Header className=\"header_content\">\r\n                        <HeaderContent/>\r\n                    </Header>\r\n                    <Content className=\"content_sites\">\r\n                        <ContentSite/>\r\n                    </Content>\r\n                    {/* <Footer className=\"footer_content\">\r\n                        <FooterContent/>\r\n                    </Footer> */}\r\n                </Layout>\r\n            </div>\r\n        );\r\n    }\r\n }\r\n \r\nexport default App;","import { Breadcrumb } from 'antd';\r\nimport React,{Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './breadcrumb.css';\r\nclass BreadcrumbContent extends Component{\r\n    render(){\r\n        return (\r\n            <Breadcrumb className=\"breadcrumb_wrapper\">\r\n                <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                <Breadcrumb.Item><Link  to=\"#\">Application Center</Link></Breadcrumb.Item>\r\n                <Breadcrumb.Item><Link to=\"#\">Application List</Link></Breadcrumb.Item>\r\n                <Breadcrumb.Item>An Application</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n        )\r\n    }\r\n}\r\nexport default BreadcrumbContent;","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import { Menu, Icon } from 'antd';\r\nimport React , {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport history from '../../../../history';\r\nimport './index.css';\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nclass Sider extends Component {\r\n\r\n  handleClick = (e) => {\r\n    history.push( this.props.url+'/'+ e.key);\r\n    window.location.reload();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Menu\r\n        onClick={this.handleClick}\r\n        style={{ width: 256 }}\r\n        defaultSelectedKeys={['1']}\r\n        defaultOpenKeys={['sub1', 'sub2']}\r\n        mode=\"inline\"\r\n      >\r\n        <SubMenu key=\"sub1\" title={<span><Icon type=\"mail\" /><span>Thông tin</span></span>}>\r\n            <Menu.Item key=\"5\">Cập nhật mật khẩu</Menu.Item>\r\n            <Menu.Item key=\"6\">Cập nhật thông tin</Menu.Item>\r\n            <SubMenu key=\"sub3\" title=\"Giới thiệu\">\r\n                <Menu.Item key=\"7\">Hệ thống</Menu.Item>\r\n                <Menu.Item key=\"8\">Cá nhân</Menu.Item>\r\n            </SubMenu>\r\n        </SubMenu>\r\n        <SubMenu key=\"sub2\" title={<span><Icon type=\"appstore\" /><span>Quản lý của admin</span></span>}>\r\n          <MenuItemGroup key=\"g1\" title=\"Module\">\r\n            <Menu.Item key=\"car\">\r\n                Tất cả xe của hệ thống\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"partner\">\r\n                  Quản lý đối tác\r\n              </Menu.Item>\r\n\r\n              <Menu.Item key=\"oders\">\r\n                  Quản lý đơn hàng\r\n              </Menu.Item>\r\n\r\n              <Menu.Item key=\"customer\">\r\n                  Quản lý khách hàng\r\n              </Menu.Item>\r\n\r\n              {/* <Menu.Item key=\"customercar\">\r\n                  Khách hàng cho thê xe\r\n              </Menu.Item> */}\r\n\r\n              <Menu.Item key=\"feature\">\r\n                  Tính năng xe\r\n              </Menu.Item>\r\n\r\n              <Menu.Item key=\"packages\">\r\n                  Gói dịch vụ\r\n              </Menu.Item>\r\n\r\n              <Menu.Item key=\"payment\">\r\n                  Phương thức thanh toán\r\n              </Menu.Item>\r\n\r\n              <Menu.Item key=\"procedure\">\r\n                  Thủ tục đặt xe\r\n              </Menu.Item>\r\n\r\n          </MenuItemGroup>\r\n          \r\n        </SubMenu>\r\n        <SubMenu key=\"sub4\" title={<span><Icon type=\"mail\" /><span>Thông tin</span></span>}>\r\n            <Menu.Item key=\"sub4item1\">Cập nhật mật khẩu</Menu.Item>\r\n            <Menu.Item key=\"sub4item2\">Cập nhật thông tin</Menu.Item>\r\n            <SubMenu key=\"sub41\" title=\"Giới thiệu\">\r\n                <Menu.Item key=\"sub41item1\">Hệ thống</Menu.Item>\r\n                <Menu.Item key=\"sub41item2\">Cá nhân</Menu.Item>\r\n            </SubMenu>\r\n        </SubMenu>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\nexport default Sider;","import React, {Component} from 'react';\r\nimport {Button, Icon, Row,Col} from 'antd';\r\nimport './index.css';\r\nimport 'settings/css/global.scss';\r\n\r\nclass FunctionContent extends Component{\r\n    state={\r\n        fullScreen:true,\r\n        visibled:true,\r\n    }\r\n    onClose = () => { this.setState({ visibled: false, }) };\r\n    showDrawer = () => {  \r\n        this.setState({  visibled: true, },this.props.showDrawerAdd(this.state.visibled)); \r\n        \r\n    };\r\n    setFullScreen=()=>{\r\n        this.setState({fullScreen:true},this.props.handleFullScreenMode(this.state.fullScreen));\r\n    }\r\n    setNotFullScreen=()=>{\r\n        this.setState({fullScreen:false},this.props.handleFullScreenMode(this.state.fullScreen));\r\n    }\r\n    render(){\r\n       \r\n        return(\r\n            <Row className=\"function-bar-wrapper\">\r\n                <Col md={24}>\r\n                    <Button type=\"default\" onClick={this.showDrawer} size=\"small\" className=\"function-btn-left\">\r\n                        <Icon type=\"plus\" theme=\"outlined\" />\r\n                    </Button>\r\n                    <Button type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                        <Icon type=\"close\" theme=\"outlined\" />\r\n                    </Button>\r\n                    {\r\n                        (this.state.fullScreen)?\r\n                        <Button \r\n                            onClick={this.setNotFullScreen}\r\n                            type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                                <Icon type=\"fullscreen\" theme=\"outlined\" />\r\n                        </Button>:\r\n                        <Button \r\n                            onClick={this.setFullScreen}\r\n                            type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                            <Icon type=\"fullscreen-exit\" theme=\"outlined\" />\r\n                        </Button>\r\n                    }\r\n                </Col>\r\n                \r\n            </Row>\r\n        );\r\n    }\r\n\r\n}\r\nexport default FunctionContent;","import React from 'react';\r\n\r\nconst rtl = document.getElementsByTagName('html')[0].getAttribute('dir');\r\nconst withDirection = Component => props => {\r\n  return <Component {...props} data-rtl={rtl} />;\r\n};\r\n\r\nexport default withDirection;\r\nexport { rtl };\r\n","import styled from 'styled-components';\r\nimport WithDirection from 'settings/withDirection';\r\n\r\nconst PanelWrapper = styled.div`\r\n    width: 100%;\r\n    height:100%;\r\n    background-color:#fafafa;\r\n    .panel__header{\r\n        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n        font-size:1.5rem;\r\n        font-weight:400;\r\n    }\r\n    &.full-screen-mode{\r\n        position:fixed;\r\n        height:100%;\r\n        width:100%;\r\n        z-index:1000;\r\n        top:0;\r\n        left:0;\r\n        overflow:hidden;\r\n        .form-header{\r\n            position:fixed;\r\n            top:0;\r\n            left:0;\r\n            width:100%;\r\n            padding: 15px 30px;\r\n            background:white;\r\n            z-index:1010;\r\n            border-bottom:1px solid rgba(0,0,0,0.12);\r\n        }\r\n    }\r\n`;\r\n\r\nexport default WithDirection(PanelWrapper);\r\n","import {updateIndex} from 'utils/key-component/settings_key_antd';\r\nconst table=\r\n{\r\n    size: \"small\",\r\n    bordered: false,\r\n    rowKey: `uid${updateIndex()}`,\r\n    indentSize: 10,\r\n    scroll: {\r\n        // x:'50%',\r\n        // y: 260\r\n    }\r\n}\r\nexport default table;","const pagination=\r\n{ \r\n    showPageSizeOptions : SVGComponentTransferFunctionElement,\r\n    className:\"pagination pagination-table\",\r\n    size: 'small',\r\n    defaultPageSize:5,\r\n    pageSizeOptions:['5', '10', '20', '30', '50', '100'],\r\n    showQuickJumper:true,\r\n    showSizeChanger:true,\r\n    simple:false,\r\n    showTotal:(total, range) => `${range[0]}-${range[1]} / ${total} tổng số`,\r\n}\r\nexport default pagination;","import table from './table';\r\nimport pagination from './pagination'; \r\n\r\nconst defaultValue =\r\n{\r\n    table:table,\r\n    pagination:pagination\r\n}\r\n\r\nexport default defaultValue;","import React from 'react';\r\nimport { Table, Button, Row, Col, Icon, Input} from 'antd';\r\nimport './table.style.scss';\r\nimport defaultValue from './default-value';\r\nimport { Resizable } from 'react-resizable';\r\nimport {CSVLink, } from \"react-csv\";\r\nconst Search = Input.Search;\r\nconst ResizeableTitle = (props) => {\r\n    const { onResize, width, ...restProps } = props;\r\n  \r\n    if (!width) {\r\n      return <th {...restProps} />; \r\n    }\r\n  \r\n    return (\r\n      <Resizable width={width} height={0} onResize={onResize}>\r\n        <th {...restProps} />\r\n      </Resizable>\r\n    );\r\n  };\r\nconst components = {\r\n    header: {\r\n      cell: ResizeableTitle,\r\n    },\r\n};\r\n  \r\nclass TableContent extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            columns:[]\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({columns: this.props.columns});\r\n    }\r\n\r\n    handleResize = index => (e, { size }) => {\r\n        this.setState(({ columns }) => {\r\n          const nextColumns = [...columns];\r\n          nextColumns[index] = {\r\n            ...nextColumns[index],\r\n            width: size.width,\r\n          };\r\n          return { columns: nextColumns };\r\n        });\r\n    };\r\n\r\n    getListFilterAttr = (info) =>{\r\n        let {  filtered} = info;\r\n        filtered = filtered || {};\r\n        let listFilterAttr = [];\r\n        let filteredKey = Object.keys(filtered);\r\n        filteredKey.map((val, ind) => {\r\n            if(filtered[val]!==null) {\r\n                listFilterAttr.push({val})\r\n            } \r\n        })\r\n        return listFilterAttr;\r\n    }\r\n\r\n    getListSorterAttr = (info) =>{\r\n        let {sorted} = info;\r\n        sorted = sorted || {};\r\n        let listSortedAttr = [];\r\n        let sortedKey = Object.keys(sorted);\r\n        sortedKey.map((val, ind) => {\r\n            if(sorted[val]!==null) {\r\n                listSortedAttr.push({val})\r\n            } \r\n        })\r\n        return listSortedAttr;\r\n    }\r\n\r\n    renderFilterInfo = () => {\r\n        const  {info, event} = this.props;\r\n        let { filtered } = info;\r\n        let listFilterAttr = this.getListFilterAttr(info);\r\n        return listFilterAttr.map((vals, ind)=>{\r\n           return <Row key={vals.val} className=\"btn-filter\">\r\n                {\r\n                    (filtered[vals.val].length > 0)?\r\n                        <strong>{vals.val}: </strong>:\r\n                        <strong></strong>\r\n                }\r\n                {\r\n                    filtered[vals.val].map((val, ind)=>{\r\n                        return <Button onClick={()=>event.table.clearFiltered(vals, val)} key={ind} >{val} <Icon type=\"close\" /></Button>\r\n                    })\r\n                } \r\n            </Row>\r\n        })\r\n    }\r\n\r\n    renderSorterInfo = () => {\r\n        const  {info, event} = this.props;\r\n        let { sorted } = info;\r\n        const nameButtonSort = `${sorted.field}: ${(sorted.order==='ascend')?\"Tăng dần\":\"Giảm dần\"}` ;\r\n        return <Button key={sorted.field} onClick={event.table.clearSorted}>{nameButtonSort} <Icon type=\"close\" /></Button>\r\n    }\r\n\r\n\r\n    render() {\r\n        const {config, event, data, rowSelection, info,  } =this.props;\r\n        let listFilterAttr = this.getListFilterAttr(info);\r\n        const columns = this.props.columns.map((col, index) => ({\r\n            ...col,\r\n            onHeaderCell: column => ({\r\n              width: column.width,\r\n              onResize: this.handleResize(index),\r\n            }),\r\n        }));\r\n        const configPagination=\r\n        {\r\n            showPageSizeOptions : \r\n                (config.pagination.showPageSizeOptions) ? config.pagination.showPageSizeOptions : defaultValue.pagination.showPageSizeOptions,\r\n            className:\r\n                (config.pagination.className) ? config.pagination.className : defaultValue.pagination.className,\r\n            total: \r\n                (config.pagination.total) ? config.pagination.total : defaultValue.pagination.total,\r\n            size: \r\n                (config.pagination.size) ? config.pagination.size : defaultValue.pagination.size,\r\n            defaultPageSize:\r\n                (config.pagination.defaultPageSize) ? config.pagination.defaultPageSize : defaultValue.pagination.defaultPageSize,\r\n            pageSizeOptions:\r\n                (config.pagination.pageSizeOptions) ? config.pagination.pageSizeOptions : defaultValue.pagination.pageSizeOptions,\r\n            showQuickJumper:\r\n                (config.pagination.showQuickJumper) ? config.pagination.showQuickJumper : defaultValue.pagination.showQuickJumper,\r\n            showSizeChanger:\r\n                (config.pagination.showSizeChanger) ? config.pagination.showSizeChanger : defaultValue.pagination.showSizeChanger,\r\n            showTotal:\r\n                (config.pagination.showTotal) ? config.pagination.showTotal : defaultValue.pagination.showTotal,\r\n            onChange:event.pagination.onChange,\r\n            onShowSizeChange:event.pagination.onShowSizeChange\r\n            \r\n        };\r\n        return (\r\n        <div>\r\n            <Row className=\"filter-info-bar\">\r\n                <Col md={12}>\r\n                    {\r\n                        (listFilterAttr.length > 0)?\r\n                        <strong>Filter:</strong>:\r\n                        <strong></strong>\r\n                    }\r\n                    <div className=\"table-operations\">\r\n                        {\r\n                            (listFilterAttr)?\r\n                            this.renderFilterInfo():\r\n                            <div key=\"none\"></div>\r\n                        }\r\n                    </div>\r\n                </Col>\r\n                <Col md={12}>\r\n                    {\r\n                        (info.sorted.field) ? <strong>Sorter:</strong> : <strong></strong>\r\n                    }\r\n                    <div className=\"table-operations\">\r\n                        {\r\n                            (info.sorted.field)?\r\n                            this.renderSorterInfo():\r\n                            <div key=\"none\"></div>\r\n                        }\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{display:'flex',}}>\r\n                <Col md={12} style={{marginTop:'10px'}}>\r\n                    <Button  style={{float:'left'}}>\r\n                        <CSVLink data={data} target=\"_blank\">Link CSV </CSVLink>\r\n                    </Button>\r\n                    {/* <Button>\r\n                        <CSVDownload data={data} target=\"_blank\">Download CSV</CSVDownload>\r\n                    </Button> */}\r\n                </Col>\r\n                <Col md={12} style={{float:'right'}} className=\"search-field\">\r\n                    <Search\r\n                        placeholder=\"input search text\"\r\n                        onSearch={value => event.table.onSearch(value)}\r\n                        style={{ width: 200 }}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Table \r\n                className=\"component-table\"\r\n                columns={columns} \r\n                dataSource={data} \r\n                onChange={event.table.onChange} \r\n                // onChange={this.onChange} \r\n\r\n                size={(config.table.size) ? config.table.size : defaultValue.table.size}\r\n                bordered={(config.table.bordered) ? config.table.bordered : defaultValue.table.bordered}\r\n                rowKey={(config.table.rowKey) ? config.table.rowKey : defaultValue.table.rowKey}\r\n\r\n                pagination = { configPagination }\r\n                rowSelection={rowSelection}\r\n                scroll={(config.table.scroll) ? config.table.scroll : defaultValue.table.scroll}\r\n                // onSelectChange= {event.table.onSelectChange}\r\n                onRow= {(record) => {\r\n                        return {\r\n                            onClick: ()=>event.table.onRow(record),       // click row\r\n                        }\r\n                    }\r\n                }\r\n\r\n                components={components}\r\n                \r\n            />\r\n           \r\n        </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default TableContent;\r\n\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nexport default class extends React.Component {\r\n  getFunction =()=>{\r\n      const {attr,actions} =this.props;\r\n      const actionContent= actions.filter(act=>act.attrbtn===attr)[0];\r\n      return actionContent;\r\n  }\r\n  render () {\r\n    const { render } = this.props;\r\n    // const action = this.getFunction().content;\r\n    return (\r\n    // onClick={action}\r\n      <Button size={render.size} type='primary' htmlType='submit' icon={render.icon} >\r\n        {render.label}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Button from './Button'; \r\n\r\nconst findTriggerWithAttr = (listTrigger, attri) => {\r\n  const result = listTrigger.filter(singleTrigger => singleTrigger.attrbTrigger === attri);\r\n  return result[0];\r\n}\r\n\r\nexport const renderTriggerItem = (listTrigger, attribute, actions) => {\r\n  const trigger = findTriggerWithAttr(listTrigger, attribute);\r\n  switch (trigger.render.type){\r\n    case 'TEXT' :\r\n      return <Button attr={trigger.attrbTrigger} render={trigger.render} actions={actions} />;\r\n    default: \r\n      return <Button attr={trigger.attrbTrigger} render={trigger.render} actions={actions} />;\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { renderTriggerItem } from 'components/ptp__form-layout/components/trigger/index';\r\nimport '../css/index.scss';\r\nimport { Col, Form, Row } from 'antd';\r\nconst FormItem = Form.Item;\r\nclass FormLayoutContent extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      submit: props.submit\r\n    };\r\n  }\r\n  findFieldWithAttr=(listFields,attri)=>{\r\n      const result = listFields.filter(singleField => singleField.attrbField===attri);\r\n      return result[0];\r\n  }\r\n  findTriggerWithAttr=(listTrigger,attri)=>{\r\n      const result = listTrigger.filter(singleTrigger => singleTrigger.attrbTrigger===attri);\r\n      return result[0];\r\n  }\r\n  getFunction=(attr)=>{\r\n      const {actions} =this.props;\r\n      const actionContent= actions.filter(act=>act.attrbtn===attr)[0];\r\n      return actionContent;\r\n  }\r\n\r\n  getOptionRule=(colValues)=>{\r\n      if(!colValues.data.validation) return [];\r\n      if(!colValues.data.validation.rules) return [];\r\n      const rules =colValues.data.validation.rules;\r\n      const checkHasRule= (rules!==undefined && rules.length!==0)?true:false;\r\n      if(checkHasRule ){\r\n          return {\r\n              initialValue:colValues.data.defaultValue,\r\n              rules: rules,\r\n          }\r\n      }else if(!checkHasRule ){\r\n          return {\r\n              initialValue:colValues.data.defaultValue,\r\n              rules: [],\r\n          }\r\n      }\r\n  }\r\n  render () {\r\n    const { formID, layouts, actions, trigger, classNames, type, listFields  } = this.props;\r\n\r\n    const formItemLayout = type === 'horizontal' ? {\r\n      labelCol: { span: 10 },\r\n      wrapperCol: { span: 14 }\r\n    } : null;\r\n    return (layouts) ?\r\n      (\r\n          <Form id={formID} layout={type} className={classNames} >\r\n          {\r\n            layouts.map((rowForm, index) => {\r\n              return <Row key={index} className='row-form-item' gutter={16}>\r\n                {\r\n                  rowForm.map((cols, index) => {\r\n                    const { sm, md, lg, xl, xxl } = cols.width;\r\n                    const colValues = this.findFieldWithAttr(listFields, cols.attrbLayout);\r\n                    if (cols.attrbTrigger) {\r\n                      const colTrigger = this.findTriggerWithAttr(trigger, cols.attrbTrigger);\r\n                      if (colTrigger !== undefined) {\r\n                        return <Col key={index} sm={sm} md={md} lg={lg} xl={xl} xxl={xxl}>\r\n                                          {renderTriggerItem(trigger, cols.attrbTrigger, actions)}\r\n                        </Col>;\r\n                      }else {\r\n                        return <div key={index} />;\r\n                      }\r\n                    } else\r\n                    if (colValues !== undefined) {\r\n                      return <Col key={colValues.attrbField} sm={sm} md={md} lg={lg} xl={xl} xxl={xxl}>\r\n                        <FormItem\r\n                          key={colValues.attrbField}\r\n                                          {...formItemLayout}\r\n                                          label={colValues.render.label}>\r\n                          {colValues.data.defaultValue}\r\n                        </FormItem>\r\n                      </Col>;\r\n                    }else {\r\n                      return <div key={index} />;\r\n                    }\r\n                  })\r\n                }\r\n              </Row>;\r\n            })\r\n          }\r\n        </Form>\r\n      )\r\n        :(\r\n        <div />\r\n      );\r\n  }\r\n}\r\n\r\nexport default Form.create()(FormLayoutContent);\r\n","export const validation = {\r\n  require: [\r\n    {\r\n      required: true,\r\n      message: 'Trường dữ liệu này là bắt buộc!!!'\r\n    }\r\n  ],\r\n  url: [\r\n    {\r\n      type: 'url',\r\n      message: 'Bạn nhập chưa đúng định dạng url!!!'\r\n    },\r\n    {\r\n      required: true,\r\n      message: 'Trường dữ liệu này là bắt buộc!!!'\r\n    }\r\n  ]\r\n};\r\n","import React,{Component} from 'react';\r\nimport {Input, Form} from 'antd';\r\n\r\nimport {validation} from 'components/ptp__form-layout/validations/form-item/Input';\r\nconst  FormItem = Form.Item;\r\nexport default class extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      val: 0,\r\n    };\r\n  }\r\n  triggerChange = (e) => {\r\n    const onChange = this.props.onChange;\r\n    if (onChange) {\r\n      onChange(Object.assign({}, this.state, e.target.value));\r\n    }\r\n  }\r\n  checkRule=(option,data ) =>{\r\n    if(option.length===0){\r\n        const optionRule={\r\n            initialValue:data.defaultValue,\r\n            rules: validation.require\r\n          }\r\n        return optionRule;\r\n    }else{\r\n        return option;\r\n    }\r\n  }\r\n  render(){ \r\n      const { attr, data, render, form, optionsRule, formItemLayout} = this.props;\r\n      const { getFieldDecorator } = form;\r\n      const checkRule = this.checkRule(optionsRule, data);\r\n      return (\r\n        <FormItem\r\n              key={attr}\r\n              label={render.label}\r\n              {...formItemLayout}\r\n          >\r\n        {\r\n          getFieldDecorator(`${attr}`, checkRule)(\r\n            <Input \r\n                key={attr}\r\n                onChange={this.triggerChange}\r\n                placeholder={render.placeholder} \r\n                // defaultValue={data.defaultValue} \r\n                />\r\n          )\r\n        }\r\n        </FormItem>\r\n      );\r\n  }\r\n}","import React,{Component} from 'react';\r\nimport {Input, Form} from 'antd';\r\n\r\nimport {validation} from 'components/ptp__form-layout/validations/form-item/Input';\r\nconst  FormItem = Form.Item;\r\nconst { TextArea } = Input;\r\nexport default class extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      val: 0,\r\n    };\r\n  }\r\n  triggerChange = (e) => {\r\n    const onChange = this.props.onChange;\r\n    if (onChange) {\r\n      onChange(Object.assign({}, this.state, e.target.value));\r\n    }\r\n  }\r\n  checkRule=(option,data ) =>{\r\n    if(option.length===0){\r\n        const optionRule={\r\n            initialValue:data.defaultValue,\r\n            rules: validation.require\r\n          }\r\n        return optionRule;\r\n    }else{\r\n        return option;\r\n    }\r\n  }\r\n  render(){ \r\n      const { attr, data, render, form, optionsRule, formItemLayout} = this.props;\r\n      const { getFieldDecorator } = form;\r\n      const checkRule = this.checkRule(optionsRule, data);\r\n      return (\r\n        <FormItem\r\n              key={attr}\r\n              label={render.label}\r\n              {...formItemLayout}\r\n          >\r\n        {\r\n          getFieldDecorator(`${attr}`, checkRule)(\r\n            <TextArea  \r\n                key={attr}\r\n                onChange={this.triggerChange}\r\n                placeholder={render.placeholder} \r\n                autosize={{ minRows: 2, maxRows: 6 }} \r\n                // defaultValue={data.defaultValue} \r\n                />\r\n          )\r\n        }\r\n        </FormItem>\r\n      );\r\n  }\r\n}","export const validation = {\r\n  email: [\r\n    {\r\n      type: 'email',\r\n      message: 'Bạn nhập chưa đúng định dạng email!!!'\r\n    }\r\n  ]\r\n};\r\n","import React,{Component} from 'react';\r\nimport {Input, Form} from 'antd';\r\nimport {validation} from 'components/ptp__form-layout/validations/form-item/Email';\r\nconst  FormItem = Form.Item;\r\nexport default class extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      val: 0,\r\n    };\r\n  }\r\n  triggerChange = (e) => {\r\n    const onChange = this.props.onChange;\r\n    if (onChange) {\r\n      onChange(Object.assign({}, this.state, e.target.value));\r\n    }\r\n  }\r\n  checkRule=(option,data ) =>{\r\n    if(option.length===0){\r\n        const optionRule={\r\n            initialValue:data.defaultValue,\r\n            rules: validation.email\r\n          }\r\n        return optionRule;\r\n    }else{\r\n        return option;\r\n    }\r\n  }\r\n  render(){ \r\n      const { attr, data, render, form, optionsRule, formItemLayout} = this.props;\r\n      const { getFieldDecorator } = form;\r\n      const checkRule = this.checkRule(optionsRule, data);\r\n      return (\r\n        <FormItem\r\n              key={attr}\r\n              label={render.label}\r\n              {...formItemLayout}\r\n          >\r\n        {\r\n          getFieldDecorator(`${attr}`, checkRule)(\r\n            <Input \r\n                key={attr}\r\n                onChange={this.triggerChange}\r\n                placeholder={render.placeholder} \r\n                // defaultValue={data.defaultValue} \r\n                />\r\n          )\r\n        }\r\n        </FormItem>\r\n      );\r\n  }\r\n}","import React,{Component} from 'react';\r\nimport {Input, Form} from 'antd';\r\nconst FormItem = Form.Item;\r\nexport default class extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      val: 0,\r\n    };\r\n  }\r\n  triggerChange = (e) => {\r\n    const onChange = this.props.onChange;\r\n    if (onChange) {\r\n      onChange(Object.assign({}, this.state, e.target.value));\r\n    }\r\n  }\r\n  checkRule=(option,data ) =>{\r\n    if(option.length===0){\r\n        const optionRule={\r\n            initialValue:data.defaultValue,\r\n            // rules: validation.phone\r\n          }\r\n        return optionRule;\r\n    }else{\r\n        return option;\r\n    }\r\n  }\r\n    render(){\r\n      const { attr, data, render, form, optionsRule, formItemLayout} = this.props;\r\n      const { getFieldDecorator } = form;\r\n      const checkRule = this.checkRule(optionsRule, data);\r\n      return (\r\n        <FormItem\r\n              key={attr}\r\n              label={render.label}\r\n              {...formItemLayout}\r\n          >\r\n        {\r\n          getFieldDecorator(`${attr}`, checkRule)(\r\n            <Input \r\n                key={attr}\r\n                onChange={this.triggerChange} \r\n                placeholder={render.placeholder} \r\n                // defaultValue={data.defaultValue} \r\n                type='number'\r\n            />\r\n          )\r\n        }\r\n        </FormItem>\r\n      );\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {Input, Form} from 'antd';\r\nconst FormItem= Form.Item;\r\nexport default class extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          val: 0,\r\n        };\r\n      }\r\n      triggerChange = (e) => {\r\n        const onChange = this.props.onChange;\r\n        if (onChange) {\r\n          onChange(Object.assign({}, this.state, e.target.value));\r\n        }\r\n      }\r\n      checkRule=(option,data ) =>{\r\n        if(option.length===0){\r\n            const optionRule={\r\n                initialValue:data.defaultValue,\r\n                // rules: validation.password\r\n              }\r\n            return optionRule;\r\n        }else{\r\n            return option;\r\n        }\r\n      }\r\n    render(){\r\n      const { attr, data, render, form, optionsRule, formItemLayout} = this.props;\r\n      const { getFieldDecorator } = form;\r\n      \r\n      const checkRule = this.checkRule(optionsRule, data);\r\n      return (\r\n        <FormItem\r\n            key={attr}\r\n            label={render.label}\r\n            {...formItemLayout}\r\n          >\r\n        {\r\n          getFieldDecorator(`${attr}`, checkRule)(\r\n            <Input \r\n              key={attr}\r\n              onChange={this.triggerChange} \r\n              placeholder={render.placeholder} \r\n              // defaultValue={data.defaultValue} \r\n              type=\"password\"\r\n            />\r\n          )\r\n        }\r\n        </FormItem>\r\n      );\r\n    }\r\n} ","import React,{Component} from 'react';\r\nimport {Input, Form} from 'antd';\r\nconst FormItem = Form.Item;\r\nexport default class extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          val: 0,\r\n        };\r\n      }\r\n      triggerChange = (e) => {\r\n        const onChange = this.props.onChange;\r\n        if (onChange) {\r\n          onChange(Object.assign({}, this.state, e.target.value));\r\n        }\r\n      }\r\n      checkRule=(option,data ) =>{\r\n        if(option.length===0){\r\n            const optionRule={\r\n                initialValue:data.defaultValue,\r\n                // rules: validation.phone\r\n              }\r\n            return optionRule;\r\n        }else{\r\n            return option;\r\n        }\r\n      }\r\n    render(){\r\n      const { attr, data, render, form, optionsRule, formItemLayout} = this.props;\r\n      const { getFieldDecorator } = form;\r\n      const checkRule = this.checkRule(optionsRule, data);\r\n      return (\r\n        <FormItem\r\n            key={attr}\r\n            label={render.label}\r\n            {...formItemLayout}\r\n          >\r\n        {\r\n          getFieldDecorator(`${attr}`, checkRule)(\r\n            <Input \r\n                key={attr}\r\n                onChange={this.triggerChange} \r\n                placeholder={render.placeholder} \r\n                // defaultValue={data.defaultValue} \r\n                type='number'\r\n            />\r\n          )\r\n        }\r\n        </FormItem>\r\n      );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Select, Form } from 'antd';\r\n\r\n// import {validation} from 'containers/FormContainers/validations/FormItem/Input';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nexport default class extends Component {\r\n  static getDerivedStateFromProps (nextProps) {\r\n    if ('value' in nextProps) {\r\n      return {\r\n        ...(nextProps.value || {})\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      val: 0\r\n    };\r\n  }\r\n  triggerChange = (e) => {\r\n    const onChange = this.props.onChange;\r\n    if (onChange) {\r\n      onChange(Object.assign({}, this.state, e));\r\n    }\r\n  }\r\n  handleChange = (val) => {\r\n    if (!('value' in this.props)) {\r\n      this.setState({ val });\r\n    }\r\n    this.triggerChange({ val });\r\n  }\r\n  checkRule=(option,data ) =>{\r\n    if(option.length===0){\r\n        const optionRule={\r\n            initialValue:data.defaultValue,\r\n            // rules: validation.require\r\n          }\r\n        return optionRule;\r\n    }else{\r\n        return option;\r\n    }\r\n  }\r\n  render () {\r\n    const { attr, data, render, form, optionsRule, formItemLayout } = this.props;\r\n    const { getFieldDecorator } = form;\r\n    const checkRule = this.checkRule(optionsRule, data);\r\n    return (\r\n      <FormItem\r\n        key={attr}\r\n            label={render.label}\r\n            {...formItemLayout}\r\n      >\r\n        {\r\n          getFieldDecorator(`${attr}`, checkRule)(\r\n            <Select\r\n              key={attr}\r\n              showSearch\r\n              placeholder={render.placeholder}\r\n              // defaultValue={data.defaultValue}\r\n              onChange={this.handleChange}\r\n            >\r\n              {\r\n                data.config.options.map((option) => {\r\n                  return (\r\n                    <Option key={option.text} value={option.value}>{option.text}</Option>\r\n                  );\r\n                })\r\n              }\r\n            </Select>\r\n          )\r\n        }\r\n      </FormItem>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Select, Form } from 'antd';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nexport default class extends Component {\r\n  static getDerivedStateFromProps (nextProps) {\r\n    if ('value' in nextProps) {\r\n      return {\r\n        ...(nextProps.value || {})\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      val: 0\r\n    };\r\n  }\r\n  triggerChange = (e) => {\r\n      const onChange = this.props.onChange;\r\n      if (onChange) {\r\n          onChange(Object.assign({}, this.state, e));\r\n      }\r\n  }\r\n  handleChange = (val) => {\r\n      if (!('value' in this.props)) {\r\n          this.setState({ val });\r\n      }\r\n      this.triggerChange({ val });\r\n  }\r\n  render () {\r\n    const { attr, data, render, form, optionsRule, formItemLayout } = this.props;\r\n    const { getFieldDecorator } = form;\r\n    return (\r\n      <FormItem\r\n            key={attr}\r\n            label={render.label}\r\n        {...formItemLayout}\r\n      >\r\n        {\r\n          getFieldDecorator(`${attr}`, optionsRule)(\r\n              <Select\r\n              key={attr}\r\n              showSearch\r\n              placeholder={render.placeholder}\r\n              // defaultValue={data.defaultValue}\r\n              mode={data.config.mode}\r\n              size={render.size}\r\n              onChange={this.handleChange}\r\n            >\r\n              {\r\n                data.config.options.map((option) => {\r\n                  return (\r\n                    <Option key={option.text} value={option.value}>{option.text}</Option>\r\n                  );\r\n                })\r\n              }\r\n            </Select>\r\n          )\r\n        }\r\n      </FormItem>\r\n    );\r\n  }\r\n}\r\n","import { Radio } from 'antd';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      val: 0\r\n    };\r\n  }\r\n    triggerChange = (e) => {\r\n        const onChange = this.props.onChange;\r\n        if (onChange) {\r\n        onChange(Object.assign({}, this.state, e.target.value));\r\n        }\r\n    }\r\n  render () {\r\n    const { attr, data } = this.props;\r\n    return (\r\n      <Radio\r\n        key={attr}\r\n        onChange={this.triggerChange}\r\n        checked={data.config.checked}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React,{Component} from 'react';\r\nimport {Checkbox, Form} from 'antd';\r\nconst FormItem = Form.Item;\r\nexport default class extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          val: 0,\r\n        };\r\n      }\r\n      triggerChange = (e) => {\r\n        const onChange = this.props.onChange;\r\n        if (onChange) {\r\n          onChange(Object.assign({}, this.state, e.target.value));\r\n        }\r\n      }\r\n    render(){\r\n        const { attr, render, form, optionsRule, formItemLayout} = this.props;\r\n        const { getFieldDecorator } = form;\r\n        return (\r\n          <FormItem\r\n              key={attr}\r\n              label={render.label}\r\n              {...formItemLayout}\r\n            >\r\n          {\r\n            getFieldDecorator(`${attr}`, optionsRule)(\r\n                <Checkbox \r\n                    key={attr} \r\n                    onChange={this.triggerChange} \r\n                />\r\n            )\r\n          }\r\n          </FormItem>\r\n        );\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {Link,} from 'react-router-dom';\r\nimport {Form } from 'antd';\r\nconst FormItem = Form.Item;\r\nexport default class extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          val: 0,\r\n        };\r\n      }\r\n      triggerChange = (e) => {\r\n        const onChange = this.props.onChange;\r\n        if (onChange) {\r\n          onChange(Object.assign({}, this.state, e.target.value));\r\n        }\r\n      }\r\n    render(){\r\n        const { attr, data, render, form, optionsRule, formItemLayout} = this.props;\r\n        const { getFieldDecorator } = form;\r\n        return (\r\n          <FormItem\r\n              key={attr}\r\n              label={render.label}\r\n              {...formItemLayout}\r\n            >\r\n          {\r\n            getFieldDecorator(`${attr}`, optionsRule)(\r\n                <Link \r\n                    key={attr} \r\n                    to={data.config.link}\r\n                >\r\n                    {render.label}\r\n                </Link>\r\n            )\r\n          }\r\n          </FormItem>\r\n        );\r\n    }\r\n}","import {DatePicker} from 'antd';\r\nimport React,{Component} from 'react';\r\nimport { Form} from 'antd';\r\nimport moment from 'moment';\r\nimport {validation} from 'components/ptp__form-layout/validations/form-item/Input';\r\nconst  FormItem = Form.Item;\r\nexport default class extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      val: 0,\r\n    };\r\n  }\r\n  triggerChange = (e) => {\r\n    const onChange = this.props.onChange;\r\n    if (onChange) {\r\n      onChange(Object.assign({}, this.state, e.target.value));\r\n    }\r\n  }\r\n  checkRule=(option,data ) =>{\r\n    const dateFormat = 'YYYY/MM/DD';\r\n    if(option.length===0){\r\n        const optionRule={\r\n            initialValue:moment(data.defaultValue, dateFormat),\r\n            rules: validation.require\r\n          }\r\n        return optionRule;\r\n    }else{\r\n        return option;\r\n    }\r\n  }\r\n  render(){ \r\n      const { attr, data, render, form, optionsRule, formItemLayout} = this.props;\r\n      const { getFieldDecorator } = form;\r\n      const checkRule = this.checkRule(optionsRule, data);\r\n      return (\r\n        <FormItem\r\n              key={attr}\r\n              label={render.label}\r\n              {...formItemLayout}\r\n          >\r\n        {\r\n          getFieldDecorator(`${attr}`, checkRule)(\r\n            <DatePicker \r\n                key={attr}\r\n                onChange={this.triggerChange}\r\n                placeholder={render.placeholder}  \r\n                style={{width:'100%'}}\r\n                />\r\n          )\r\n        }\r\n        </FormItem>\r\n      );\r\n  }\r\n}","import React,{Component} from 'react';\r\nimport {Input, Form} from 'antd';\r\n\r\nimport {validation} from 'components/ptp__form-layout/validations/form-item/Input';\r\nconst  FormItem = Form.Item;\r\nexport default class extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      val: 0,\r\n    };\r\n  }\r\n  triggerChange = (e) => {\r\n    const onChange = this.props.onChange;\r\n    if (onChange) {\r\n      onChange(Object.assign({}, this.state, e.target.value));\r\n    }\r\n  }\r\n  checkRule=(option,data ) =>{\r\n    if(option.length===0){\r\n        const optionRule={\r\n            initialValue:data.defaultValue,\r\n            rules: validation.url\r\n          }\r\n        return optionRule;\r\n    }else{\r\n        return option;\r\n    }\r\n  }\r\n  render(){ \r\n      const { attr, data, render, form, optionsRule, formItemLayout} = this.props;\r\n      const { getFieldDecorator } = form;\r\n      const checkRule = this.checkRule(optionsRule, data);\r\n      return (\r\n        <FormItem\r\n              key={attr}\r\n              label={render.label}\r\n              {...formItemLayout}\r\n          >\r\n        {\r\n          getFieldDecorator(`${attr}`, checkRule)(\r\n            <Input \r\n                key={attr}\r\n                onChange={this.triggerChange}\r\n                placeholder={render.placeholder} \r\n                // defaultValue={data.defaultValue} \r\n                />\r\n          )\r\n        }\r\n        </FormItem>\r\n      );\r\n  }\r\n}","import { Col, Form, Row } from 'antd';\r\nimport { renderFormItem } from 'components/ptp__form-layout/components/index';\r\nimport { renderTriggerItem } from 'components/ptp__form-layout/components/trigger/index';\r\nimport React, { Component } from 'react';\r\nimport '../css/index.scss';\r\nconst edit_submit = 1;\r\nclass FormLayoutContent extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      submit: null\r\n    };\r\n  }\r\n\r\n  findFieldWithAttr = (listFields, attri) => {\r\n      const result = listFields.filter(singleField => singleField.attrbField === attri);\r\n      return result[0];\r\n  }\r\n\r\n  findTriggerWithAttr = (listTrigger, attri) => {\r\n      const result = listTrigger.filter(singleTrigger => singleTrigger.attrbTrigger === attri);\r\n      return result[0];\r\n  }\r\n\r\n  getFunction = (attr) => {\r\n      const {actions} = this.props;\r\n      const actionContent= actions.filter(act=>act.attrbtn === attr)[0];\r\n      return actionContent;\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.props.form.validateFields((err, values) => {\r\n        if (!err) {\r\n          const onSubmit = this.getFunction('save').content;\r\n          onSubmit(values);\r\n        }else{\r\n          const onSubmit = this.getFunction('save').content;\r\n          onSubmit('error');\r\n        }\r\n      });\r\n  }\r\n  getOptionRule = (colValues) => {\r\n      if(!colValues.data.validation) return []; \r\n      if(!colValues.data.validation.rules) return [];\r\n      const rules =colValues.data.validation.rules;\r\n      const checkHasRule= (rules!==undefined && rules.length!==0)?true:false;\r\n      if(checkHasRule ){\r\n          return {\r\n              initialValue:colValues.data.defaultValue,\r\n              rules: rules,\r\n          }\r\n      }else if(!checkHasRule ){\r\n          return {\r\n              initialValue:colValues.data.defaultValue,\r\n              rules: [],\r\n          }\r\n      }\r\n  }\r\n  render () {\r\n    console.log(this.props.submit);\r\n    const { formID, layouts, actions, trigger, classNames, type, listFields, submit } = this.props;\r\n\r\n    const formItemLayout = type === 'horizontal' ? {\r\n      labelCol: { span: 10 },\r\n      wrapperCol: { span: 14 }\r\n    } : null;\r\n    if (submit === edit_submit) {\r\n      document.getElementById(`submitBtn-${formID}`).click();\r\n    }\r\n    return (layouts) ?\r\n      (\r\n          <Form id={formID} layout={type} className={classNames} onSubmit={this.handleSubmit}>\r\n          <button id={`submitBtn-${formID}`} type='submit' style={{ display: 'none' }} />\r\n          {\r\n            layouts.map((rowForm, index) => {\r\n              return <Row key={index} className='row-form-item' gutter={16}>\r\n                      {\r\n                  rowForm.map((cols, index) => {\r\n                    const { sm, md, lg, xl, xxl } = cols.width;\r\n                    const colValues = this.findFieldWithAttr(listFields, cols.attrbLayout);\r\n                    if (cols.attrbTrigger) {\r\n                      const colTrigger = this.findTriggerWithAttr(trigger, cols.attrbTrigger);\r\n                      if (colTrigger !== undefined) {\r\n                        return <Col key={index} sm={sm} md={md} lg={lg} xl={xl} xxl={xxl}>\r\n                          {renderTriggerItem(trigger, cols.attrbTrigger, actions)}\r\n                        </Col>;\r\n                      }else {\r\n                        return <div key={index} />;\r\n                      }\r\n                    } else\r\n                    if (colValues !== undefined) {\r\n                      const optionsRule = this.getOptionRule(colValues);\r\n                      return <Col key={index} sm={sm} md={md} lg={lg} xl={xl} xxl={xxl}>\r\n                        {\r\n                          renderFormItem(\r\n                            listFields,\r\n                            cols.attrbLayout,\r\n                            this.props.form,\r\n                            optionsRule,\r\n                            formItemLayout\r\n                          )\r\n                        }\r\n                      </Col>;\r\n                    } else{\r\n                      return <div key={index} />;\r\n                    }\r\n                  })\r\n                }\r\n              </Row>;\r\n            })\r\n          }\r\n        </Form>\r\n      )\r\n        :(\r\n        <div />\r\n      );\r\n  }\r\n}\r\n\r\nexport default Form.create()(FormLayoutContent);\r\n","import React from 'react';\r\nimport Input from './form-items/Input';\r\nimport TextArea from './form-items/TextArea';\r\nimport Email from './form-items/Email';\r\nimport NumberInput from './form-items/NumberInput';\r\nimport PasswordInput from './form-items/PasswordInput';\r\nimport PhoneNumberInput from './form-items/PhoneNumberInput';\r\n\r\nimport Select from './form-items/Select';\r\nimport MultiSelect from './form-items/MultiSelect';\r\nimport RadioButton from './form-items/RadioButton';\r\nimport Checkbox from './form-items/Checkbox';\r\nimport Link from './form-items/Link';\r\nimport DatePicker from './form-items/DatePicker';\r\nimport URL from './form-items/Url';\r\n\r\nconst findFieldWithAttr = (listFields, attri) => {\r\n  const result = listFields.filter(singleField => singleField.attrbField === attri);\r\n  return result[0];\r\n};\r\nexport const renderFormItem = (listFields, attribute, form, optionsRule, formItemLayout) => {\r\n  const field = findFieldWithAttr(listFields, attribute);\r\n  switch (field.data.dataType) {\r\n    case 'TEXT':\r\n      return <Input\r\n        formItemLayout={formItemLayout}\r\n        optionsRule={optionsRule}\r\n        form={form}\r\n        attr={field.attrbField}\r\n        data={field.data}\r\n        render={field.render}\r\n        action={field.action}\r\n      />;\r\n    case 'TEXT_AREA':\r\n      return <TextArea\r\n        formItemLayout={formItemLayout}\r\n        optionsRule={optionsRule}\r\n        form={form}\r\n        attr={field.attrbField}\r\n        data={field.data}\r\n        render={field.render}\r\n        action={field.action}\r\n      />;\r\n    case 'EMAIL':\r\n      return <Email\r\n        formItemLayout={formItemLayout}\r\n        optionsRule={optionsRule}\r\n        form={form}\r\n        attr={field.attrbField}\r\n        data={field.data}\r\n        render={field.render}\r\n        action={field.action}\r\n      />;\r\n    case 'PASSWORD':\r\n      return <PasswordInput\r\n        formItemLayout={formItemLayout}\r\n        optionsRule={optionsRule}\r\n        form={form}\r\n        attr={field.attrbField}\r\n        data={field.data}\r\n        render={field.render}\r\n        action={field.action} />;\r\n    case 'NUMBER':\r\n      return <NumberInput\r\n        formItemLayout={formItemLayout}\r\n        optionsRule={optionsRule}\r\n        form={form}\r\n        attr={field.attrbField}\r\n        data={field.data}\r\n        render={field.render}\r\n        action={field.action} />;\r\n    case 'PHONE':\r\n      return <PhoneNumberInput\r\n        formItemLayout={formItemLayout}\r\n        optionsRule={optionsRule}\r\n        form={form}\r\n        attr={field.attrbField}\r\n        data={field.data}\r\n        render={field.render}\r\n        action={field.action} />;\r\n    case 'SELECT':\r\n      return <Select\r\n        formItemLayout={formItemLayout}\r\n        optionsRule={optionsRule}\r\n        form={form}\r\n        attr={field.attrbField}\r\n        data={field.data}\r\n        render={field.render}\r\n        action={field.action} />;\r\n    case 'MULTI_SELECT':\r\n      return <MultiSelect\r\n        formItemLayout={formItemLayout}\r\n        optionsRule={optionsRule}\r\n        form={form}\r\n        attr={field.attrbField}\r\n        data={field.data}\r\n        render={field.render}\r\n        action={field.action} />;\r\n    case 'CHECKBOX':\r\n      return <Checkbox\r\n        formItemLayout={formItemLayout}\r\n        optionsRule={optionsRule}\r\n        form={form}\r\n        attr={field.attrbField}\r\n        data={field.data}\r\n        render={field.render}\r\n        action={field.action} />;\r\n    case 'RADIO':\r\n      return <RadioButton\r\n        formItemLayout={formItemLayout}\r\n        optionsRule={optionsRule}\r\n        form={form}\r\n        attr={field.attrbField}\r\n        data={field.data}\r\n        render={field.render}\r\n        action={field.action} />;\r\n    case 'LINK':\r\n      return <Link\r\n        formItemLayout={formItemLayout}\r\n        optionsRule={optionsRule}\r\n        form={form}\r\n        attr={field.attrbField}\r\n        data={field.data}\r\n        render={field.render}\r\n        action={field.action} />;\r\n    case 'DATE_PICKER':\r\n      return <DatePicker\r\n        formItemLayout={formItemLayout}\r\n        optionsRule={optionsRule}\r\n        form={form}\r\n        attr={field.attrbField}\r\n        data={field.data}\r\n        render={field.render}\r\n        action={field.action} />;\r\n    case 'URL':\r\n      return <URL\r\n        formItemLayout={formItemLayout}\r\n        optionsRule={optionsRule}\r\n        form={form}\r\n        attr={field.attrbField}\r\n        data={field.data}\r\n        render={field.render}\r\n        action={field.action} />;\r\n    default:\r\n      return <Input\r\n        formItemLayout={formItemLayout}\r\n        optionsRule={optionsRule}\r\n        form={form}\r\n        attr={field.attrbField}\r\n        data={field.data}\r\n        render={field.render}\r\n        action={field.action} />;\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport FormView from './containers/FormView';\r\nimport FormActions from './containers/FormActions';\r\nexport default class extends Component {\r\n  render () {\r\n    const { layouts, actions, trigger, classNames, type, listFields, mode, submit, formID } = this.props;\r\n    return (mode === 'view')\r\n      ? (\r\n\r\n        <FormView\r\n          layouts={layouts}\r\n          actions={actions}\r\n          trigger={trigger}\r\n          classNames={classNames}\r\n          type={type}\r\n          listFields={listFields}\r\n          submit={submit}\r\n          formID={formID}\r\n        />\r\n      )\r\n      : (\r\n        <FormActions\r\n          layouts={layouts}\r\n          actions={actions}\r\n          trigger={trigger}\r\n          classNames={classNames}\r\n          type={type}\r\n          listFields={listFields}\r\n          submit={submit}\r\n          formID={formID}\r\n        />\r\n\r\n      );\r\n  }\r\n}\r\n","export const layouts=[\r\n    [\r\n        {\r\n            attrbLayout:'name',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            attrbLayout:'typeCar',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            attrbLayout:'color',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n        \r\n    ],\r\n    [\r\n        {\r\n            attrbLayout:'brank',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n        \r\n    ],\r\n    [\r\n        {\r\n            attrbLayout:'description',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n        \r\n    ],\r\n]","import React, {Component} from 'react';\r\nimport FormContent from 'components/ptp__form-layout';\r\nimport {layouts} from '../layout';\r\nimport {Row, Col, Button, Icon} from 'antd';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst edit_view = 0, edit_submit= 1;\r\nclass FormEditContent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            edit:edit_view, \r\n            dataSubmit:{\r\n            },\r\n            car:null,\r\n            id:'',\r\n\r\n        }\r\n    }\r\n\r\n    changeView = () => {\r\n        this.setState({edit: edit_submit});\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.setState({edit: edit_view});\r\n        \r\n        if(values!=='error'){\r\n            const obj= {\r\n                id:'12',\r\n                purchDate: '2018-12-22T09:48:25.350Z'\r\n            }\r\n            this.props.onSubmitAdd({...values, ...obj});\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const { edit,  } = this.state;\r\n        const classNames=\"field-no-radius form-light\";\r\n        const type=\"vertical\";\r\n        const trigger =[\r\n            {\r\n                attrbTrigger:'save',\r\n                render:{\r\n                    type:'BUTTON',\r\n                    size:'default',\r\n                    label:'Lưu lại',\r\n                    icon:'download',\r\n                }\r\n            },  \r\n        ]\r\n        const actions=[\r\n            {\r\n                attrbtn: 'save',\r\n                content: (val) => this.handleSubmit(val)\r\n            },\r\n        ]\r\n        const listFields=[\r\n            {\r\n                attrbField:'name',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập tên xe',\r\n                    label:'Tên xe: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'color',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    }\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập màu sắc',\r\n                    label:'Màu sắc xe: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'brank',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập brank ',\r\n                    label:'Brank: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'description',\r\n                data:{\r\n                    dataType:'TEXT_AREA',\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    },\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập mô tả',\r\n                    label:'Mô tả: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'typeCar',\r\n                data:{\r\n                    dataType:'SELECT',\r\n                    config:{\r\n                        options:[\r\n                            {\r\n                                text:'Xe số',\r\n                                value:'xeso',\r\n                            },\r\n                            {\r\n                                text:'Xe tay ga',\r\n                                value:'tayga',\r\n                            },\r\n                            {\r\n                                text:'Xe con',\r\n                                value:'xecon',\r\n                            },\r\n                        ]\r\n                    },\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    },\r\n                    defaultValue:'tayga',\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng chọn loại xe',\r\n                    label:'Loại xe: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            \r\n        ] \r\n       \r\n        return(\r\n            <Row >\r\n                <Col md={24}>\r\n                    <FormContent\r\n                        layouts={layouts}\r\n                        actions={actions} \r\n                        trigger={trigger} \r\n                        classNames={classNames} \r\n                        type={type} \r\n                        listFields={listFields}\r\n                        submit= {edit}\r\n                        formID= \"addCar\"\r\n                        mode= \"edit\"\r\n                        handleSubmit= {this.handleSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={24}>\r\n                    <Button onClick={()=>this.changeView()}>\r\n                        <Icon type=\"save\"></Icon> Save\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormEditContent));","import React, {Component} from 'react';\r\nimport FormContent from 'components/ptp__form-layout';\r\nimport {layouts} from '../layout';\r\nimport {Row, Col, Button, Icon} from 'antd';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst edit_view = 0, edit_submit= 1;\r\nclass FormEditContent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            edit:edit_view, \r\n            dataSubmit:{\r\n            },\r\n            car:null,\r\n            id:'',\r\n\r\n        }\r\n    }\r\n\r\n    changeView = () => {\r\n        this.setState({edit: edit_submit});\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.setState({edit: edit_view});\r\n        \r\n        if(values!=='error'){\r\n            const id= this.props.id;\r\n            const obj= {\r\n                id: id,\r\n                purchDate: '2018-12-22T09:48:25.350Z'\r\n            }\r\n            this.props.onSubmitEdit( id, {...values, ...obj});\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const { edit,  } = this.state;\r\n        const { car } = this.props;\r\n        const classNames=\"field-no-radius form-light\";\r\n        const type=\"vertical\";\r\n        const trigger =[\r\n            {\r\n                attrbTrigger:'save',\r\n                render:{\r\n                    type:'BUTTON',\r\n                    size:'default',\r\n                    label:'Lưu lại',\r\n                    icon:'download',\r\n                }\r\n            },  \r\n        ]\r\n        const actions=[\r\n            {\r\n                attrbtn: 'save',\r\n                content: (val) => this.handleSubmit(val)\r\n            },\r\n        ]\r\n        const listFields=[\r\n            {\r\n                attrbField:'name',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    defaultValue:car.name,\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập tên xe',\r\n                    label:'Tên xe: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'color',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    defaultValue:car.color,\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    }\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập màu sắc',\r\n                    label:'Màu sắc xe: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'brank',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    defaultValue:car.brank,\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập brank ',\r\n                    label:'Brank: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'description',\r\n                data:{\r\n                    dataType:'TEXT_AREA',\r\n                    defaultValue:car.description,\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    },\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập mô tả',\r\n                    label:'Mô tả: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'typeCar',\r\n                data:{\r\n                    dataType:'SELECT',\r\n                    config:{\r\n                        options:[\r\n                            {\r\n                                text:'Xe số',\r\n                                value:'xeso',\r\n                            },\r\n                            {\r\n                                text:'Xe tay ga',\r\n                                value:'tayga',\r\n                            },\r\n                            {\r\n                                text:'Xe con',\r\n                                value:'xecon',\r\n                            },\r\n                        ]\r\n                    },\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    },\r\n                    defaultValue:'tayga',\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng chọn loại xe',\r\n                    label:'Loại xe: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            \r\n        ] \r\n       \r\n        return(\r\n            <Row >\r\n                <Col md={24}>\r\n                    <FormContent\r\n                        layouts={layouts}\r\n                        actions={actions} \r\n                        trigger={trigger} \r\n                        classNames={classNames} \r\n                        type={type} \r\n                        listFields={listFields}\r\n                        submit= {edit}\r\n                        formID= \"editCar\"\r\n                        mode= \"edit\"\r\n                        handleSubmit= {this.handleSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={24}>\r\n                    <Button onClick={()=>this.changeView()}>\r\n                        <Icon type=\"save\"></Icon> Save\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormEditContent));","import callApis from 'utils/callAPI/apiCaller';\r\nimport * as Types from './ActionTypes';\r\n\r\nexport const reqCountData = (accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Car/CountAll/pagesize/pageNow`, 'GET', null, accesstoken).then(res => {\r\n            dispatch(actCountData(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actCountData = (data) => {\r\n    return {\r\n        type: Types.COUNT_DATA,\r\n        data\r\n    }\r\n}\r\nexport const reqSearchCar = (keyword, pageIndex, pageSize, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Car/PagingCondition/pagesize/pageNow/condition?pagesize=${pageSize}&pageNow=${pageIndex}&condition=${keyword}`, 'GET', null, accesstoken).then(res => {\r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\n\r\nexport const reqLoadDataPaging = (pageIndex,pageSize,accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Car/Paging/pagesize/pageNow?pagesize=${pageSize}&pageNow=${pageIndex}`, 'GET', null, accesstoken).then(res => {\r\n            console.log(res.data);    \r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const reqSearchProduct = (keyword, pageIndex, pageSize, sortOrder, priceStart, priceEnd, accesstoken) => {\r\n    return (dispatch) => {\r\n        callApis(`Car/CountCondition/condition?condition=${keyword}`, 'GET', null, accesstoken).then(res => {\r\n            dispatch(actCountData(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        return callApis(\r\n        `Car/PagingConditionPrice/condition/pageIndex/pageSize/sortOrder/priceStart/priceEnd?condition=${keyword}&pageIndex=${pageIndex}&pageSize=${pageSize}&sortOrder=${sortOrder}&priceStart=${priceStart}&priceEnd=${priceEnd}`,\r\n         'GET', null, accesstoken).then(res => {\r\n            console.log(res.data);    \r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actLoadDataPaging = (data) => {\r\n    return {\r\n        type: Types.LOAD_CAR,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqFindCar = (id, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Car/GetById/${id}`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actFindCar(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actFindCar = (data) => {\r\n    return {\r\n        type: Types.FIND_CAR,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqDeleteCar = (id, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Car/Delete/${id}`, 'DELETE', null, accesstoken).then(res => {\r\n            return callApis(`Car/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actDeleteCar(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actDeleteCar = (data) => {\r\n    return {\r\n        type: Types.DELETE_CAR,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqUpdateCar = (id, Car, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Car/Update/${id}`, 'PUT', Car, accesstoken).then(res => {\r\n            return callApis(`Car/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actUpdateCar(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actUpdateCar = (data) => {\r\n    return {\r\n        type: Types.UPDATE_CAR,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqAddCar = ( Car, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Car/Create`, 'POST', Car, accesstoken).then(res => {\r\n            console.log(res.data);\r\n            return callApis(`Car/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actAddCar(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actAddCar = (data) => {\r\n    return {\r\n        type: Types.ADD_CAR,\r\n        data\r\n    }\r\n}\r\n","import React,{Component} from 'react';\r\nimport {Row, Col, Button, Icon, Popover, Avatar, Select, notification,   } from 'antd';\r\nimport './index.css';\r\nimport FunctionbarContent from './function/index';\r\nimport PanelWrapper from 'containers/wrapper/Panel.style';\r\nimport TableContent from 'components/ptp__table/index';\r\n// import TableContent from 'components/table/MyTable';\r\n\r\n// import {demoData} from './list-car-dumy';\r\nimport DrawerContent from 'components/Drawer/Drawer';\r\nimport FormCar from './action/add/FormCar'; \r\nimport FormEditCar from './action/edit/edit'; \r\n\r\nimport { withRouter, } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {showNotification} from 'components/notification/Notification';\r\nimport {reqLoadDataPaging, reqSearchCar, reqCountData, reqFindCar, reqDeleteCar, reqAddCar, reqUpdateCar} from 'redux/car/actions';\r\nimport * as CONST_VARIABLE from 'utils/const/index';\r\n\r\nclass CarManagement extends Component{\r\n    state={\r\n        pageSize:5,\r\n        pageIndex:1,\r\n        fullScreenMode:false,\r\n        \r\n        visibledAdd:false,\r\n        visibledEdit:false,\r\n\r\n        filteredInfo: null,\r\n        sortedInfo: null, \r\n        selectedRowKeys: [],\r\n        pagination:null,\r\n        recordSelected:null,\r\n        data:[],\r\n        idEdit:null\r\n    }\r\n    handleFullScreenMode=(val)=> {\r\n        this.setState(() => {\r\n            return {\r\n                fullScreenMode: val\r\n            };\r\n        });\r\n    }\r\n        \r\n    showDrawerAdd=()=>{ this.setState({visibledAdd:true}) }\r\n    onCloseAdd = () => { this.setState({ visibledAdd: false, }) };\r\n\r\n    showDrawerEdit=(id)=>{ \r\n        this.props.handleFindCar(id);\r\n        this.setState({visibledEdit:true, idEdit: id});\r\n     }\r\n    onCloseEdit = () => { this.setState({ visibledEdit: false, }) };\r\n\r\n\r\n    onSelectChange = (selectedRowKeys) => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({ selectedRowKeys });\r\n    }\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter,\r\n            pagination: pagination\r\n        });\r\n\r\n    }\r\n\r\n    onRowSelect = (record) => {\r\n        this.setState({recordSelected:record});\r\n    }\r\n\r\n    clearFilters = (attr, name) => {\r\n        const filteredInfo = this.state.filteredInfo;\r\n        let arrayVal = filteredInfo[attr.val];\r\n        let ind = arrayVal.indexOf(name);\r\n        arrayVal.splice(ind, 1);\r\n        let attrFilter ={\r\n            [attr.val]: arrayVal\r\n        }\r\n        const obj= {...filteredInfo, ...attrFilter};\r\n        this.setState({ filteredInfo: obj });\r\n    }\r\n\r\n    clearSorted = () => {\r\n        this.setState({ sortedInfo: null, });\r\n    }\r\n    handleChangeSelectInRow =(value) => {\r\n        console.log(\"change value in rrow: \");\r\n        console.log(value, this.state.recordSelected);\r\n    }\r\n    \r\n    handleOnSearch= (val) =>{\r\n        console.log(this.state.pagination);\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        // console.log(val);\r\n        if(val!==''){\r\n            // this.props.countAllCar(accesstoken);    \r\n            this.props.handleSearchCar(val, this.state.pageIndex, this.state.pageSize, accesstoken);\r\n       \r\n        }else{\r\n            const {pageIndex, pageSize}= this.state;\r\n            this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n            this.props.countAllCar(accesstoken);    \r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentWillMount(){\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        const {pageIndex, pageSize}= this.state;\r\n        this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n        this.props.countAllCar(accesstoken);\r\n    }\r\n\r\n    componentDidMount(){\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        const {pageIndex, pageSize}= this.state;\r\n        this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n        this.props.countAllCar(accesstoken);\r\n    }\r\n\r\n    handleSubmit=(obj)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleAddCar(obj, accesstoken);\r\n        this.onCloseAdd();\r\n        showNotification(\"Thêm thành công\", \"Bạn vừa thực hiện thêm một xe!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n    handleDelete=(id)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleDeleteCar(id, accesstoken);\r\n        showNotification(\"Xóa thành công\", \"Bạn vừa thực hiện xóa một xe!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n    handleSubmitEdit=(id, obj)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleUpdateCar(id, obj, accesstoken);\r\n        this.onCloseEdit();\r\n        this.setState({id:null});\r\n        showNotification(\"Sửa thành công\", \"Bạn vừa thực hiện cập nhật thông tin một xe!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n   \r\n    render(){\r\n        let { sortedInfo, filteredInfo } = this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const info = {\r\n            sorted: sortedInfo,\r\n            filtered: filteredInfo\r\n        }\r\n        const columns = [\r\n            {\r\n                title: 'Tên xe',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\r\n            }, \r\n            {\r\n                title: 'Loại xe',\r\n                dataIndex: 'typeCar',\r\n                key: 'typeCar',\r\n                defaultSortOrder: 'ascend',\r\n                sorter: (a, b) => a.typeCar - b.typeCar,\r\n                sortOrder: sortedInfo.columnKey === 'typeCar' && sortedInfo.order,\r\n            }, \r\n            {\r\n                title: 'Màu sắc',\r\n                dataIndex: 'color',\r\n                key: 'color',\r\n            }, \r\n            {\r\n                title: 'Brank',\r\n                dataIndex: 'brank',\r\n                key: 'brank',\r\n            }, \r\n            {\r\n                title: 'Mô tả',\r\n                dataIndex: 'description',\r\n                key: 'description',\r\n            }, \r\n            {\r\n                title: 'Action',\r\n                align:'center',\r\n                render:(text, record, index)=>{\r\n                    return(\r\n                        <div>\r\n                            <Button onClick={()=>this.showDrawerEdit(text)} className='btn btn-table' icon='edit'></Button>\r\n                            <Button \r\n                                onClick={()=>this.handleDelete(text)} \r\n                                className='btn btn-table' \r\n                                icon='delete'>\r\n                            </Button>\r\n                        </div>\r\n                    );\r\n                },\r\n                dataIndex: 'id',\r\n                key:'id',\r\n                width : 100\r\n               \r\n            },\r\n       ];\r\n        \r\n        const config ={\r\n            table:{\r\n                // bordered: true\r\n            },\r\n            pagination:{\r\n                defaultPageSize:5,\r\n                total: this.props.numberCar\r\n            },\r\n        }\r\n        const event={\r\n            table:{\r\n                onChange:this.handleChange,\r\n                clearSorted: this.clearSorted,\r\n                clearFiltered: this.clearFilters,\r\n                onRow: this.onRowSelect,\r\n                onSearch: this.handleOnSearch\r\n            },\r\n            pagination:{\r\n                onChange:\r\n                    (page, pageSize)=>{\r\n                        const accesstoken= sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n                        this.props.loadDataPaging(page, pageSize, accesstoken);\r\n                    },\r\n                onShowSizeChange:\r\n                    (page, pageSize)=>{\r\n                        const accesstoken= sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n                        this.props.loadDataPaging(page, pageSize, accesstoken);\r\n                    }\r\n            }\r\n        }\r\n        const { selectedRowKeys } = this.state;\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n            hideDefaultSelections: true,\r\n            selections: [{\r\n                key: 'all-data',\r\n                text: 'Select All Data',\r\n                onSelect: () => {\r\n                this.setState({\r\n                    selectedRowKeys: [...Array(46).keys()], // 0...45\r\n                });\r\n                },\r\n            }, {\r\n                key: 'odd',\r\n                text: 'Select Odd Row',\r\n                onSelect: (changableRowKeys) => {\r\n                let newSelectedRowKeys = [];\r\n                newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                    if (index % 2 !== 0) {\r\n                    return false;\r\n                    }\r\n                    return true;\r\n                });\r\n                this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                },\r\n            }, {\r\n                key: 'even',\r\n                text: 'Select Even Row',\r\n                onSelect: (changableRowKeys) => {\r\n                let newSelectedRowKeys = [];\r\n                newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                    if (index % 2 !== 0) {\r\n                    return true;\r\n                    }\r\n                    return false;\r\n                });\r\n                this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                },\r\n            }],\r\n            // onSelection: this.onSelection,\r\n        };\r\n\r\n\r\n        var listPropForDrawer={\r\n            styleProps:{\r\n              title:\"Nhập thông tin!\",\r\n              width:420,\r\n              height:'100%',\r\n              maskStyle:{\r\n                  color:'red'\r\n              },\r\n              mask:true,\r\n              maskClosable:true,\r\n              style:{\r\n                  backgroundColor:'#fafafa'\r\n              },\r\n              className:\"ok\",\r\n              zIndex:1,\r\n              placement:\"right\",\r\n              closable:this.state.visibledAdd,\r\n              destroyOnClose:false,\r\n            },\r\n            onClose:this.onCloseAdd,\r\n            visible:this.state.visibledAdd,\r\n            hasButtonFooter:false,\r\n            componentWillShow:(key)=> <FormCar\r\n                    key={key}\r\n                    onSubmitAdd={this.handleSubmit}\r\n                />,\r\n        }\r\n        var listPropForDrawerEdit={\r\n            styleProps:{\r\n              title:\"Nhập thông tin sửa đổi!\",\r\n              width:420,\r\n              height:'100%',\r\n              maskStyle:{\r\n                  color:'red'\r\n              },\r\n              mask:true,\r\n              maskClosable:true,\r\n              style:{\r\n                  backgroundColor:'#fafafa'\r\n              },\r\n              className:\"ok\",\r\n              zIndex:1,\r\n              placement:\"right\",\r\n              closable:this.state.visibledEdit,\r\n              destroyOnClose:false,\r\n            },\r\n            onClose:this.onCloseEdit,\r\n            visible:this.state.visibledEdit,\r\n            hasButtonFooter:false,\r\n            componentWillShow:(key)=> <FormEditCar \r\n                key={key}\r\n                id={this.state.idEdit} \r\n                car={this.props.itemCar}\r\n                onSubmitEdit={this.handleSubmitEdit}\r\n            />,\r\n        }\r\n        return (\r\n            <Row className=\"content_manager_wrapper\" style={{height:'100%'}}>\r\n                <PanelWrapper className={this.state.fullScreenMode ? \"full-screen-mode\" : \"\"}>\r\n                    <FunctionbarContent showDrawerAdd={this.showDrawerAdd} handleFullScreenMode={this.handleFullScreenMode}/>\r\n                    <Col md={24} className=\"table-wrapper\">\r\n                        <TableContent\r\n                            rowSelection={rowSelection}\r\n                            data={this.props.car} \r\n                            columns={columns} \r\n                            config={config} \r\n                            event={event}\r\n                            info={info}\r\n                        />\r\n                        \r\n                    </Col>\r\n                    <DrawerContent \r\n                        key={'addcar'}\r\n                        styleProps={listPropForDrawer.styleProps} \r\n                        visible={listPropForDrawer.visible} \r\n                        onClose={listPropForDrawer.onClose}\r\n                        hasButtonFooter={listPropForDrawer.hasButtonFooter}    \r\n                        componentWillShow={listPropForDrawer.componentWillShow}\r\n                    />\r\n                    <DrawerContent \r\n                        key={'editcar'}\r\n                        styleProps={listPropForDrawerEdit.styleProps} \r\n                        visible={listPropForDrawerEdit.visible} \r\n                        onClose={listPropForDrawerEdit.onClose}\r\n                        hasButtonFooter={listPropForDrawerEdit.hasButtonFooter}    \r\n                        componentWillShow={listPropForDrawerEdit.componentWillShow}\r\n                    />\r\n                </PanelWrapper>\r\n\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        car: state.car,\r\n        itemCar: state.itemCar,\r\n        numberCar: state.numberCar\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        handleAddCar: (object, accesstoken)=>{\r\n            dispatch(reqAddCar(object, accesstoken));\r\n        },\r\n        handleFindCar: (id, accesstoken)=>{\r\n            dispatch(reqFindCar(id, accesstoken));\r\n        },\r\n        handleUpdateCar: (id, object, accesstoken)=>{\r\n            dispatch(reqUpdateCar(id, object, accesstoken));\r\n        },\r\n        handleDeleteCar: (id, accesstoken)=>{\r\n            dispatch(reqDeleteCar(id, accesstoken));\r\n        },\r\n        loadDataPaging: (pageIndex, pageSize, accesstoken)=>{\r\n            dispatch(reqLoadDataPaging(pageIndex, pageSize, accesstoken));\r\n        },\r\n        countAllCar: ( accesstoken)=>{\r\n            dispatch(reqCountData( accesstoken));\r\n        },\r\n        handleSearchCar: (keyword, pageIndex, pageSize, accesstoken)=>{\r\n            dispatch(reqSearchCar(keyword, pageIndex, pageSize, accesstoken))\r\n        }\r\n\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CarManagement));","import React, {Component} from 'react';\r\nimport {Button, Icon, Row,Col} from 'antd';\r\nimport './index.css';\r\nimport 'settings/css/global.scss';\r\n\r\nclass FunctionContent extends Component{\r\n    state={\r\n        fullScreen:true,\r\n        visibled:true,\r\n    }\r\n    onClose = () => { this.setState({ visibled: false, }) };\r\n    showDrawer = () => {  \r\n        this.setState({  visibled: true, },this.props.showDrawerAdd(this.state.visibled)); \r\n        \r\n    };\r\n    setFullScreen=()=>{\r\n        this.setState({fullScreen:true},this.props.handleFullScreenMode(this.state.fullScreen));\r\n    }\r\n    setNotFullScreen=()=>{\r\n        this.setState({fullScreen:false},this.props.handleFullScreenMode(this.state.fullScreen));\r\n    }\r\n    render(){\r\n       \r\n        return(\r\n            <Row className=\"function-bar-wrapper\">\r\n                <Col md={24}>\r\n                    <Button type=\"default\" onClick={this.showDrawer} size=\"small\" className=\"function-btn-left\">\r\n                        <Icon type=\"plus\" theme=\"outlined\" />\r\n                    </Button>\r\n                    <Button type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                        <Icon type=\"close\" theme=\"outlined\" />\r\n                    </Button>\r\n                    {\r\n                        (this.state.fullScreen)?\r\n                        <Button \r\n                            onClick={this.setNotFullScreen}\r\n                            type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                                <Icon type=\"fullscreen\" theme=\"outlined\" />\r\n                        </Button>:\r\n                        <Button \r\n                            onClick={this.setFullScreen}\r\n                            type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                            <Icon type=\"fullscreen-exit\" theme=\"outlined\" />\r\n                        </Button>\r\n                    }\r\n                </Col>\r\n                \r\n            </Row>\r\n        );\r\n    }\r\n\r\n}\r\nexport default FunctionContent;","export const layouts=[\r\n    [\r\n        {\r\n            attrbLayout:'nameCompany',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            attrbLayout:'email',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            attrbLayout:'phoneNumber',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n                // sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n        \r\n    ],\r\n    [\r\n        {\r\n            attrbLayout:'partnerPayment',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n        \r\n    ],\r\n]","import React, {Component} from 'react';\r\nimport FormContent from 'components/ptp__form-layout';\r\nimport {layouts} from '../layout';\r\nimport {Row, Col, Button, Icon} from 'antd';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst edit_view = 0, edit_submit= 1;\r\nclass FormAddContent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            edit:edit_view, \r\n            dataSubmit:{\r\n            },\r\n            Partner:null,\r\n            id:'',\r\n\r\n        }\r\n    }\r\n\r\n    changeView = () => {\r\n        this.setState({edit: edit_submit});\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.setState({edit: edit_view});\r\n        if(values!=='error'){\r\n            const obj= {\r\n                id:'12',\r\n                purchDate: '2018-12-22T09:48:25.350Z'\r\n            }\r\n            this.props.onSubmitAdd({...values, ...obj});\r\n            // this.setState({edit: edit_view});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { edit,  } = this.state;\r\n        const classNames=\"field-no-radius form-light\";\r\n        const type=\"vertical\";\r\n        const trigger =[\r\n            {\r\n                attrbTrigger:'save',\r\n                render:{\r\n                    type:'BUTTON',\r\n                    size:'default',\r\n                    label:'Lưu lại',\r\n                    icon:'download',\r\n                }\r\n            },  \r\n        ]\r\n        const actions=[\r\n            {\r\n                attrbtn: 'save',\r\n                content: (val) => this.handleSubmit(val)\r\n            },\r\n        ]\r\n        const listFields=[\r\n            {\r\n                attrbField:'nameCompany',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập công ty',\r\n                    label:'Tên công ty: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'email',\r\n                data:{\r\n                    dataType:'EMAIL',\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              type: 'email',\r\n                              message: 'Bạn phải nhập đúng định dạng email!!!'\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                              }\r\n                        ],\r\n                    }\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập email của bạn',\r\n                    label:'Email: ',\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    }\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'phoneNumber',\r\n                data:{\r\n                    dataType:'PHONE',\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    }\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập số điện thoại ',\r\n                    label:'Số điện thoại: ',\r\n                   \r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            \r\n            {\r\n                attrbField:'partnerPayment',\r\n                data:{\r\n                    dataType:'SELECT',\r\n                    config:{\r\n                        options:[\r\n                            {\r\n                                text:'Thanh toán online',\r\n                                value:'online',\r\n                            },\r\n                            {\r\n                                text:'Tiền mặt',\r\n                                value:'tienmat',\r\n                            },\r\n                        ]\r\n                    },\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    },\r\n                    defaultValue:'online',\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng chọn phương thức thanh toán',\r\n                    label:'Phương thức thanh toán: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            \r\n        ] \r\n       \r\n        return(\r\n            <Row >\r\n                <Col md={24}>\r\n                    <FormContent\r\n                        layouts={layouts}\r\n                        actions={actions} \r\n                        trigger={trigger} \r\n                        classNames={classNames} \r\n                        type={type} \r\n                        listFields={listFields}\r\n                        submit= {edit}\r\n                        formID= \"addpartner\"\r\n                        mode= \"edit\"\r\n                        handleSubmit= {this.handleSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={24}>\r\n                    <Button onClick={()=>this.changeView()}>\r\n                        <Icon type=\"save\"></Icon> Save\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormAddContent));","import React, {Component} from 'react';\r\nimport FormContent from 'components/ptp__form-layout';\r\nimport {layouts} from '../layout';\r\nimport {Row, Col, Button, Icon} from 'antd';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst edit_view = 0, edit_submit= 1;\r\nclass FormEditContent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            edit:edit_view, \r\n            dataSubmit:{\r\n            },\r\n            car:null,\r\n            id:'',\r\n\r\n        }\r\n    }\r\n\r\n    changeView = () => {\r\n        this.setState({edit: edit_submit});\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.setState({edit: edit_view});\r\n        \r\n        if(values!=='error'){\r\n            const id= this.props.id;\r\n            const obj= {\r\n                id: id,\r\n            }\r\n            this.props.onSubmitEdit( id, {...values, ...obj});\r\n        }\r\n        // this.setState({edit: edit_view});\r\n    }\r\n\r\n    render(){\r\n        const { edit,  } = this.state;\r\n        const { partner } = this.props;\r\n        const classNames=\"field-no-radius form-light\";\r\n        const type=\"vertical\";\r\n        const trigger =[\r\n            {\r\n                attrbTrigger:'save',\r\n                render:{\r\n                    type:'BUTTON',\r\n                    size:'default',\r\n                    label:'Lưu lại',\r\n                    icon:'download',\r\n                }\r\n            },  \r\n        ]\r\n        const actions=[\r\n            {\r\n                attrbtn: 'save',\r\n                content: (val) => this.handleSubmit(val)\r\n            },\r\n        ]\r\n        const listFields=[\r\n            {\r\n                attrbField:'nameCompany',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    defaultValue:partner.nameCompany\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập công ty',\r\n                    label:'Tên công ty: ',\r\n                },\r\n                validation:{\r\n                    rules: [\r\n                        {\r\n                          required: true,\r\n                          message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                        }\r\n                    ],\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'email',\r\n                data:{\r\n                    dataType:'EMAIL',\r\n                   \r\n                    defaultValue:partner.email,\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            },\r\n                            {\r\n                                type: 'email',\r\n                                message: 'Bạn phải nhập đúng định dạng email!!!'\r\n                              },\r\n                        ],\r\n                    },\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập email của bạn',\r\n                    label:'Email: ',\r\n                },\r\n               \r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'phoneNumber',\r\n                data:{\r\n                    dataType:'PHONE',\r\n                    defaultValue:partner.phoneNumber\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập số điện thoại ',\r\n                    label:'Số điện thoại: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            \r\n            {\r\n                attrbField:'partnerPayment',\r\n                data:{\r\n                    dataType:'SELECT',\r\n                    config:{\r\n                        options:[\r\n                            {\r\n                                text:'Thanh toán online',\r\n                                value:'online',\r\n                            },\r\n                            {\r\n                                text:'Tiền mặt',\r\n                                value:'tienmat',\r\n                            },\r\n                        ]\r\n                    },\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    },\r\n                    defaultValue:'online',\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng chọn phương thức thanh toán',\r\n                    label:'Phương thức thanh toán: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            \r\n        ] \r\n       \r\n        return(\r\n            <Row >\r\n                <Col md={24}>\r\n                    <FormContent\r\n                        layouts={layouts}\r\n                        actions={actions} \r\n                        trigger={trigger} \r\n                        classNames={classNames} \r\n                        type={type} \r\n                        listFields={listFields}\r\n                        submit= {edit}\r\n                        formID= \"editCar\"\r\n                        mode= \"edit\"\r\n                        handleSubmit= {this.handleSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={24}>\r\n                    <Button onClick={()=>this.changeView()}>\r\n                        <Icon type=\"save\"></Icon> Save\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormEditContent));","import callApis from 'utils/callAPI/apiCaller';\r\nimport * as Types from './ActionTypes';\r\n\r\nexport const reqCountData = (accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Partner/CountAll/pagesize/pageNow`, 'GET', null, accesstoken).then(res => {\r\n            dispatch(actCountData(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actCountData = (data) => {\r\n    return {\r\n        type: Types.COUNT_DATA,\r\n        data\r\n    }\r\n}\r\nexport const reqSearchPartner = (keyword, pageIndex, pageSize, accesstoken) => {\r\n    return (dispatch) => {\r\n         callApis(`Partner/CountCondition/condition?condition=${keyword}`, 'GET', null, accesstoken).then(res => {\r\n            dispatch(actCountData(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        return callApis(`Partner/PagingCondition/pagesize/pageNow/condition?pagesize=${pageSize}&pageNow=${pageIndex}&condition=${keyword}`, 'GET', null, accesstoken).then(res => {\r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const reqLoadDataPaging = (pageIndex,pageSize,accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Partner/Paging/pagesize/pageNow?pagesize=${pageSize}&pageNow=${pageIndex}`, 'GET', null, accesstoken).then(res => {\r\n            console.log(res.data);    \r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const actLoadDataPaging = (data) => {\r\n    return {\r\n        type: Types.LOAD_PARTNER,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqFindPartner = (id, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Partner/GetById/${id}`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actFindPartner(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actFindPartner = (data) => {\r\n    return {\r\n        type: Types.FIND_PARTNER,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqDeletePartner = (id, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Partner/Delete/${id}`, 'DELETE', null, accesstoken).then(res => {\r\n            return callApis(`Partner/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actDeletePartner(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actDeletePartner = (data) => {\r\n    return {\r\n        type: Types.DELETE_PARTNER,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqUpdatePartner = (id, Partner, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Partner/Update/${id}`, 'PUT', Partner, accesstoken).then(res => {\r\n            console.log(\"edit\");\r\n            return callApis(`Partner/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actUpdatePartner(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actUpdatePartner = (data) => {\r\n    return {\r\n        type: Types.UPDATE_PARTNER,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqAddPartner = ( Partner, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Partner/Create`, 'POST', Partner, accesstoken).then(res => {\r\n            // console.log(res.data);\r\n            return callApis(`Partner/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actAddPartner(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actAddPartner = (data) => {\r\n    return {\r\n        type: Types.ADD_PARTNER,\r\n        data\r\n    }\r\n}\r\n","import React,{Component} from 'react';\r\nimport {Row, Col, Button, Icon, Popover, Avatar, Select, notification,   } from 'antd';\r\nimport './index.css';\r\nimport FunctionbarContent from './function/index';\r\nimport PanelWrapper from 'containers/wrapper/Panel.style';\r\nimport TableContent from 'components/ptp__table/index';\r\n// import TableContent from 'components/table/MyTable';\r\n\r\n// import {demoData} from './list-Partner-dumy';\r\nimport DrawerContent from 'components/Drawer/Drawer';\r\nimport FormPartner from './action/add/FormPartner'; \r\nimport FormEditPartner from './action/edit/edit'; \r\n\r\nimport { withRouter, } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {showNotification} from 'components/notification/Notification';\r\nimport {reqLoadDataPaging, reqSearchPartner, reqCountData, \r\n    reqFindPartner, reqDeletePartner, reqAddPartner, reqUpdatePartner} from 'redux/partner/actions';\r\nimport * as CONST_VARIABLE from 'utils/const/index';\r\n\r\nclass PartnerManagement extends Component{\r\n    state={\r\n        pageSize:5,\r\n        pageIndex:1,\r\n        fullScreenMode:false,\r\n        \r\n        visibledAdd:false,\r\n        visibledEdit:false,\r\n\r\n        filteredInfo: null,\r\n        sortedInfo: null, \r\n        selectedRowKeys: [],\r\n        pagination:null,\r\n        recordSelected:null,\r\n        data:[],\r\n        idEdit:null\r\n    }\r\n    handleFullScreenMode=(val)=> {\r\n        this.setState(() => {\r\n            return {\r\n                fullScreenMode: val\r\n            };\r\n        });\r\n    }\r\n        \r\n    showDrawerAdd=()=>{ this.setState({visibledAdd:true}) }\r\n    onCloseAdd = () => { this.setState({ visibledAdd: false, }) };\r\n\r\n    showDrawerEdit=(id)=>{ \r\n        this.props.handleFindPartner(id);\r\n        this.setState({visibledEdit:true, idEdit: id});\r\n     }\r\n    onCloseEdit = () => { this.setState({ visibledEdit: false, }) };\r\n\r\n\r\n    onSelectChange = (selectedRowKeys) => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({ selectedRowKeys });\r\n    }\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter,\r\n            pagination: pagination\r\n        });\r\n\r\n    }\r\n\r\n    onRowSelect = (record) => {\r\n        this.setState({recordSelected:record});\r\n    }\r\n\r\n    clearFilters = (attr, name) => {\r\n        const filteredInfo = this.state.filteredInfo;\r\n        let arrayVal = filteredInfo[attr.val];\r\n        let ind = arrayVal.indexOf(name);\r\n        arrayVal.splice(ind, 1);\r\n        let attrFilter ={\r\n            [attr.val]: arrayVal\r\n        }\r\n        const obj= {...filteredInfo, ...attrFilter};\r\n        this.setState({ filteredInfo: obj });\r\n    }\r\n\r\n    clearSorted = () => {\r\n        this.setState({ sortedInfo: null, });\r\n    }\r\n    handleChangeSelectInRow =(value) => {\r\n        console.log(\"change value in rrow: \");\r\n        console.log(value, this.state.recordSelected);\r\n    }\r\n    \r\n    handleOnSearch= (val) =>{\r\n        console.log(this.state.pagination);\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        // console.log(val);\r\n        if(val!==''){\r\n            // this.props.countAllPartner(accesstoken);    \r\n            this.props.handleSearchPartner(val, this.state.pageIndex, this.state.pageSize, accesstoken);\r\n       \r\n        }else{\r\n            const {pageIndex, pageSize}= this.state;\r\n            this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n            this.props.countAllPartner(accesstoken);    \r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentWillMount(){\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        const {pageIndex, pageSize}= this.state;\r\n        this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n        this.props.countAllPartner(accesstoken);\r\n    }\r\n\r\n    componentDidMount(){\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        const {pageIndex, pageSize}= this.state;\r\n        this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n        this.props.countAllPartner(accesstoken);\r\n    }\r\n\r\n    handleSubmit=(obj)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleAddPartner(obj, accesstoken);\r\n        this.onCloseAdd();\r\n        showNotification(\"Thêm thành công\", \"Bạn vừa thực hiện thêm một partner!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n    handleDelete=(id)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleDeletePartner(id, accesstoken);\r\n        showNotification(\"Xóa thành công\", \"Bạn vừa thực hiện xóa một partner!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n    handleSubmitEdit=(id, obj)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleUpdatePartner(id, obj, accesstoken);\r\n        this.onCloseEdit();\r\n        this.setState({id:null});\r\n        showNotification(\"Sửa thành công\", \"Bạn vừa thực hiện cập nhật thông tin một partner!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n   \r\n    render(){\r\n        let { sortedInfo, filteredInfo } = this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const info = {\r\n            sorted: sortedInfo,\r\n            filtered: filteredInfo\r\n        }\r\n        const columns = [\r\n            {\r\n                title: 'Tên công ty',\r\n                dataIndex: 'nameCompany',\r\n                key: 'nameCompany',\r\n                sorter: (a, b) => a.nameCompany.length - b.nameCompany.length,\r\n                sortOrder: sortedInfo.columnKey === 'nameCompany' && sortedInfo.order,\r\n            }, \r\n            {\r\n                title: 'Email',\r\n                dataIndex: 'email',\r\n                key: 'email',\r\n                defaultSortOrder: 'ascend',\r\n                sorter: (a, b) => a.email - b.email,\r\n                sortOrder: sortedInfo.columnKey === 'email' && sortedInfo.order,\r\n            }, \r\n            {\r\n                title: 'Số điện thoại',\r\n                dataIndex: 'phoneNumber',\r\n                key: 'phoneNumber',\r\n            }, \r\n            {\r\n                title: 'Thanh toán',\r\n                dataIndex: 'partnerPayment',\r\n                key: 'partnerPayment',\r\n            }, \r\n            {\r\n                title: 'Action',\r\n                align:'center',\r\n                render:(text, record, index)=>{\r\n                    return(\r\n                        <div>\r\n                            <Button onClick={()=>this.showDrawerEdit(text)} className='btn btn-table' icon='edit'></Button>\r\n                            <Button \r\n                                onClick={()=>this.handleDelete(text)} \r\n                                className='btn btn-table' \r\n                                icon='delete'>\r\n                            </Button>\r\n                        </div>\r\n                    );\r\n                },\r\n                dataIndex: 'id',\r\n                key:'id',\r\n                width : 100\r\n               \r\n            },\r\n       ];\r\n        \r\n        const config ={\r\n            table:{\r\n                // bordered: true\r\n            },\r\n            pagination:{\r\n                defaultPageSize:5,\r\n                total: this.props.numberPartner\r\n            },\r\n        }\r\n        const event={\r\n            table:{\r\n                onChange:this.handleChange,\r\n                clearSorted: this.clearSorted,\r\n                clearFiltered: this.clearFilters,\r\n                onRow: this.onRowSelect,\r\n                onSearch: this.handleOnSearch\r\n            },\r\n            pagination:{\r\n                onChange:\r\n                    (page, pageSize)=>{\r\n                        const accesstoken= sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n                        this.props.loadDataPaging(page, pageSize, accesstoken);\r\n                    },\r\n                onShowSizeChange:\r\n                    (page, pageSize)=>{\r\n                        const accesstoken= sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n                        this.props.loadDataPaging(page, pageSize, accesstoken);\r\n                    }\r\n            }\r\n        }\r\n        const { selectedRowKeys } = this.state;\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n            hideDefaultSelections: true,\r\n            selections: [{\r\n                key: 'all-data',\r\n                text: 'Select All Data',\r\n                onSelect: () => {\r\n                this.setState({\r\n                    selectedRowKeys: [...Array(46).keys()], // 0...45\r\n                });\r\n                },\r\n            }, {\r\n                key: 'odd',\r\n                text: 'Select Odd Row',\r\n                onSelect: (changableRowKeys) => {\r\n                let newSelectedRowKeys = [];\r\n                newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                    if (index % 2 !== 0) {\r\n                    return false;\r\n                    }\r\n                    return true;\r\n                });\r\n                this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                },\r\n            }, {\r\n                key: 'even',\r\n                text: 'Select Even Row',\r\n                onSelect: (changableRowKeys) => {\r\n                let newSelectedRowKeys = [];\r\n                newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                    if (index % 2 !== 0) {\r\n                    return true;\r\n                    }\r\n                    return false;\r\n                });\r\n                this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                },\r\n            }],\r\n            // onSelection: this.onSelection,\r\n        };\r\n\r\n\r\n        var listPropForDrawer={\r\n            styleProps:{\r\n              title:\"Nhập thông tin!\",\r\n              width:420,\r\n              height:'100%',\r\n              maskStyle:{\r\n                  color:'red'\r\n              },\r\n              mask:true,\r\n              maskClosable:true,\r\n              style:{\r\n                  backgroundColor:'#fafafa'\r\n              },\r\n              className:\"ok\",\r\n              zIndex:1,\r\n              placement:\"right\",\r\n              closable:this.state.visibledAdd,\r\n              destroyOnClose:false,\r\n            },\r\n            onClose:this.onCloseAdd,\r\n            visible:this.state.visibledAdd,\r\n            hasButtonFooter:false,\r\n            componentWillShow:(key)=> <FormPartner\r\n                    key={'FormPartner'}\r\n                    onSubmitAdd={this.handleSubmit}\r\n                />,\r\n        }\r\n        var listPropForDrawerEdit={\r\n            styleProps:{\r\n              title:\"Nhập thông tin sửa đổi!\",\r\n              width:420,\r\n              height:'100%',\r\n              maskStyle:{\r\n                  color:'red'\r\n              },\r\n              mask:true,\r\n              maskClosable:true,\r\n              style:{\r\n                  backgroundColor:'#fafafa'\r\n              },\r\n              className:\"ok\",\r\n              zIndex:1,\r\n              placement:\"right\",\r\n              closable:this.state.visibledEdit,\r\n              destroyOnClose:false,\r\n            },\r\n            onClose:this.onCloseEdit,\r\n            visible:this.state.visibledEdit,\r\n            hasButtonFooter:false,\r\n            componentWillShow:(key)=> <FormEditPartner \r\n                key={'FormEditPartner'}\r\n                id={this.state.idEdit} \r\n                partner={this.props.itemPartner}\r\n                onSubmitEdit={this.handleSubmitEdit}\r\n            />,\r\n        }\r\n        return (\r\n            <Row className=\"content_manager_wrapper\" style={{height:'100%'}}>\r\n                <PanelWrapper className={this.state.fullScreenMode ? \"full-screen-mode\" : \"\"}>\r\n                    <FunctionbarContent showDrawerAdd={this.showDrawerAdd} handleFullScreenMode={this.handleFullScreenMode}/>\r\n                    <Col md={24} className=\"table-wrapper\">\r\n                        <TableContent\r\n                            rowSelection={rowSelection}\r\n                            data={this.props.partner} \r\n                            columns={columns} \r\n                            config={config} \r\n                            event={event}\r\n                            info={info}\r\n                        />\r\n                        \r\n                    </Col>\r\n                    <DrawerContent \r\n                        key={'addPartner'}\r\n                        styleProps={listPropForDrawer.styleProps} \r\n                        visible={listPropForDrawer.visible} \r\n                        onClose={listPropForDrawer.onClose}\r\n                        hasButtonFooter={listPropForDrawer.hasButtonFooter}    \r\n                        componentWillShow={listPropForDrawer.componentWillShow}\r\n                    />\r\n                    <DrawerContent \r\n                        key={'editPartner'}\r\n                        styleProps={listPropForDrawerEdit.styleProps} \r\n                        visible={listPropForDrawerEdit.visible} \r\n                        onClose={listPropForDrawerEdit.onClose}\r\n                        hasButtonFooter={listPropForDrawerEdit.hasButtonFooter}    \r\n                        componentWillShow={listPropForDrawerEdit.componentWillShow}\r\n                    />\r\n                </PanelWrapper>\r\n\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        partner: state.partner,\r\n        itemPartner: state.itemPartner,\r\n        numberPartner: state.numberDataPartner\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        handleAddPartner: (object, accesstoken)=>{\r\n            dispatch(reqAddPartner(object, accesstoken));\r\n        },\r\n        handleFindPartner: (id, accesstoken)=>{\r\n            dispatch(reqFindPartner(id, accesstoken));\r\n        },\r\n        handleUpdatePartner: (id, object, accesstoken)=>{\r\n            dispatch(reqUpdatePartner(id, object, accesstoken));\r\n        },\r\n        handleDeletePartner: (id, accesstoken)=>{\r\n            dispatch(reqDeletePartner(id, accesstoken));\r\n        },\r\n        loadDataPaging: (pageIndex, pageSize, accesstoken)=>{\r\n            dispatch(reqLoadDataPaging(pageIndex, pageSize, accesstoken));\r\n        },\r\n        countAllPartner: ( accesstoken)=>{\r\n            dispatch(reqCountData( accesstoken));\r\n        },\r\n        handleSearchPartner: (keyword, pageIndex, pageSize, accesstoken)=>{\r\n            dispatch(reqSearchPartner(keyword, pageIndex, pageSize, accesstoken))\r\n        }\r\n\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PartnerManagement));","import React, {Component} from 'react';\r\nimport {Button, Icon, Row,Col} from 'antd';\r\nimport './index.css';\r\nimport 'settings/css/global.scss';\r\n\r\nclass FunctionContent extends Component{\r\n    state={\r\n        fullScreen:true,\r\n        visibled:true,\r\n    }\r\n    onClose = () => { this.setState({ visibled: false, }) };\r\n    showDrawer = () => {  \r\n        this.setState({  visibled: true, },this.props.showDrawerAdd(this.state.visibled)); \r\n        \r\n    };\r\n    setFullScreen=()=>{\r\n        this.setState({fullScreen:true},this.props.handleFullScreenMode(this.state.fullScreen));\r\n    }\r\n    setNotFullScreen=()=>{\r\n        this.setState({fullScreen:false},this.props.handleFullScreenMode(this.state.fullScreen));\r\n    }\r\n    render(){\r\n       \r\n        return(\r\n            <Row className=\"function-bar-wrapper\">\r\n                <Col md={24}>\r\n                    <Button type=\"default\" onClick={this.showDrawer} size=\"small\" className=\"function-btn-left\">\r\n                        <Icon type=\"plus\" theme=\"outlined\" />\r\n                    </Button>\r\n                    <Button type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                        <Icon type=\"close\" theme=\"outlined\" />\r\n                    </Button>\r\n                    {\r\n                        (this.state.fullScreen)?\r\n                        <Button \r\n                            onClick={this.setNotFullScreen}\r\n                            type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                                <Icon type=\"fullscreen\" theme=\"outlined\" />\r\n                        </Button>:\r\n                        <Button \r\n                            onClick={this.setFullScreen}\r\n                            type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                            <Icon type=\"fullscreen-exit\" theme=\"outlined\" />\r\n                        </Button>\r\n                    }\r\n                </Col>\r\n                \r\n            </Row>\r\n        );\r\n    }\r\n\r\n}\r\nexport default FunctionContent;","export const layouts=[\r\n    [\r\n        {\r\n            attrbLayout:'nameCustomer',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            attrbLayout:'nameCar',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            attrbLayout:'priceOrder',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n        \r\n    ],\r\n    [\r\n        {\r\n            attrbLayout:'dateOfhire',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n        \r\n    ],\r\n    [\r\n        {\r\n            attrbLayout:'payDate',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n        \r\n    ],\r\n]","import React, {Component} from 'react';\r\nimport FormContent from 'components/ptp__form-layout';\r\nimport {layouts} from '../layout';\r\nimport {Row, Col, Button, Icon} from 'antd';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst edit_view = 0, edit_submit= 1;\r\nclass FormEditContent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            edit:edit_view, \r\n            dataSubmit:{\r\n            },\r\n            order:null,\r\n            id:'',\r\n\r\n        }\r\n    }\r\n\r\n    changeView = () => {\r\n        this.setState({edit: edit_submit});\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.setState({edit: edit_view});\r\n        \r\n        if(values!=='error'){\r\n            const obj= {\r\n                id:'12',\r\n                purchDate: '2018-12-22T09:48:25.350Z'\r\n            }\r\n            this.props.onSubmitAdd({...values, ...obj});\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const { edit,  } = this.state;\r\n        const classNames=\"field-no-radius form-light\";\r\n        const type=\"vertical\";\r\n        const trigger =[\r\n            {\r\n                attrbTrigger:'save',\r\n                render:{\r\n                    type:'BUTTON',\r\n                    size:'default',\r\n                    label:'Lưu lại',\r\n                    icon:'download',\r\n                }\r\n            },  \r\n        ]\r\n        const actions=[\r\n            {\r\n                attrbtn: 'save',\r\n                content: (val) => this.handleSubmit(val)\r\n            },\r\n        ]\r\n        const listFields=[\r\n            {\r\n                attrbField:'nameCustomer',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập tên của bạn',\r\n                    label:'Tên khách hàng: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'nameCar',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập tên xe ',\r\n                    label:'Tên xe: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'priceOrder',\r\n                data:{\r\n                    dataType:'NUMBER',\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    },\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập giá ',\r\n                    label:'Giá: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'dateOfhire',\r\n                data:{\r\n                    dataType:'DATE_PICKER',\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    },\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập chọn ngày thuê',\r\n                    label:'Ngày thuê: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'payDate',\r\n                data:{\r\n                    dataType:'DATE_PICKER',\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    },\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập chọn ngày trả',\r\n                    label:'Ngày trả: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            \r\n        ] \r\n       \r\n        return(\r\n            <Row >\r\n                <Col md={24}>\r\n                    <FormContent\r\n                        layouts={layouts}\r\n                        actions={actions} \r\n                        trigger={trigger} \r\n                        classNames={classNames} \r\n                        type={type} \r\n                        listFields={listFields}\r\n                        submit= {edit}\r\n                        formID= \"addOder\"\r\n                        mode= \"edit\"\r\n                        handleSubmit= {this.handleSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={24}>\r\n                    <Button onClick={()=>this.changeView()}>\r\n                        <Icon type=\"save\"></Icon> Save\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormEditContent));","import React, {Component} from 'react';\r\nimport FormContent from 'components/ptp__form-layout';\r\nimport {layouts} from '../layout';\r\nimport {Row, Col, Button, Icon} from 'antd';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst edit_view = 0, edit_submit= 1;\r\nclass FormEditContent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            edit:edit_view, \r\n            dataSubmit:{\r\n            },\r\n            id:'',\r\n\r\n        }\r\n    }\r\n\r\n    changeView = () => {\r\n        this.setState({edit: edit_submit});\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.setState({edit: edit_view});\r\n        \r\n        if(values!=='error'){\r\n            const id= this.props.id;\r\n            const obj= {\r\n                id: id,\r\n            }\r\n            this.props.onSubmitEdit( id, {...values, ...obj});\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const { edit,  } = this.state;\r\n        const { order } = this.props;\r\n        console.log(order);\r\n        const classNames=\"field-no-radius form-light\";\r\n        const type=\"vertical\";\r\n        const trigger =[\r\n            {\r\n                attrbTrigger:'save',\r\n                render:{\r\n                    type:'BUTTON',\r\n                    size:'default',\r\n                    label:'Lưu lại',\r\n                    icon:'download',\r\n                }\r\n            },  \r\n        ]\r\n        const actions=[\r\n            {\r\n                attrbtn: 'save',\r\n                content: (val) => this.handleSubmit(val)\r\n            },\r\n        ]\r\n        const listFields=[\r\n            {\r\n                attrbField:'nameCustomer',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    defaultValue:order.nameCustomer,\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập tên khách hàng',\r\n                    label:'Tên khách hàng: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'nameCar',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    defaultValue:order.nameCar,\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    }\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập tên xe',\r\n                    label:'Tên xe: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'priceOrder',\r\n                data:{\r\n                    dataType:'NUMBER',\r\n                    defaultValue:order.priceOrder,\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập giá ',\r\n                    label:'Giá: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'dateOfhire',\r\n                data:{\r\n                    dataType:'DATE_PICKER',\r\n                    // defaultValue:order.dateOfhire,\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    },\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng chọn ngày thuê',\r\n                    label:'Ngày thuê: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'payDate',\r\n                data:{\r\n                    dataType:'DATE_PICKER',\r\n                    // defaultValue:order.payDate,\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    },\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng chọn ngày trả',\r\n                    label:'Ngày trả: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            \r\n        ] \r\n       \r\n        return(\r\n            <Row >\r\n                <Col md={24}>\r\n                    <FormContent\r\n                        layouts={layouts}\r\n                        actions={actions} \r\n                        trigger={trigger} \r\n                        classNames={classNames} \r\n                        type={type} \r\n                        listFields={listFields}\r\n                        submit= {edit}\r\n                        formID= \"editOrder\"\r\n                        mode= \"edit\"\r\n                        handleSubmit= {this.handleSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={24}>\r\n                    <Button onClick={()=>this.changeView()}>\r\n                        <Icon type=\"save\"></Icon> Save\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormEditContent));","import callApis from 'utils/callAPI/apiCaller';\r\nimport * as Types from './ActionTypes';\r\n\r\nexport const reqCountData = (accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Orders/CountAll/pagesize/pageNow`, 'GET', null, accesstoken).then(res => {\r\n            dispatch(actCountData(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actCountData = (data) => {\r\n    return {\r\n        type: Types.COUNT_DATA,\r\n        data\r\n    }\r\n}\r\nexport const reqSearchOrders = (keyword, pageIndex, pageSize, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Orders/PagingCondition/pagesize/pageNow/condition?pagesize=${pageSize}&pageNow=${pageIndex}&condition=${keyword}`, 'GET', null, accesstoken).then(res => {\r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\n\r\nexport const reqLoadDataPaging = (pageIndex,pageSize,accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Orders/Paging/pagesize/pageNow?pagesize=${pageSize}&pageNow=${pageIndex}`, 'GET', null, accesstoken).then(res => {\r\n            console.log(res.data);    \r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const reqSearchProduct = (keyword, pageIndex, pageSize, sortOrders, priceStart, priceEnd, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(\r\n        `Orders/PagingConditionPrice/condition/pageIndex/pageSize/sortOrders/priceStart/priceEnd?condition=${keyword}&pageIndex=${pageIndex}&pageSize=${pageSize}&sortOrders=${sortOrders}&priceStart=${priceStart}&priceEnd=${priceEnd}`,\r\n         'GET', null, accesstoken).then(res => {\r\n            console.log(res.data);    \r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actLoadDataPaging = (data) => {\r\n    return {\r\n        type: Types.LOAD_ORDERS,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqFindOrders = (id, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Orders/GetById/${id}`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actFindOrders(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actFindOrders = (data) => {\r\n    return {\r\n        type: Types.FIND_ORDERS,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqDeleteOrders = (id, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Orders/Delete/${id}`, 'DELETE', null, accesstoken).then(res => {\r\n            return callApis(`Orders/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actDeleteOrders(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actDeleteOrders = (data) => {\r\n    return {\r\n        type: Types.DELETE_ORDERS,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqUpdateOrders = (id, Orders, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Orders/Update/${id}`, 'PUT', Orders, accesstoken).then(res => {\r\n            return callApis(`Orders/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actUpdateOrders(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actUpdateOrders = (data) => {\r\n    return {\r\n        type: Types.UPDATE_ORDERS,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqAddOrders = ( Orders, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Orders/Create`, 'POST', Orders, accesstoken).then(res => {\r\n            console.log(res.data);\r\n            return callApis(`Orders/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actAddOrders(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actAddOrders = (data) => {\r\n    return {\r\n        type: Types.ADD_ORDERS,\r\n        data\r\n    }\r\n}\r\n","import React,{Component} from 'react';\r\nimport {Row, Col, Button, Icon, Popover, Avatar, Select, notification,   } from 'antd';\r\nimport './index.css';\r\nimport FunctionbarContent from './function/index';\r\nimport PanelWrapper from 'containers/wrapper/Panel.style';\r\nimport TableContent from 'components/ptp__table/index';\r\n// import TableContent from 'components/table/MyTable';\r\n\r\n// import {demoData} from './list-Order-dumy';\r\nimport DrawerContent from 'components/Drawer/Drawer';\r\nimport FormOrder from './action/add/FormOrder'; \r\nimport FormEditOrder from './action/edit/edit'; \r\n\r\nimport { withRouter, } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {showNotification} from 'components/notification/Notification';\r\nimport {reqLoadDataPaging, reqSearchOrders, reqCountData,\r\n     reqFindOrders, reqDeleteOrders, reqAddOrders, reqUpdateOrders} from 'redux/orders/actions';\r\nimport * as CONST_VARIABLE from 'utils/const/index';\r\n\r\nclass OrderManagement extends Component{\r\n    state={\r\n        pageSize:5,\r\n        pageIndex:1,\r\n        fullScreenMode:false,\r\n        \r\n        visibledAdd:false,\r\n        visibledEdit:false,\r\n\r\n        filteredInfo: null,\r\n        sortedInfo: null, \r\n        selectedRowKeys: [],\r\n        pagination:null,\r\n        recordSelected:null,\r\n        data:[],\r\n        idEdit:null\r\n    }\r\n    handleFullScreenMode=(val)=> {\r\n        this.setState(() => {\r\n            return {\r\n                fullScreenMode: val\r\n            };\r\n        });\r\n    }\r\n        \r\n    showDrawerAdd=()=>{ this.setState({visibledAdd:true}) }\r\n    onCloseAdd = () => { this.setState({ visibledAdd: false, }) };\r\n\r\n    showDrawerEdit=(id)=>{ \r\n        this.props.handleFindOrder(id);\r\n        this.setState({visibledEdit:true, idEdit: id});\r\n     }\r\n    onCloseEdit = () => { this.setState({ visibledEdit: false, }) };\r\n\r\n\r\n    onSelectChange = (selectedRowKeys) => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({ selectedRowKeys });\r\n    }\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter,\r\n            pagination: pagination\r\n        });\r\n\r\n    }\r\n\r\n    onRowSelect = (record) => {\r\n        this.setState({recordSelected:record});\r\n    }\r\n\r\n    clearFilters = (attr, name) => {\r\n        const filteredInfo = this.state.filteredInfo;\r\n        let arrayVal = filteredInfo[attr.val];\r\n        let ind = arrayVal.indexOf(name);\r\n        arrayVal.splice(ind, 1);\r\n        let attrFilter ={\r\n            [attr.val]: arrayVal\r\n        }\r\n        const obj= {...filteredInfo, ...attrFilter};\r\n        this.setState({ filteredInfo: obj });\r\n    }\r\n\r\n    clearSorted = () => {\r\n        this.setState({ sortedInfo: null, });\r\n    }\r\n    handleChangeSelectInRow =(value) => {\r\n        console.log(\"change value in rrow: \");\r\n        console.log(value, this.state.recordSelected);\r\n    }\r\n    \r\n    handleOnSearch= (val) =>{\r\n        console.log(this.state.pagination);\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        // console.log(val);\r\n        if(val!==''){\r\n            // this.props.countAllOrder(accesstoken);    \r\n            this.props.handleSearchOrder(val, this.state.pageIndex, this.state.pageSize, accesstoken);\r\n       \r\n        }else{\r\n            const {pageIndex, pageSize}= this.state;\r\n            this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n            this.props.countAllOrder(accesstoken);    \r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentWillMount(){\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        const {pageIndex, pageSize}= this.state;\r\n        this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n        this.props.countAllOrder(accesstoken);\r\n    }\r\n\r\n    componentDidMount(){\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        const {pageIndex, pageSize}= this.state;\r\n        this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n        this.props.countAllOrder(accesstoken);\r\n    }\r\n\r\n    handleSubmit=(obj)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleAddOrder(obj, accesstoken);\r\n        this.onCloseAdd();\r\n        showNotification(\"Thêm thành công\", \"Bạn vừa thực hiện thêm một đơn hàng!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n    handleDelete=(id)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleDeleteOrder(id, accesstoken);\r\n        showNotification(\"Xóa thành công\", \"Bạn vừa thực hiện xóa một đơn hàng!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n    handleSubmitEdit=(id, obj)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleUpdateOrder(id, obj, accesstoken);\r\n        this.onCloseEdit();\r\n        this.setState({id:null});\r\n        showNotification(\"Sửa thành công\", \"Bạn vừa thực hiện cập nhật thông tin một đơn hàng!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n   \r\n    render(){\r\n        let { sortedInfo, filteredInfo } = this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const info = {\r\n            sorted: sortedInfo,\r\n            filtered: filteredInfo\r\n        }\r\n        const columns = [\r\n            {\r\n                title: 'Tên khách hàng',\r\n                dataIndex: 'nameCustomer',\r\n                key: 'nameCustomer',\r\n                sorter: (a, b) => a.nameCustomer.length - b.nameCustomer.length,\r\n                sortOrder: sortedInfo.columnKey === 'nameCustomer' && sortedInfo.order,\r\n            }, \r\n            {\r\n                title: 'Tên xe',\r\n                dataIndex: 'nameCar',\r\n                key: 'nameCar',\r\n                defaultSortOrder: 'nameCar',\r\n                sorter: (a, b) => a.typeOrder - b.typeOrder,\r\n                sortOrder: sortedInfo.columnKey === 'nameCar' && sortedInfo.order,\r\n            }, \r\n            {\r\n                title: 'Giá xe',\r\n                dataIndex: 'priceOrder',\r\n                key: 'priceOrder',\r\n                width:100\r\n            }, \r\n            {\r\n                title: 'Ngày đặt',\r\n                dataIndex: 'dateOrder',\r\n                key: 'dateOrder',\r\n            }, \r\n            {\r\n                title: 'Ngày thuê',\r\n                dataIndex: 'dateOfhire',\r\n                key: 'dateOfhire',\r\n            }, \r\n            {\r\n                title: 'Ngày trả',\r\n                dataIndex: 'carReturnDay',\r\n                key: 'carReturnDay',\r\n            }, \r\n            {\r\n                title: 'Action',\r\n                align:'center',\r\n                render:(text, record, index)=>{\r\n                    return(\r\n                        <div>\r\n                            <Button onClick={()=>this.showDrawerEdit(text)} className='btn btn-table' icon='edit'></Button>\r\n                            <Button \r\n                                onClick={()=>this.handleDelete(text)} \r\n                                className='btn btn-table' \r\n                                icon='delete'>\r\n                            </Button>\r\n                        </div>\r\n                    );\r\n                },\r\n                dataIndex: 'id',\r\n                key:'id',\r\n                width : 100\r\n               \r\n            },\r\n       ];\r\n        \r\n        const config ={\r\n            table:{\r\n                // bordered: true\r\n            },\r\n            pagination:{\r\n                defaultPageSize:5,\r\n                total: this.props.numberOrder\r\n            },\r\n        }\r\n        const event={\r\n            table:{\r\n                onChange:this.handleChange,\r\n                clearSorted: this.clearSorted,\r\n                clearFiltered: this.clearFilters,\r\n                onRow: this.onRowSelect,\r\n                onSearch: this.handleOnSearch\r\n            },\r\n            pagination:{\r\n                onChange:\r\n                    (page, pageSize)=>{\r\n                        const accesstoken= sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n                        this.props.loadDataPaging(page, pageSize, accesstoken);\r\n                    },\r\n                onShowSizeChange:\r\n                    (page, pageSize)=>{\r\n                        const accesstoken= sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n                        this.props.loadDataPaging(page, pageSize, accesstoken);\r\n                    }\r\n            }\r\n        }\r\n        const { selectedRowKeys } = this.state;\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n            hideDefaultSelections: true,\r\n            selections: [{\r\n                key: 'all-data',\r\n                text: 'Select All Data',\r\n                onSelect: () => {\r\n                this.setState({\r\n                    selectedRowKeys: [...Array(46).keys()], // 0...45\r\n                });\r\n                },\r\n            }, {\r\n                key: 'odd',\r\n                text: 'Select Odd Row',\r\n                onSelect: (changableRowKeys) => {\r\n                let newSelectedRowKeys = [];\r\n                newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                    if (index % 2 !== 0) {\r\n                    return false;\r\n                    }\r\n                    return true;\r\n                });\r\n                this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                },\r\n            }, {\r\n                key: 'even',\r\n                text: 'Select Even Row',\r\n                onSelect: (changableRowKeys) => {\r\n                let newSelectedRowKeys = [];\r\n                newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                    if (index % 2 !== 0) {\r\n                    return true;\r\n                    }\r\n                    return false;\r\n                });\r\n                this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                },\r\n            }],\r\n            // onSelection: this.onSelection,\r\n        };\r\n\r\n\r\n        var listPropForDrawer={\r\n            styleProps:{\r\n              title:\"Nhập thông tin!\",\r\n              width:420,\r\n              height:'100%',\r\n              maskStyle:{\r\n                  color:'red'\r\n              },\r\n              mask:true,\r\n              maskClosable:true,\r\n              style:{\r\n                  backgroundColor:'#fafafa'\r\n              },\r\n              className:\"ok\",\r\n              zIndex:1,\r\n              placement:\"right\",\r\n              closable:this.state.visibledAdd,\r\n              destroyOnClose:false,\r\n            },\r\n            onClose:this.onCloseAdd,\r\n            visible:this.state.visibledAdd,\r\n            hasButtonFooter:false,\r\n            componentWillShow:(key)=> <FormOrder\r\n                    key={key}\r\n                    onSubmitAdd={this.handleSubmit}\r\n                />,\r\n        }\r\n        var listPropForDrawerEdit={\r\n            styleProps:{\r\n              title:\"Nhập thông tin sửa đổi!\",\r\n              width:420,\r\n              height:'100%',\r\n              maskStyle:{\r\n                  color:'red'\r\n              },\r\n              mask:true,\r\n              maskClosable:true,\r\n              style:{\r\n                  backgroundColor:'#fafafa'\r\n              },\r\n              className:\"ok\",\r\n              zIndex:1,\r\n              placement:\"right\",\r\n              closable:this.state.visibledEdit,\r\n              destroyOnClose:false,\r\n            },\r\n            onClose:this.onCloseEdit,\r\n            visible:this.state.visibledEdit,\r\n            hasButtonFooter:false,\r\n            componentWillShow:(key)=> <FormEditOrder \r\n                key={key}\r\n                id={this.state.idEdit} \r\n                order={this.props.itemOrders} \r\n                onSubmitEdit={this.handleSubmitEdit}\r\n            />,\r\n        }\r\n        console.log(\"adasdasdas\");\r\n        console.log(this.props.itemOrders);\r\n        console.log(\"adasdasdas\");\r\n        return (\r\n            <Row className=\"content_manager_wrapper\" style={{height:'100%'}}>\r\n                <PanelWrapper className={this.state.fullScreenMode ? \"full-screen-mode\" : \"\"}>\r\n                    <FunctionbarContent showDrawerAdd={this.showDrawerAdd} handleFullScreenMode={this.handleFullScreenMode}/>\r\n                    <Col md={24} className=\"table-wrapper\">\r\n                        <TableContent\r\n                            rowSelection={rowSelection}\r\n                            data={this.props.order} \r\n                            columns={columns} \r\n                            config={config} \r\n                            event={event}\r\n                            info={info}\r\n                        />\r\n                        \r\n                    </Col>\r\n                    <DrawerContent \r\n                        key={'addorder'}\r\n                        styleProps={listPropForDrawer.styleProps} \r\n                        visible={listPropForDrawer.visible} \r\n                        onClose={listPropForDrawer.onClose}\r\n                        hasButtonFooter={listPropForDrawer.hasButtonFooter}    \r\n                        componentWillShow={listPropForDrawer.componentWillShow}\r\n                    />\r\n                    <DrawerContent \r\n                        key={'editorder'}\r\n                        styleProps={listPropForDrawerEdit.styleProps} \r\n                        visible={listPropForDrawerEdit.visible} \r\n                        onClose={listPropForDrawerEdit.onClose}\r\n                        hasButtonFooter={listPropForDrawerEdit.hasButtonFooter}    \r\n                        componentWillShow={listPropForDrawerEdit.componentWillShow}\r\n                    />\r\n                </PanelWrapper>\r\n\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        order: state.orders,\r\n        itemOrders: state.itemOrders,\r\n        numberOrder: state.numberDataOrders\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        handleAddOrder: (object, accesstoken)=>{\r\n            dispatch(reqAddOrders(object, accesstoken));\r\n        },\r\n        handleFindOrder: (id, accesstoken)=>{\r\n            dispatch(reqFindOrders(id, accesstoken));\r\n        },\r\n        handleUpdateOrder: (id, object, accesstoken)=>{\r\n            dispatch(reqUpdateOrders(id, object, accesstoken));\r\n        },\r\n        handleDeleteOrder: (id, accesstoken)=>{\r\n            dispatch(reqDeleteOrders(id, accesstoken));\r\n        },\r\n        loadDataPaging: (pageIndex, pageSize, accesstoken)=>{\r\n            dispatch(reqLoadDataPaging(pageIndex, pageSize, accesstoken));\r\n        },\r\n        countAllOrder: ( accesstoken)=>{\r\n            dispatch(reqCountData( accesstoken));\r\n        },\r\n        handleSearchOrder: (keyword, pageIndex, pageSize, accesstoken)=>{\r\n            dispatch(reqSearchOrders(keyword, pageIndex, pageSize, accesstoken))\r\n        }\r\n\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(OrderManagement));","import React, {Component} from 'react';\r\nimport {Button, Icon, Row,Col} from 'antd';\r\nimport './index.css';\r\nimport 'settings/css/global.scss';\r\n\r\nclass FunctionContent extends Component{\r\n    state={\r\n        fullScreen:true,\r\n        visibled:true,\r\n    }\r\n    onClose = () => { this.setState({ visibled: false, }) };\r\n    showDrawer = () => {  \r\n        this.setState({  visibled: true, },this.props.showDrawerAdd(this.state.visibled)); \r\n        \r\n    };\r\n    setFullScreen=()=>{\r\n        this.setState({fullScreen:true},this.props.handleFullScreenMode(this.state.fullScreen));\r\n    }\r\n    setNotFullScreen=()=>{\r\n        this.setState({fullScreen:false},this.props.handleFullScreenMode(this.state.fullScreen));\r\n    }\r\n    render(){\r\n       \r\n        return(\r\n            <Row className=\"function-bar-wrapper\">\r\n                <Col md={24}>\r\n                    <Button type=\"default\" onClick={this.showDrawer} size=\"small\" className=\"function-btn-left\">\r\n                        <Icon type=\"plus\" theme=\"outlined\" />\r\n                    </Button>\r\n                    <Button type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                        <Icon type=\"close\" theme=\"outlined\" />\r\n                    </Button>\r\n                    {\r\n                        (this.state.fullScreen)?\r\n                        <Button \r\n                            onClick={this.setNotFullScreen}\r\n                            type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                                <Icon type=\"fullscreen\" theme=\"outlined\" />\r\n                        </Button>:\r\n                        <Button \r\n                            onClick={this.setFullScreen}\r\n                            type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                            <Icon type=\"fullscreen-exit\" theme=\"outlined\" />\r\n                        </Button>\r\n                    }\r\n                </Col>\r\n                \r\n            </Row>\r\n        );\r\n    }\r\n\r\n}\r\nexport default FunctionContent;","export const layouts=[\r\n    [\r\n        {\r\n            attrbLayout:'name',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            attrbLayout:'typeDescription',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n    ],\r\n]","import React, {Component} from 'react';\r\nimport FormContent from 'components/ptp__form-layout';\r\nimport {layouts} from '../layout';\r\nimport {Row, Col, Button, Icon} from 'antd';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst edit_view = 0, edit_submit= 1;\r\nclass FormEditContent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            edit:edit_view, \r\n            dataSubmit:{\r\n            },\r\n            Partner:null,\r\n            id:'',\r\n\r\n        }\r\n    }\r\n\r\n    changeView = () => {\r\n        this.setState({edit: edit_submit});\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.setState({edit: edit_view});\r\n        \r\n        if(values!=='error'){\r\n            const obj= {\r\n                id:'12',\r\n                purchDate: '2018-12-22T09:48:25.350Z'\r\n            }\r\n            console.log(values);\r\n            this.props.onSubmitAdd({...values, ...obj});\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const { edit,  } = this.state;\r\n        const classNames=\"field-no-radius form-light\";\r\n        const type=\"vertical\";\r\n        const trigger =[\r\n            {\r\n                attrbTrigger:'save',\r\n                render:{\r\n                    type:'BUTTON',\r\n                    size:'default',\r\n                    label:'Lưu lại',\r\n                    icon:'download',\r\n                }\r\n            },  \r\n        ]\r\n        const actions=[\r\n            {\r\n                attrbtn: 'save',\r\n                content: (val) => this.handleSubmit(val)\r\n            },\r\n        ]\r\n        const listFields=[\r\n            {\r\n                attrbField:'name',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập loại xe',\r\n                    label:'Loại xe: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'typeDescription',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập mô tả',\r\n                    label:'Mô tả: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            \r\n            \r\n        ] \r\n       \r\n        return(\r\n            <Row >\r\n                <Col md={24}>\r\n                    <FormContent\r\n                        layouts={layouts}\r\n                        actions={actions} \r\n                        trigger={trigger} \r\n                        classNames={classNames} \r\n                        type={type} \r\n                        listFields={listFields}\r\n                        submit= {edit}\r\n                        formID= \"addTypeCar\"\r\n                        mode= \"edit\"\r\n                        handleSubmit= {this.handleSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={24}>\r\n                    <Button onClick={()=>this.changeView()}>\r\n                        <Icon type=\"save\"></Icon> Save\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormEditContent));","import React, {Component} from 'react';\r\nimport FormContent from 'components/ptp__form-layout';\r\nimport {layouts} from '../layout';\r\nimport {Row, Col, Button, Icon} from 'antd';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst edit_view = 0, edit_submit= 1;\r\nclass FormEditContent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            edit:edit_view, \r\n            dataSubmit:{\r\n            },\r\n            id:'',\r\n\r\n        }\r\n    }\r\n\r\n    changeView = () => {\r\n        this.setState({edit: edit_submit});\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.setState({edit: edit_view});\r\n        \r\n        if(values!=='error'){\r\n            const id= this.props.id;\r\n            const obj= {\r\n                id: id,\r\n            }\r\n            this.props.onSubmitEdit( id, {...values, ...obj});\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const { edit,  } = this.state;\r\n        const { Typecar } = this.props;\r\n        const classNames=\"field-no-radius form-light\";\r\n        const type=\"vertical\";\r\n        const trigger =[\r\n            {\r\n                attrbTrigger:'save',\r\n                render:{\r\n                    type:'BUTTON',\r\n                    size:'default',\r\n                    label:'Lưu lại',\r\n                    icon:'download',\r\n                }\r\n            },  \r\n        ]\r\n        const actions=[\r\n            {\r\n                attrbtn: 'save',\r\n                content: (val) => this.handleSubmit(val)\r\n            },\r\n        ]\r\n        const listFields=[\r\n            {\r\n                attrbField:'name',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    defaultValue:Typecar.name\r\n                   \r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập tên xe',\r\n                    label:'Loại xe: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'typeDescription',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    validation:{\r\n                        // rules: [\r\n                        //     {\r\n                        //       required: true,\r\n                        //       message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                        //     }\r\n                        // ],\r\n                    },\r\n                    defaultValue:Typecar.typeDescription\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập mô tả',\r\n                    label:'Mô tả: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n           \r\n        ] \r\n       \r\n        return(\r\n            <Row >\r\n                <Col md={24}>\r\n                    <FormContent\r\n                        layouts={layouts}\r\n                        actions={actions} \r\n                        trigger={trigger} \r\n                        classNames={classNames} \r\n                        type={type} \r\n                        listFields={listFields}\r\n                        submit= {edit}\r\n                        formID= \"editTypeCar\"\r\n                        mode= \"edit\"\r\n                        handleSubmit= {this.handleSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={24}>\r\n                    <Button onClick={()=>this.changeView()}>\r\n                        <Icon type=\"save\"></Icon> Save\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormEditContent));","import callApis from 'utils/callAPI/apiCaller';\r\nimport * as Types from './ActionTypes';\r\n\r\nexport const reqCountData = (accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`TypeCar/CountAll/pagesize/pageNow`, 'GET', null, accesstoken).then(res => {\r\n            dispatch(actCountData(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actCountData = (data) => {\r\n    return {\r\n        type: Types.COUNT_DATA,\r\n        data\r\n    }\r\n}\r\nexport const reqSearchTypecar = (keyword, pageIndex, pageSize, accesstoken) => {\r\n    return (dispatch) => {\r\n         callApis(`TypeCar/CountCondition/condition?condition=${keyword}`, 'GET', null, accesstoken).then(res => {\r\n            dispatch(actCountData(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        return callApis(`TypeCar/PagingCondition/pagesize/pageNow/condition?pagesize=${pageSize}&pageNow=${pageIndex}&condition=${keyword}`, 'GET', null, accesstoken).then(res => {\r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const reqLoadDataPaging = (pageIndex,pageSize,accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`TypeCar/Paging/pagesize/pageNow?pagesize=${pageSize}&pageNow=${pageIndex}`, 'GET', null, accesstoken).then(res => {\r\n            console.log(res.data);    \r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const actLoadDataPaging = (data) => {\r\n    return {\r\n        type: Types.LOAD_TYPECAR,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqFindTypecar = (id, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`TypeCar/GetById/${id}`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actFindTypecar(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actFindTypecar = (data) => {\r\n    return {\r\n        type: Types.FIND_TYPECAR,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqDeleteTypecar = (id, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Typecar/Delete/${id}`, 'DELETE', null, accesstoken).then(res => {\r\n            return callApis(`Typecar/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actDeleteTypecar(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actDeleteTypecar = (data) => {\r\n    return {\r\n        type: Types.DELETE_TYPECAR,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqUpdateTypecar = (id, Typecar, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Typecar/Update/${id}`, 'PUT', Typecar, accesstoken).then(res => {\r\n            console.log(\"edit\");\r\n            return callApis(`Typecar/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actUpdateTypecar(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actUpdateTypecar = (data) => {\r\n    return {\r\n        type: Types.UPDATE_TYPECAR,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqAddTypecar = ( Typecar, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Typecar/Create`, 'POST', Typecar, accesstoken).then(res => {\r\n            // console.log(res.data);\r\n            return callApis(`Typecar/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actAddTypecar(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actAddTypecar = (data) => {\r\n    return {\r\n        type: Types.ADD_TYPECAR,\r\n        data\r\n    }\r\n}\r\n","import React,{Component} from 'react';\r\nimport {Row, Col, Button, Icon, Popover, Avatar, Select, notification,   } from 'antd';\r\nimport './index.css';\r\nimport FunctionbarContent from './function/index';\r\nimport PanelWrapper from 'containers/wrapper/Panel.style';\r\nimport TableContent from 'components/ptp__table/index';\r\n// import TableContent from 'components/table/MyTable';\r\n\r\n// import {demoData} from './list-Typecar-dumy';\r\nimport DrawerContent from 'components/Drawer/Drawer';\r\nimport FormTypecar from './action/add/FormTypecar'; \r\nimport FormEditTypecar from './action/edit/edit'; \r\n\r\nimport { withRouter, } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {showNotification} from 'components/notification/Notification';\r\nimport {reqLoadDataPaging, reqSearchTypecar, reqCountData, \r\n    reqFindTypecar, reqDeleteTypecar, reqAddTypecar, reqUpdateTypecar} from 'redux/typecar/actions';\r\nimport * as CONST_VARIABLE from 'utils/const/index';\r\n\r\nclass TypecarManagement extends Component{\r\n    state={\r\n        pageSize:5,\r\n        pageIndex:1,\r\n        fullScreenMode:false,\r\n        \r\n        visibledAdd:false,\r\n        visibledEdit:false,\r\n\r\n        filteredInfo: null,\r\n        sortedInfo: null, \r\n        selectedRowKeys: [],\r\n        pagination:null,\r\n        recordSelected:null,\r\n        data:[],\r\n        idEdit:null\r\n    }\r\n    handleFullScreenMode=(val)=> {\r\n        this.setState(() => {\r\n            return {\r\n                fullScreenMode: val\r\n            };\r\n        });\r\n    }\r\n        \r\n    showDrawerAdd=()=>{ this.setState({visibledAdd:true}) }\r\n    onCloseAdd = () => { this.setState({ visibledAdd: false, }) };\r\n\r\n    showDrawerEdit=(id)=>{ \r\n        this.props.handleFindTypecar(id);\r\n        this.setState({visibledEdit:true, idEdit: id});\r\n     }\r\n    onCloseEdit = () => { this.setState({ visibledEdit: false, }) };\r\n\r\n\r\n    onSelectChange = (selectedRowKeys) => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({ selectedRowKeys });\r\n    }\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter,\r\n            pagination: pagination\r\n        });\r\n\r\n    }\r\n\r\n    onRowSelect = (record) => {\r\n        this.setState({recordSelected:record});\r\n    }\r\n\r\n    clearFilters = (attr, name) => {\r\n        const filteredInfo = this.state.filteredInfo;\r\n        let arrayVal = filteredInfo[attr.val];\r\n        let ind = arrayVal.indexOf(name);\r\n        arrayVal.splice(ind, 1);\r\n        let attrFilter ={\r\n            [attr.val]: arrayVal\r\n        }\r\n        const obj= {...filteredInfo, ...attrFilter};\r\n        this.setState({ filteredInfo: obj });\r\n    }\r\n\r\n    clearSorted = () => {\r\n        this.setState({ sortedInfo: null, });\r\n    }\r\n    handleChangeSelectInRow =(value) => {\r\n        console.log(\"change value in rrow: \");\r\n        console.log(value, this.state.recordSelected);\r\n    }\r\n    \r\n    handleOnSearch= (val) =>{\r\n        console.log(this.state.pagination);\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        // console.log(val);\r\n        if(val!==''){\r\n            // this.props.countAllTypecar(accesstoken);    \r\n            this.props.handleSearchTypecar(val, this.state.pageIndex, this.state.pageSize, accesstoken);\r\n       \r\n        }else{\r\n            const {pageIndex, pageSize}= this.state;\r\n            this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n            this.props.countAllTypecar(accesstoken);    \r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentWillMount(){\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        const {pageIndex, pageSize}= this.state;\r\n        this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n        this.props.countAllTypecar(accesstoken);\r\n    }\r\n\r\n    componentDidMount(){\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        const {pageIndex, pageSize}= this.state;\r\n        this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n        this.props.countAllTypecar(accesstoken);\r\n    }\r\n\r\n    handleSubmit=(obj)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleAddTypecar(obj, accesstoken);\r\n        this.onCloseAdd();\r\n        showNotification(\"Thêm thành công\", \"Bạn vừa thực hiện thêm một loại xe!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n    handleDelete=(id)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleDeleteTypecar(id, accesstoken);\r\n        showNotification(\"Xóa thành công\", \"Bạn vừa thực hiện xóa một loại xe!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n    handleSubmitEdit=(id, obj)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleUpdateTypecar(id, obj, accesstoken);\r\n        this.onCloseEdit();\r\n        this.setState({id:null});\r\n        showNotification(\"Sửa thành công\", \"Bạn vừa thực hiện cập nhật thông tin một xe!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n   \r\n    render(){\r\n        let { sortedInfo, filteredInfo } = this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const info = {\r\n            sorted: sortedInfo,\r\n            filtered: filteredInfo\r\n        }\r\n        const columns = [\r\n            {\r\n                title: 'Loại xe',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\r\n            }, \r\n            {\r\n                title: 'Mô tả',\r\n                dataIndex: 'typeDescription',\r\n                key: 'typeDescription',\r\n                defaultSortOrder: 'ascend',\r\n                sorter: (a, b) => a.typeDescription - b.typeDescription,\r\n                sortOrder: sortedInfo.columnKey === 'typeDescription' && sortedInfo.order,\r\n            }, \r\n            {\r\n                title: 'Action',\r\n                align:'center',\r\n                render:(text, record, index)=>{\r\n                    return(\r\n                        <div>\r\n                            <Button onClick={()=>this.showDrawerEdit(text)} className='btn btn-table' icon='edit'></Button>\r\n                            <Button \r\n                                onClick={()=>this.handleDelete(text)} \r\n                                className='btn btn-table' \r\n                                icon='delete'>\r\n                            </Button>\r\n                        </div>\r\n                    );\r\n                },\r\n                dataIndex: 'id',\r\n                key:'id',\r\n                width : 100\r\n               \r\n            },\r\n       ];\r\n        \r\n        const config ={\r\n            table:{\r\n                // bordered: true\r\n            },\r\n            pagination:{\r\n                defaultPageSize:5,\r\n                total: this.props.numberTypecar\r\n            },\r\n        }\r\n        const event={\r\n            table:{\r\n                onChange:this.handleChange,\r\n                clearSorted: this.clearSorted,\r\n                clearFiltered: this.clearFilters,\r\n                onRow: this.onRowSelect,\r\n                onSearch: this.handleOnSearch\r\n            },\r\n            pagination:{\r\n                onChange:\r\n                    (page, pageSize)=>{\r\n                        const accesstoken= sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n                        this.props.loadDataPaging(page, pageSize, accesstoken);\r\n                    },\r\n                onShowSizeChange:\r\n                    (page, pageSize)=>{\r\n                        const accesstoken= sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n                        this.props.loadDataPaging(page, pageSize, accesstoken);\r\n                    }\r\n            }\r\n        }\r\n        const { selectedRowKeys } = this.state;\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n            hideDefaultSelections: true,\r\n            selections: [{\r\n                key: 'all-data',\r\n                text: 'Select All Data',\r\n                onSelect: () => {\r\n                this.setState({\r\n                    selectedRowKeys: [...Array(46).keys()], // 0...45\r\n                });\r\n                },\r\n            }, {\r\n                key: 'odd',\r\n                text: 'Select Odd Row',\r\n                onSelect: (changableRowKeys) => {\r\n                let newSelectedRowKeys = [];\r\n                newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                    if (index % 2 !== 0) {\r\n                    return false;\r\n                    }\r\n                    return true;\r\n                });\r\n                this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                },\r\n            }, {\r\n                key: 'even',\r\n                text: 'Select Even Row',\r\n                onSelect: (changableRowKeys) => {\r\n                let newSelectedRowKeys = [];\r\n                newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                    if (index % 2 !== 0) {\r\n                    return true;\r\n                    }\r\n                    return false;\r\n                });\r\n                this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                },\r\n            }],\r\n            // onSelection: this.onSelection,\r\n        };\r\n\r\n\r\n        var listPropForDrawer={\r\n            styleProps:{\r\n              title:\"Nhập thông tin!\",\r\n              width:420,\r\n              height:'100%',\r\n              maskStyle:{\r\n                  color:'red'\r\n              },\r\n              mask:true,\r\n              maskClosable:true,\r\n              style:{\r\n                  backgroundColor:'#fafafa'\r\n              },\r\n              className:\"ok\",\r\n              zIndex:1,\r\n              placement:\"right\",\r\n              closable:this.state.visibledAdd,\r\n              destroyOnClose:false,\r\n            },\r\n            onClose:this.onCloseAdd,\r\n            visible:this.state.visibledAdd,\r\n            hasButtonFooter:false,\r\n            componentWillShow:(key)=> <FormTypecar\r\n                    key={key}\r\n                    onSubmitAdd={this.handleSubmit}\r\n                />,\r\n        }\r\n        var listPropForDrawerEdit={\r\n            styleProps:{\r\n              title:\"Nhập thông tin sửa đổi!\",\r\n              width:420,\r\n              height:'100%',\r\n              maskStyle:{\r\n                  color:'red'\r\n              },\r\n              mask:true,\r\n              maskClosable:true,\r\n              style:{\r\n                  backgroundColor:'#fafafa'\r\n              },\r\n              className:\"ok\",\r\n              zIndex:1,\r\n              placement:\"right\",\r\n              closable:this.state.visibledEdit,\r\n              destroyOnClose:false,\r\n            },\r\n            onClose:this.onCloseEdit,\r\n            visible:this.state.visibledEdit,\r\n            hasButtonFooter:false,\r\n            componentWillShow:(key)=> <FormEditTypecar \r\n                key={key}\r\n                id={this.state.idEdit} \r\n                Typecar={this.props.itemTypecar}\r\n                onSubmitEdit={this.handleSubmitEdit}\r\n            />,\r\n        }\r\n        return (\r\n            <Row className=\"content_manager_wrapper\" style={{height:'100%'}}>\r\n                <PanelWrapper className={this.state.fullScreenMode ? \"full-screen-mode\" : \"\"}>\r\n                    <FunctionbarContent showDrawerAdd={this.showDrawerAdd} handleFullScreenMode={this.handleFullScreenMode}/>\r\n                    <Col md={24} className=\"table-wrapper\">\r\n                        <TableContent\r\n                            rowSelection={rowSelection}\r\n                            data={this.props.typecar} \r\n                            columns={columns} \r\n                            config={config} \r\n                            event={event}\r\n                            info={info}\r\n                        />\r\n                        \r\n                    </Col>\r\n                    <DrawerContent \r\n                        key={'addTypecar'}\r\n                        styleProps={listPropForDrawer.styleProps} \r\n                        visible={listPropForDrawer.visible} \r\n                        onClose={listPropForDrawer.onClose}\r\n                        hasButtonFooter={listPropForDrawer.hasButtonFooter}    \r\n                        componentWillShow={listPropForDrawer.componentWillShow}\r\n                    />\r\n                    <DrawerContent \r\n                        key={'editTypecar'}\r\n                        styleProps={listPropForDrawerEdit.styleProps} \r\n                        visible={listPropForDrawerEdit.visible} \r\n                        onClose={listPropForDrawerEdit.onClose}\r\n                        hasButtonFooter={listPropForDrawerEdit.hasButtonFooter}    \r\n                        componentWillShow={listPropForDrawerEdit.componentWillShow}\r\n                    />\r\n                </PanelWrapper>\r\n\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    console.log(state.typecar);\r\n    return {\r\n        typecar: state.typecar,\r\n        itemTypecar: state.itemTypecar,\r\n        numberTypecar: state.numberTypecar\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        handleAddTypecar: (object, accesstoken)=>{\r\n            dispatch(reqAddTypecar(object, accesstoken));\r\n        },\r\n        handleFindTypecar: (id, accesstoken)=>{\r\n            dispatch(reqFindTypecar(id, accesstoken));\r\n        },\r\n        handleUpdateTypecar: (id, object, accesstoken)=>{\r\n            dispatch(reqUpdateTypecar(id, object, accesstoken));\r\n        },\r\n        handleDeleteTypecar: (id, accesstoken)=>{\r\n            dispatch(reqDeleteTypecar(id, accesstoken));\r\n        },\r\n        loadDataPaging: (pageIndex, pageSize, accesstoken)=>{\r\n            dispatch(reqLoadDataPaging(pageIndex, pageSize, accesstoken));\r\n        },\r\n        countAllTypecar: ( accesstoken)=>{\r\n            dispatch(reqCountData( accesstoken));\r\n        },\r\n        handleSearchTypecar: (keyword, pageIndex, pageSize, accesstoken)=>{\r\n            dispatch(reqSearchTypecar(keyword, pageIndex, pageSize, accesstoken))\r\n        }\r\n\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(TypecarManagement));","import React, {Component} from 'react';\r\nimport {Button, Icon, Row,Col} from 'antd';\r\nimport './index.css';\r\nimport 'settings/css/global.scss';\r\n\r\nclass FunctionContent extends Component{\r\n    state={\r\n        fullScreen:true,\r\n        visibled:true,\r\n    }\r\n    onClose = () => { this.setState({ visibled: false, }) };\r\n    showDrawer = () => {  \r\n        this.setState({  visibled: true, },this.props.showDrawerAdd(this.state.visibled)); \r\n        \r\n    };\r\n    setFullScreen=()=>{\r\n        this.setState({fullScreen:true},this.props.handleFullScreenMode(this.state.fullScreen));\r\n    }\r\n    setNotFullScreen=()=>{\r\n        this.setState({fullScreen:false},this.props.handleFullScreenMode(this.state.fullScreen));\r\n    }\r\n    render(){\r\n       \r\n        return(\r\n            <Row className=\"function-bar-wrapper\">\r\n                <Col md={24}>\r\n                    <Button type=\"default\" onClick={this.showDrawer} size=\"small\" className=\"function-btn-left\">\r\n                        <Icon type=\"plus\" theme=\"outlined\" />\r\n                    </Button>\r\n                    <Button type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                        <Icon type=\"close\" theme=\"outlined\" />\r\n                    </Button>\r\n                    {\r\n                        (this.state.fullScreen)?\r\n                        <Button \r\n                            onClick={this.setNotFullScreen}\r\n                            type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                                <Icon type=\"fullscreen\" theme=\"outlined\" />\r\n                        </Button>:\r\n                        <Button \r\n                            onClick={this.setFullScreen}\r\n                            type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                            <Icon type=\"fullscreen-exit\" theme=\"outlined\" />\r\n                        </Button>\r\n                    }\r\n                </Col>\r\n                \r\n            </Row>\r\n        );\r\n    }\r\n\r\n}\r\nexport default FunctionContent;","export const layouts=[\r\n    [\r\n        {\r\n            attrbLayout:'fistNameAndLastName',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            attrbLayout:'phoneNumber',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            attrbLayout:'email',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n        \r\n    ],\r\n   \r\n]","import React, {Component} from 'react';\r\nimport FormContent from 'components/ptp__form-layout';\r\nimport {layouts} from '../layout';\r\nimport {Row, Col, Button, Icon} from 'antd';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst edit_view = 0, edit_submit= 1;\r\nclass FormEditContent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            edit:edit_view, \r\n            dataSubmit:{\r\n            },\r\n            customer:null,\r\n            id:'',\r\n\r\n        }\r\n    }\r\n\r\n    changeView = () => {\r\n        this.setState({edit: edit_submit});\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.setState({edit: edit_view});\r\n        \r\n        if(values!=='error'){\r\n            const obj= {\r\n                id:'12',\r\n                purchDate: '2018-12-22T09:48:25.350Z'\r\n            }\r\n            this.props.onSubmitAdd({...values, ...obj});\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const { edit,  } = this.state;\r\n        const classNames=\"field-no-radius form-light\";\r\n        const type=\"vertical\";\r\n        const trigger =[\r\n            {\r\n                attrbTrigger:'save',\r\n                render:{\r\n                    type:'BUTTON',\r\n                    size:'default',\r\n                    label:'Lưu lại',\r\n                    icon:'download',\r\n                }\r\n            },  \r\n        ]\r\n        const actions=[\r\n            {\r\n                attrbtn: 'save',\r\n                content: (val) => this.handleSubmit(val)\r\n            },\r\n        ]\r\n        const listFields=[\r\n            {\r\n                attrbField:'fistNameAndLastName',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập tên của bạn',\r\n                    label:'Tên khách hàng: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'phoneNumber',\r\n                data:{\r\n                    dataType:'NUMBER',\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    },\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập số điện thoại ',\r\n                    label:'Số điện thoại: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'email',\r\n                data:{\r\n                    dataType:'EMAIL',\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              type: 'email',\r\n                              message: 'Bạn phải nhập đúng định dạng email!!!'\r\n                            },\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    }\r\n                    \r\n                  \r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập email ',\r\n                    label:'Email: ',\r\n                   \r\n                },\r\n                action:{\r\n                }\r\n            },\r\n           \r\n            \r\n        ] \r\n       \r\n        return(\r\n            <Row >\r\n                <Col md={24}>\r\n                    <FormContent\r\n                        layouts={layouts}\r\n                        actions={actions} \r\n                        trigger={trigger} \r\n                        classNames={classNames} \r\n                        type={type} \r\n                        listFields={listFields}\r\n                        submit= {edit}\r\n                        formID= \"addCustomer\" \r\n                        mode= \"edit\"\r\n                        handleSubmit= {this.handleSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={24}>\r\n                    <Button onClick={()=>this.changeView()}>\r\n                        <Icon type=\"save\"></Icon> Save\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormEditContent));","import React, {Component} from 'react';\r\nimport FormContent from 'components/ptp__form-layout';\r\nimport {layouts} from '../layout';\r\nimport {Row, Col, Button, Icon} from 'antd';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst edit_view = 0, edit_submit= 1;\r\nclass FormEditContent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            edit:edit_view, \r\n            dataSubmit:{\r\n            },\r\n            id:'',\r\n\r\n        }\r\n    }\r\n\r\n    changeView = () => {\r\n        this.setState({edit: edit_submit});\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.setState({edit: edit_view});\r\n        \r\n        if(values!=='error'){\r\n            const id= this.props.id;\r\n            const obj= {\r\n                id: id,\r\n            }\r\n            this.props.onSubmitEdit( id, {...values, ...obj});\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const { edit,  } = this.state;\r\n        const { customer } = this.props;\r\n        console.log(customer);\r\n        const classNames=\"field-no-radius form-light\";\r\n        const type=\"vertical\";\r\n        const trigger =[\r\n            {\r\n                attrbTrigger:'save',\r\n                render:{\r\n                    type:'BUTTON',\r\n                    size:'default',\r\n                    label:'Lưu lại',\r\n                    icon:'download',\r\n                }\r\n            },  \r\n        ]\r\n        const actions=[\r\n            {\r\n                attrbtn: 'save',\r\n                content: (val) => this.handleSubmit(val)\r\n            },\r\n        ]\r\n        const listFields=[\r\n            {\r\n                attrbField:'fistNameAndLastName',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    defaultValue:customer.fistNameAndLastName,\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập tên khách hàng',\r\n                    label:'Tên khách hàng: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'phoneNumber',\r\n                data:{\r\n                    dataType:'NUMBER',\r\n                    defaultValue:customer.phoneNumber,\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    }\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập số điện thoại',\r\n                    label:'Số điện thoại: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'email',\r\n                data:{\r\n                    dataType:'EMAIL',\r\n                    defaultValue:customer.email,\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            },\r\n                            {\r\n                                type: 'email',\r\n                                message: 'Bạn phải nhập đúng định dạng email!!!'\r\n                              },\r\n                        ],\r\n                    }\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập email ',\r\n                    label:'Email: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n           \r\n            \r\n        ] \r\n       \r\n        return(\r\n            <Row >\r\n                <Col md={24}>\r\n                    <FormContent\r\n                        layouts={layouts}\r\n                        actions={actions} \r\n                        trigger={trigger} \r\n                        classNames={classNames} \r\n                        type={type} \r\n                        listFields={listFields}\r\n                        submit= {edit}\r\n                        formID= \"editCustomer\"\r\n                        mode= \"edit\"\r\n                        handleSubmit= {this.handleSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={24}>\r\n                    <Button onClick={()=>this.changeView()}>\r\n                        <Icon type=\"save\"></Icon> Save\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormEditContent));","import callApis from 'utils/callAPI/apiCaller';\r\nimport * as Types from './ActionTypes';\r\n\r\nexport const reqCountData = (accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Customer/CountAll/pagesize/pageNow`, 'GET', null, accesstoken).then(res => {\r\n            dispatch(actCountData(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actCountData = (data) => {\r\n    return {\r\n        type: Types.COUNT_DATA,\r\n        data\r\n    }\r\n}\r\nexport const reqSearchCustomer = (keyword, pageIndex, pageSize, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Customer/PagingCondition/pagesize/pageNow/condition?pagesize=${pageSize}&pageNow=${pageIndex}&condition=${keyword}`, 'GET', null, accesstoken).then(res => {\r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\n\r\nexport const reqLoadDataPaging = (pageIndex,pageSize,accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Customer/Paging/pagesize/pageNow?pagesize=${pageSize}&pageNow=${pageIndex}`, 'GET', null, accesstoken).then(res => {\r\n            console.log(res.data);    \r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const reqSearchProduct = (keyword, pageIndex, pageSize, sortCustomer, priceStart, priceEnd, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(\r\n        `Customer/PagingConditionPrice/condition/pageIndex/pageSize/sortCustomer/priceStart/priceEnd?condition=${keyword}&pageIndex=${pageIndex}&pageSize=${pageSize}&sortCustomer=${sortCustomer}&priceStart=${priceStart}&priceEnd=${priceEnd}`,\r\n         'GET', null, accesstoken).then(res => {\r\n            console.log(res.data);    \r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actLoadDataPaging = (data) => {\r\n    return {\r\n        type: Types.LOAD_CUSTOMER,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqFindCustomer = (id, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Customer/GetById/${id}`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actFindCustomer(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actFindCustomer = (data) => {\r\n    return {\r\n        type: Types.FIND_CUSTOMER,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqDeleteCustomer = (id, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Customer/Delete/${id}`, 'DELETE', null, accesstoken).then(res => {\r\n            return callApis(`Customer/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actDeleteCustomer(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actDeleteCustomer = (data) => {\r\n    return {\r\n        type: Types.DELETE_CUSTOMER,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqUpdateCustomer = (id, Customer, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Customer/Update/${id}`, 'PUT', Customer, accesstoken).then(res => {\r\n            return callApis(`Customer/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actUpdateCustomer(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actUpdateCustomer = (data) => {\r\n    return {\r\n        type: Types.UPDATE_CUSTOMER,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqAddCustomer = ( Customer, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Customer/Create`, 'POST', Customer, accesstoken).then(res => {\r\n            console.log(res.data);\r\n            return callApis(`Customer/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actAddCustomer(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actAddCustomer = (data) => {\r\n    return {\r\n        type: Types.ADD_CUSTOMER,\r\n        data\r\n    }\r\n}\r\n","import React,{Component} from 'react';\r\nimport {Row, Col, Button, Icon, Popover, Avatar, Select, notification,   } from 'antd';\r\nimport './index.css';\r\nimport FunctionbarContent from './function/index';\r\nimport PanelWrapper from 'containers/wrapper/Panel.style';\r\nimport TableContent from 'components/ptp__table/index';\r\n// import TableContent from 'components/table/MyTable';\r\n\r\n// import {demoData} from './list-Customer-dumy';\r\nimport DrawerContent from 'components/Drawer/Drawer';\r\nimport FormCustomer from './action/add/FormCustomer'; \r\nimport FormEditCustomer from './action/edit/edit'; \r\n\r\nimport { withRouter, } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {showNotification} from 'components/notification/Notification';\r\nimport {reqLoadDataPaging, reqSearchCustomer, reqCountData,\r\n     reqFindCustomer, reqDeleteCustomer, reqAddCustomer, reqUpdateCustomer} from 'redux/customer/actions';\r\nimport * as CONST_VARIABLE from 'utils/const/index';\r\n\r\nclass CustomerManagement extends Component{\r\n    state={\r\n        pageSize:5,\r\n        pageIndex:1,\r\n        fullScreenMode:false,\r\n        \r\n        visibledAdd:false,\r\n        visibledEdit:false,\r\n\r\n        filteredInfo: null,\r\n        sortedInfo: null, \r\n        selectedRowKeys: [],\r\n        pagination:null,\r\n        recordSelected:null,\r\n        data:[],\r\n        idEdit:null\r\n    }\r\n    handleFullScreenMode=(val)=> {\r\n        this.setState(() => {\r\n            return {\r\n                fullScreenMode: val\r\n            };\r\n        });\r\n    }\r\n        \r\n    showDrawerAdd=()=>{ this.setState({visibledAdd:true}) }\r\n    onCloseAdd = () => { this.setState({ visibledAdd: false, }) };\r\n\r\n    showDrawerEdit=(id)=>{ \r\n        this.props.handleFindCustomer(id);\r\n        this.setState({visibledEdit:true, idEdit: id});\r\n     }\r\n    onCloseEdit = () => { this.setState({ visibledEdit: false, }) };\r\n\r\n\r\n    onSelectChange = (selectedRowKeys) => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({ selectedRowKeys });\r\n    }\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter,\r\n            pagination: pagination\r\n        });\r\n\r\n    }\r\n\r\n    onRowSelect = (record) => {\r\n        this.setState({recordSelected:record});\r\n    }\r\n\r\n    clearFilters = (attr, name) => {\r\n        const filteredInfo = this.state.filteredInfo;\r\n        let arrayVal = filteredInfo[attr.val];\r\n        let ind = arrayVal.indexOf(name);\r\n        arrayVal.splice(ind, 1);\r\n        let attrFilter ={\r\n            [attr.val]: arrayVal\r\n        }\r\n        const obj= {...filteredInfo, ...attrFilter};\r\n        this.setState({ filteredInfo: obj });\r\n    }\r\n\r\n    clearSorted = () => {\r\n        this.setState({ sortedInfo: null, });\r\n    }\r\n    handleChangeSelectInRow =(value) => {\r\n        console.log(\"change value in rrow: \");\r\n        console.log(value, this.state.recordSelected);\r\n    }\r\n    \r\n    handleOnSearch= (val) =>{\r\n        console.log(this.state.pagination);\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        // console.log(val);\r\n        if(val!==''){\r\n            // this.props.countAllCustomer(accesstoken);    \r\n            this.props.handleSearchCustomer(val, this.state.pageIndex, this.state.pageSize, accesstoken);\r\n       \r\n        }else{\r\n            const {pageIndex, pageSize}= this.state;\r\n            this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n            this.props.countAllCustomer(accesstoken);    \r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentWillMount(){\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        const {pageIndex, pageSize}= this.state;\r\n        this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n        this.props.countAllCustomer(accesstoken);\r\n    }\r\n\r\n    componentDidMount(){\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        const {pageIndex, pageSize}= this.state;\r\n        this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n        this.props.countAllCustomer(accesstoken);\r\n    }\r\n\r\n    handleSubmit=(obj)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleAddCustomer(obj, accesstoken);\r\n        this.onCloseAdd();\r\n        showNotification(\"Thêm thành công\", \"Bạn vừa thực hiện thêm một khách hàng!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n    handleDelete=(id)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleDeleteCustomer(id, accesstoken);\r\n        showNotification(\"Xóa thành công\", \"Bạn vừa thực hiện xóa một khách hàng!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n    handleSubmitEdit=(id, obj)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleUpdateCustomer(id, obj, accesstoken);\r\n        this.onCloseEdit();\r\n        this.setState({id:null});\r\n        showNotification(\"Sửa thành công\", \"Bạn vừa thực hiện cập nhật thông tin một khách hàng!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n   \r\n    render(){\r\n        let { sortedInfo, filteredInfo } = this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const info = {\r\n            sorted: sortedInfo,\r\n            filtered: filteredInfo\r\n        }\r\n        const columns = [\r\n            {\r\n                title: 'Tên khách hàng',\r\n                dataIndex: 'fistNameAndLastName',\r\n                key: 'fistNameAndLastName',\r\n                sorter: (a, b) => a.fistNameAndLastName.length - b.fistNameAndLastName.length,\r\n                sortcustomer: sortedInfo.columnKey === 'fistNameAndLastName' && sortedInfo.customer,\r\n            }, \r\n            {\r\n                title: 'Số điện thoại',\r\n                dataIndex: 'phoneNumber',\r\n                key: 'phoneNumber',\r\n                defaultSortCustomer: 'phoneNumber',\r\n                sorter: (a, b) => a.typeCustomer - b.typeCustomer,\r\n                sortCustomer: sortedInfo.columnKey === 'phoneNumber' && sortedInfo.customer,\r\n            }, \r\n            {\r\n                title: 'Email',\r\n                dataIndex: 'email',\r\n                key: 'email',\r\n               \r\n            }, \r\n           \r\n            {\r\n                title: 'Action',\r\n                align:'center',\r\n                render:(text, record, index)=>{\r\n                    return(\r\n                        <div>\r\n                            <Button onClick={()=>this.showDrawerEdit(text)} className='btn btn-table' icon='edit'></Button>\r\n                            <Button \r\n                                onClick={()=>this.handleDelete(text)} \r\n                                className='btn btn-table' \r\n                                icon='delete'>\r\n                            </Button>\r\n                        </div>\r\n                    );\r\n                },\r\n                dataIndex: 'id',\r\n                key:'id',\r\n                width : 100\r\n               \r\n            },\r\n       ];\r\n        \r\n        const config ={\r\n            table:{\r\n                // bCustomered: true\r\n            },\r\n            pagination:{\r\n                defaultPageSize:5,\r\n                total: this.props.numberCustomer\r\n            },\r\n        }\r\n        const event={\r\n            table:{\r\n                onChange:this.handleChange,\r\n                clearSorted: this.clearSorted,\r\n                clearFiltered: this.clearFilters,\r\n                onRow: this.onRowSelect,\r\n                onSearch: this.handleOnSearch\r\n            },\r\n            pagination:{\r\n                onChange:\r\n                    (page, pageSize)=>{\r\n                        const accesstoken= sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n                        this.props.loadDataPaging(page, pageSize, accesstoken);\r\n                    },\r\n                onShowSizeChange:\r\n                    (page, pageSize)=>{\r\n                        const accesstoken= sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n                        this.props.loadDataPaging(page, pageSize, accesstoken);\r\n                    }\r\n            }\r\n        }\r\n        const { selectedRowKeys } = this.state;\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n            hideDefaultSelections: true,\r\n            selections: [{\r\n                key: 'all-data',\r\n                text: 'Select All Data',\r\n                onSelect: () => {\r\n                this.setState({\r\n                    selectedRowKeys: [...Array(46).keys()], // 0...45\r\n                });\r\n                },\r\n            }, {\r\n                key: 'odd',\r\n                text: 'Select Odd Row',\r\n                onSelect: (changableRowKeys) => {\r\n                let newSelectedRowKeys = [];\r\n                newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                    if (index % 2 !== 0) {\r\n                    return false;\r\n                    }\r\n                    return true;\r\n                });\r\n                this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                },\r\n            }, {\r\n                key: 'even',\r\n                text: 'Select Even Row',\r\n                onSelect: (changableRowKeys) => {\r\n                let newSelectedRowKeys = [];\r\n                newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                    if (index % 2 !== 0) {\r\n                    return true;\r\n                    }\r\n                    return false;\r\n                });\r\n                this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                },\r\n            }],\r\n            // onSelection: this.onSelection,\r\n        };\r\n\r\n\r\n        var listPropForDrawer={\r\n            styleProps:{\r\n              title:\"Nhập thông tin!\",\r\n              width:420,\r\n              height:'100%',\r\n              maskStyle:{\r\n                  color:'red'\r\n              },\r\n              mask:true,\r\n              maskClosable:true,\r\n              style:{\r\n                  backgroundColor:'#fafafa'\r\n              },\r\n              className:\"ok\",\r\n              zIndex:1,\r\n              placement:\"right\",\r\n              closable:this.state.visibledAdd,\r\n              destroyOnClose:false,\r\n            },\r\n            onClose:this.onCloseAdd,\r\n            visible:this.state.visibledAdd,\r\n            hasButtonFooter:false,\r\n            componentWillShow:(key)=> <FormCustomer\r\n                    key={key}\r\n                    onSubmitAdd={this.handleSubmit}\r\n                />,\r\n        }\r\n        var listPropForDrawerEdit={\r\n            styleProps:{\r\n              title:\"Nhập thông tin sửa đổi!\",\r\n              width:420,\r\n              height:'100%',\r\n              maskStyle:{\r\n                  color:'red'\r\n              },\r\n              mask:true,\r\n              maskClosable:true,\r\n              style:{\r\n                  backgroundColor:'#fafafa'\r\n              },\r\n              className:\"ok\",\r\n              zIndex:1,\r\n              placement:\"right\",\r\n              closable:this.state.visibledEdit,\r\n              destroyOnClose:false,\r\n            },\r\n            onClose:this.onCloseEdit,\r\n            visible:this.state.visibledEdit,\r\n            hasButtonFooter:false,\r\n            componentWillShow:(key)=> <FormEditCustomer \r\n                key={key}\r\n                id={this.state.idEdit} \r\n                customer={this.props.itemCustomer} \r\n                onSubmitEdit={this.handleSubmitEdit}\r\n            />,\r\n        }\r\n        console.log(\"adasdasdas\");\r\n        console.log(this.props.itemCustomer);\r\n        console.log(\"adasdasdas\");\r\n        return (\r\n            <Row className=\"content_manager_wrapper\" style={{height:'100%'}}>\r\n                <PanelWrapper className={this.state.fullScreenMode ? \"full-screen-mode\" : \"\"}>\r\n                    <FunctionbarContent showDrawerAdd={this.showDrawerAdd} handleFullScreenMode={this.handleFullScreenMode}/>\r\n                    <Col md={24} className=\"table-wrapper\">\r\n                        <TableContent\r\n                            rowSelection={rowSelection}\r\n                            data={this.props.customer} \r\n                            columns={columns} \r\n                            config={config} \r\n                            event={event}\r\n                            info={info}\r\n                        />\r\n                        \r\n                    </Col>\r\n                    <DrawerContent \r\n                        key={'addcustomer'}\r\n                        styleProps={listPropForDrawer.styleProps} \r\n                        visible={listPropForDrawer.visible} \r\n                        onClose={listPropForDrawer.onClose}\r\n                        hasButtonFooter={listPropForDrawer.hasButtonFooter}    \r\n                        componentWillShow={listPropForDrawer.componentWillShow}\r\n                    />\r\n                    <DrawerContent \r\n                        key={'editcustomer'}\r\n                        styleProps={listPropForDrawerEdit.styleProps} \r\n                        visible={listPropForDrawerEdit.visible} \r\n                        onClose={listPropForDrawerEdit.onClose}\r\n                        hasButtonFooter={listPropForDrawerEdit.hasButtonFooter}    \r\n                        componentWillShow={listPropForDrawerEdit.componentWillShow}\r\n                    />\r\n                </PanelWrapper>\r\n\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        customer: state.customer,\r\n        itemCustomer: state.itemCustomer,\r\n        numberCustomer: state.numberCustomer\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        handleAddCustomer: (object, accesstoken)=>{\r\n            dispatch(reqAddCustomer(object, accesstoken));\r\n        },\r\n        handleFindCustomer: (id, accesstoken)=>{\r\n            dispatch(reqFindCustomer(id, accesstoken));\r\n        },\r\n        handleUpdateCustomer: (id, object, accesstoken)=>{\r\n            dispatch(reqUpdateCustomer(id, object, accesstoken));\r\n        },\r\n        handleDeleteCustomer: (id, accesstoken)=>{\r\n            dispatch(reqDeleteCustomer(id, accesstoken));\r\n        },\r\n        loadDataPaging: (pageIndex, pageSize, accesstoken)=>{\r\n            dispatch(reqLoadDataPaging(pageIndex, pageSize, accesstoken));\r\n        },\r\n        countAllCustomer: ( accesstoken)=>{\r\n            dispatch(reqCountData( accesstoken));\r\n        },\r\n        handleSearchCustomer: (keyword, pageIndex, pageSize, accesstoken)=>{\r\n            dispatch(reqSearchCustomer(keyword, pageIndex, pageSize, accesstoken))\r\n        }\r\n\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CustomerManagement));","import React, {Component} from 'react';\r\nimport {Button, Icon, Row,Col} from 'antd';\r\nimport './index.css';\r\nimport 'settings/css/global.scss';\r\n\r\nclass FunctionContent extends Component{\r\n    state={\r\n        fullScreen:true,\r\n        visibled:true,\r\n    }\r\n    onClose = () => { this.setState({ visibled: false, }) };\r\n    showDrawer = () => {  \r\n        this.setState({  visibled: true, },this.props.showDrawerAdd(this.state.visibled)); \r\n        \r\n    };\r\n    setFullScreen=()=>{\r\n        this.setState({fullScreen:true},this.props.handleFullScreenMode(this.state.fullScreen));\r\n    }\r\n    setNotFullScreen=()=>{\r\n        this.setState({fullScreen:false},this.props.handleFullScreenMode(this.state.fullScreen));\r\n    }\r\n    render(){\r\n       \r\n        return(\r\n            <Row className=\"function-bar-wrapper\">\r\n                <Col md={24}>\r\n                    <Button type=\"default\" onClick={this.showDrawer} size=\"small\" className=\"function-btn-left\">\r\n                        <Icon type=\"plus\" theme=\"outlined\" />\r\n                    </Button>\r\n                    <Button type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                        <Icon type=\"close\" theme=\"outlined\" />\r\n                    </Button>\r\n                    {\r\n                        (this.state.fullScreen)?\r\n                        <Button \r\n                            onClick={this.setNotFullScreen}\r\n                            type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                                <Icon type=\"fullscreen\" theme=\"outlined\" />\r\n                        </Button>:\r\n                        <Button \r\n                            onClick={this.setFullScreen}\r\n                            type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                            <Icon type=\"fullscreen-exit\" theme=\"outlined\" />\r\n                        </Button>\r\n                    }\r\n                </Col>\r\n                \r\n            </Row>\r\n        );\r\n    }\r\n\r\n}\r\nexport default FunctionContent;","export const layouts=[\r\n    [\r\n        {\r\n            attrbLayout:'nameFeature',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            attrbLayout:'description',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n    ],\r\n   \r\n   \r\n]","import React, {Component} from 'react';\r\nimport FormContent from 'components/ptp__form-layout';\r\nimport {layouts} from '../layout';\r\nimport {Row, Col, Button, Icon} from 'antd';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst edit_view = 0, edit_submit= 1;\r\nclass FormEditContent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            edit:edit_view, \r\n            dataSubmit:{\r\n            },\r\n            feature:null,\r\n            id:'',\r\n\r\n        }\r\n    }\r\n\r\n    changeView = () => {\r\n        this.setState({edit: edit_submit});\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.setState({edit: edit_view});\r\n        \r\n        if(values!=='error'){\r\n            const obj= {\r\n                id:'12',\r\n                purchDate: '2018-12-22T09:48:25.350Z'\r\n            }\r\n            this.props.onSubmitAdd({...values, ...obj});\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const { edit,  } = this.state;\r\n        const classNames=\"field-no-radius form-light\";\r\n        const type=\"vertical\";\r\n        const trigger =[\r\n            {\r\n                attrbTrigger:'save',\r\n                render:{\r\n                    type:'BUTTON',\r\n                    size:'default',\r\n                    label:'Lưu lại',\r\n                    icon:'download',\r\n                }\r\n            },  \r\n        ]\r\n        const actions=[\r\n            {\r\n                attrbtn: 'save',\r\n                content: (val) => this.handleSubmit(val)\r\n            },\r\n        ]\r\n        const listFields=[\r\n            {\r\n                attrbField:'nameFeature',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    },\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập tên tính năng',\r\n                    label:'Tên tính năng: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'description',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    },\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập mô tả ',\r\n                    label:'Mô tả: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n           \r\n           \r\n            \r\n        ] \r\n       \r\n        return(\r\n            <Row >\r\n                <Col md={24}>\r\n                    <FormContent\r\n                        layouts={layouts}\r\n                        actions={actions} \r\n                        trigger={trigger} \r\n                        classNames={classNames} \r\n                        type={type} \r\n                        listFields={listFields}\r\n                        submit= {edit}\r\n                        formID= \"addFeature\"\r\n                        mode= \"edit\"\r\n                        handleSubmit= {this.handleSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={24}>\r\n                    <Button onClick={()=>this.changeView()}>\r\n                        <Icon type=\"save\"></Icon> Save\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormEditContent));","import React, {Component} from 'react';\r\nimport FormContent from 'components/ptp__form-layout';\r\nimport {layouts} from '../layout';\r\nimport {Row, Col, Button, Icon} from 'antd';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst edit_view = 0, edit_submit= 1;\r\nclass FormEditContent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            edit:edit_view, \r\n            dataSubmit:{\r\n            },\r\n            id:'',\r\n\r\n        }\r\n    }\r\n\r\n    changeView = () => {\r\n        this.setState({edit: edit_submit});\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.setState({edit: edit_view});\r\n        \r\n        if(values!=='error'){\r\n            const id= this.props.id;\r\n            const obj= {\r\n                id: id,\r\n            }\r\n            this.props.onSubmitEdit( id, {...values, ...obj});\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const { edit,  } = this.state;\r\n        const { feature } = this.props;\r\n        console.log(feature);\r\n        const classNames=\"field-no-radius form-light\";\r\n        const type=\"vertical\";\r\n        const trigger =[\r\n            {\r\n                attrbTrigger:'save',\r\n                render:{\r\n                    type:'BUTTON',\r\n                    size:'default',\r\n                    label:'Lưu lại',\r\n                    icon:'download',\r\n                }\r\n            },  \r\n        ]\r\n        const actions=[\r\n            {\r\n                attrbtn: 'save',\r\n                content: (val) => this.handleSubmit(val)\r\n            },\r\n        ]\r\n        const listFields=[\r\n            {\r\n                attrbField:'nameFeature',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    defaultValue:feature.nameFeature,\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    }\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập tên tính năng',\r\n                    label:'Tên tính năng: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'description',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    defaultValue:feature.description,\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    }\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập mô tả',\r\n                    label:'Mô tả: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n           \r\n           \r\n            \r\n        ] \r\n       \r\n        return(\r\n            <Row >\r\n                <Col md={24}>\r\n                    <FormContent\r\n                        layouts={layouts}\r\n                        actions={actions} \r\n                        trigger={trigger} \r\n                        classNames={classNames} \r\n                        type={type} \r\n                        listFields={listFields}\r\n                        submit= {edit}\r\n                        formID= \"editFeature\"\r\n                        mode= \"edit\"\r\n                        handleSubmit= {this.handleSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={24}>\r\n                    <Button onClick={()=>this.changeView()}>\r\n                        <Icon type=\"save\"></Icon> Save\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormEditContent));","import callApis from 'utils/callAPI/apiCaller';\r\nimport * as Types from './ActionTypes';\r\n\r\nexport const reqCountData = (accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Feature/CountAll/pagesize/pageNow`, 'GET', null, accesstoken).then(res => {\r\n            dispatch(actCountData(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actCountData = (data) => {\r\n    return {\r\n        type: Types.COUNT_DATA,\r\n        data\r\n    }\r\n}\r\nexport const reqSearchFeature = (keyword, pageIndex, pageSize, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Feature/PagingCondition/pagesize/pageNow/condition?pagesize=${pageSize}&pageNow=${pageIndex}&condition=${keyword}`, 'GET', null, accesstoken).then(res => {\r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\n\r\nexport const reqLoadDataPaging = (pageIndex,pageSize,accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Feature/Paging/pagesize/pageNow?pagesize=${pageSize}&pageNow=${pageIndex}`, 'GET', null, accesstoken).then(res => {\r\n            console.log(res.data);    \r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const reqSearchProduct = (keyword, pageIndex, pageSize, sortFeature, priceStart, priceEnd, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(\r\n        `Feature/PagingConditionPrice/condition/pageIndex/pageSize/sortFeature/priceStart/priceEnd?condition=${keyword}&pageIndex=${pageIndex}&pageSize=${pageSize}&sortFeature=${sortFeature}&priceStart=${priceStart}&priceEnd=${priceEnd}`,\r\n         'GET', null, accesstoken).then(res => {\r\n            console.log(res.data);    \r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actLoadDataPaging = (data) => {\r\n    return {\r\n        type: Types.LOAD_FEATURE,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqFindFeature = (id, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Feature/GetById/${id}`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actFindFeature(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actFindFeature = (data) => {\r\n    return {\r\n        type: Types.FIND_FEATURE,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqDeleteFeature = (id, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Feature/Delete/${id}`, 'DELETE', null, accesstoken).then(res => {\r\n            return callApis(`Feature/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actDeleteFeature(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actDeleteFeature = (data) => {\r\n    return {\r\n        type: Types.DELETE_FEATURE,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqUpdateFeature = (id, Feature, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Feature/Update/${id}`, 'PUT', Feature, accesstoken).then(res => {\r\n            return callApis(`Feature/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actUpdateFeature(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actUpdateFeature = (data) => {\r\n    return {\r\n        type: Types.UPDATE_FEATURE,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqAddFeature = (Feature, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Feature/Create`, 'POST', Feature, accesstoken).then(res => {\r\n            console.log(Feature);\r\n            return callApis(`Feature/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actAddFeature(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actAddFeature = (data) => {\r\n    return {\r\n        type: Types.ADD_FEATURE,\r\n        data\r\n    }\r\n}\r\n","import React,{Component} from 'react';\r\nimport {Row, Col, Button, Icon, Popover, Avatar, Select, notification,   } from 'antd';\r\nimport './index.css';\r\nimport FunctionbarContent from './function/index';\r\nimport PanelWrapper from 'containers/wrapper/Panel.style';\r\nimport TableContent from 'components/ptp__table/index';\r\n// import TableContent from 'components/table/MyTable';\r\n\r\n// import {demoData} from './list-Feature-dumy';\r\nimport DrawerContent from 'components/Drawer/Drawer';\r\nimport FormFeature from './action/add/FormFeature'; \r\nimport FormEditFeature from './action/edit/edit'; \r\n\r\nimport { withRouter, } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {showNotification} from 'components/notification/Notification';\r\nimport {reqLoadDataPaging, reqSearchFeature, reqCountData,\r\n     reqFindFeature, reqDeleteFeature, reqAddFeature, reqUpdateFeature} from 'redux/feature/actions';\r\nimport * as CONST_VARIABLE from 'utils/const/index';\r\n\r\nclass FeatureManagement extends Component{\r\n    state={\r\n        pageSize:5,\r\n        pageIndex:1,\r\n        fullScreenMode:false,\r\n        \r\n        visibledAdd:false,\r\n        visibledEdit:false,\r\n\r\n        filteredInfo: null,\r\n        sortedInfo: null, \r\n        selectedRowKeys: [],\r\n        pagination:null,\r\n        recordSelected:null,\r\n        data:[],\r\n        idEdit:null\r\n    }\r\n    handleFullScreenMode=(val)=> {\r\n        this.setState(() => {\r\n            return {\r\n                fullScreenMode: val\r\n            };\r\n        });\r\n    }\r\n        \r\n    showDrawerAdd=()=>{ this.setState({visibledAdd:true}) }\r\n    onCloseAdd = () => { this.setState({ visibledAdd: false, }) };\r\n\r\n    showDrawerEdit=(id)=>{ \r\n        this.props.handleFindFeature(id);\r\n        this.setState({visibledEdit:true, idEdit: id});\r\n     }\r\n    onCloseEdit = () => { this.setState({ visibledEdit: false, }) };\r\n\r\n\r\n    onSelectChange = (selectedRowKeys) => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({ selectedRowKeys });\r\n    }\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter,\r\n            pagination: pagination\r\n        });\r\n\r\n    }\r\n\r\n    onRowSelect = (record) => {\r\n        this.setState({recordSelected:record});\r\n    }\r\n\r\n    clearFilters = (attr, name) => {\r\n        const filteredInfo = this.state.filteredInfo;\r\n        let arrayVal = filteredInfo[attr.val];\r\n        let ind = arrayVal.indexOf(name);\r\n        arrayVal.splice(ind, 1);\r\n        let attrFilter ={\r\n            [attr.val]: arrayVal\r\n        }\r\n        const obj= {...filteredInfo, ...attrFilter};\r\n        this.setState({ filteredInfo: obj });\r\n    }\r\n\r\n    clearSorted = () => {\r\n        this.setState({ sortedInfo: null, });\r\n    }\r\n    handleChangeSelectInRow =(value) => {\r\n        console.log(\"change value in rrow: \");\r\n        console.log(value, this.state.recordSelected);\r\n    }\r\n    \r\n    handleOnSearch= (val) =>{\r\n        console.log(this.state.pagination);\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        // console.log(val);\r\n        if(val!==''){\r\n            // this.props.countAllFeature(accesstoken);    \r\n            this.props.handleSearchFeature(val, this.state.pageIndex, this.state.pageSize, accesstoken);\r\n       \r\n        }else{\r\n            const {pageIndex, pageSize}= this.state;\r\n            this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n            this.props.countAllFeature(accesstoken);    \r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentWillMount(){\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        const {pageIndex, pageSize}= this.state;\r\n        this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n        this.props.countAllFeature(accesstoken);\r\n    }\r\n\r\n    componentDidMount(){\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        const {pageIndex, pageSize}= this.state;\r\n        this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n        this.props.countAllFeature(accesstoken);\r\n    }\r\n\r\n    handleSubmit=(obj)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleAddFeature(obj, accesstoken);\r\n        this.onCloseAdd();\r\n        showNotification(\"Thêm thành công\", \"Bạn vừa thực hiện thêm một tính năng!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n    handleDelete=(id)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleDeleteFeature(id, accesstoken);\r\n        showNotification(\"Xóa thành công\", \"Bạn vừa thực hiện xóa một tính năng!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n    handleSubmitEdit=(id, obj)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleUpdateFeature(id, obj, accesstoken);\r\n        this.onCloseEdit();\r\n        this.setState({id:null});\r\n        showNotification(\"Sửa thành công\", \"Bạn vừa thực hiện cập nhật thông tin một tính năng!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n   \r\n    render(){\r\n        let { sortedInfo, filteredInfo } = this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const info = {\r\n            sorted: sortedInfo,\r\n            filtered: filteredInfo\r\n        }\r\n        const columns = [\r\n            {\r\n                title: 'Tên tính năng',\r\n                dataIndex: 'nameFeature',\r\n                key: 'nameFeature',\r\n                sorter: (a, b) => a.nameFeature.length - b.nameFeature.length,\r\n                sortfeature: sortedInfo.columnKey === 'nameFeature' && sortedInfo.feature,\r\n            }, \r\n            {\r\n                title: 'Mô tả',\r\n                dataIndex: 'description',\r\n                key: 'description',\r\n                defaultSortFeature: 'description',\r\n                sorter: (a, b) => a.typeFeature - b.typeFeature,\r\n                sortFeature: sortedInfo.columnKey === 'description' && sortedInfo.feature,\r\n            }, \r\n           \r\n            {\r\n                title: 'Action',\r\n                align:'center',\r\n                render:(text, record, index)=>{\r\n                    return(\r\n                        <div>\r\n                            <Button onClick={()=>this.showDrawerEdit(text)} className='btn btn-table' icon='edit'></Button>\r\n                            <Button \r\n                                onClick={()=>this.handleDelete(text)} \r\n                                className='btn btn-table' \r\n                                icon='delete'>\r\n                            </Button>\r\n                        </div>\r\n                    );\r\n                },\r\n                dataIndex: 'id',\r\n                key:'id',\r\n                width : 100\r\n               \r\n            },\r\n       ];\r\n        \r\n        const config ={\r\n            table:{\r\n                // bFeatureed: true\r\n            },\r\n            pagination:{\r\n                defaultPageSize:5,\r\n                total: this.props.numberFeature\r\n            },\r\n        }\r\n        const event={\r\n            table:{\r\n                onChange:this.handleChange,\r\n                clearSorted: this.clearSorted,\r\n                clearFiltered: this.clearFilters,\r\n                onRow: this.onRowSelect,\r\n                onSearch: this.handleOnSearch\r\n            },\r\n            pagination:{\r\n                onChange:\r\n                    (page, pageSize)=>{\r\n                        const accesstoken= sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n                        this.props.loadDataPaging(page, pageSize, accesstoken);\r\n                    },\r\n                onShowSizeChange:\r\n                    (page, pageSize)=>{\r\n                        const accesstoken= sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n                        this.props.loadDataPaging(page, pageSize, accesstoken);\r\n                    }\r\n            }\r\n        }\r\n        const { selectedRowKeys } = this.state;\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n            hideDefaultSelections: true,\r\n            selections: [{\r\n                key: 'all-data',\r\n                text: 'Select All Data',\r\n                onSelect: () => {\r\n                this.setState({\r\n                    selectedRowKeys: [...Array(46).keys()], // 0...45\r\n                });\r\n                },\r\n            }, {\r\n                key: 'odd',\r\n                text: 'Select Odd Row',\r\n                onSelect: (changableRowKeys) => {\r\n                let newSelectedRowKeys = [];\r\n                newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                    if (index % 2 !== 0) {\r\n                    return false;\r\n                    }\r\n                    return true;\r\n                });\r\n                this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                },\r\n            }, {\r\n                key: 'even',\r\n                text: 'Select Even Row',\r\n                onSelect: (changableRowKeys) => {\r\n                let newSelectedRowKeys = [];\r\n                newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                    if (index % 2 !== 0) {\r\n                    return true;\r\n                    }\r\n                    return false;\r\n                });\r\n                this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                },\r\n            }],\r\n            // onSelection: this.onSelection,\r\n        };\r\n\r\n\r\n        var listPropForDrawer={\r\n            styleProps:{\r\n              title:\"Nhập thông tin!\",\r\n              width:420,\r\n              height:'100%',\r\n              maskStyle:{\r\n                  color:'red'\r\n              },\r\n              mask:true,\r\n              maskClosable:true,\r\n              style:{\r\n                  backgroundColor:'#fafafa'\r\n              },\r\n              className:\"ok\",\r\n              zIndex:1,\r\n              placement:\"right\",\r\n              closable:this.state.visibledAdd,\r\n              destroyOnClose:false,\r\n            },\r\n            onClose:this.onCloseAdd,\r\n            visible:this.state.visibledAdd,\r\n            hasButtonFooter:false,\r\n            componentWillShow:(key)=> <FormFeature\r\n                    key={key}\r\n                    onSubmitAdd={this.handleSubmit}\r\n                />,\r\n        }\r\n        var listPropForDrawerEdit={\r\n            styleProps:{\r\n              title:\"Nhập thông tin sửa đổi!\",\r\n              width:420,\r\n              height:'100%',\r\n              maskStyle:{\r\n                  color:'red'\r\n              },\r\n              mask:true,\r\n              maskClosable:true,\r\n              style:{\r\n                  backgroundColor:'#fafafa'\r\n              },\r\n              className:\"ok\",\r\n              zIndex:1,\r\n              placement:\"right\",\r\n              closable:this.state.visibledEdit,\r\n              destroyOnClose:false,\r\n            },\r\n            onClose:this.onCloseEdit,\r\n            visible:this.state.visibledEdit,\r\n            hasButtonFooter:false,\r\n            componentWillShow:(key)=> <FormEditFeature \r\n                key={key}\r\n                id={this.state.idEdit} \r\n                feature={this.props.itemFeature} \r\n                onSubmitEdit={this.handleSubmitEdit}\r\n            />,\r\n        }\r\n        console.log(\"adasdasdas\");\r\n        console.log(this.props.itemFeature);\r\n        console.log(\"adasdasdas\");\r\n        return (\r\n            <Row className=\"content_manager_wrapper\" style={{height:'100%'}}>\r\n                <PanelWrapper className={this.state.fullScreenMode ? \"full-screen-mode\" : \"\"}>\r\n                    <FunctionbarContent showDrawerAdd={this.showDrawerAdd} handleFullScreenMode={this.handleFullScreenMode}/>\r\n                    <Col md={24} className=\"table-wrapper\">\r\n                        <TableContent\r\n                            rowSelection={rowSelection}\r\n                            data={this.props.feature} \r\n                            columns={columns} \r\n                            config={config} \r\n                            event={event}\r\n                            info={info}\r\n                        />\r\n                        \r\n                    </Col>\r\n                    <DrawerContent \r\n                        key={'addfeature'}\r\n                        styleProps={listPropForDrawer.styleProps} \r\n                        visible={listPropForDrawer.visible} \r\n                        onClose={listPropForDrawer.onClose}\r\n                        hasButtonFooter={listPropForDrawer.hasButtonFooter}    \r\n                        componentWillShow={listPropForDrawer.componentWillShow}\r\n                    />\r\n                    <DrawerContent \r\n                        key={'editfeature'}\r\n                        styleProps={listPropForDrawerEdit.styleProps} \r\n                        visible={listPropForDrawerEdit.visible} \r\n                        onClose={listPropForDrawerEdit.onClose}\r\n                        hasButtonFooter={listPropForDrawerEdit.hasButtonFooter}    \r\n                        componentWillShow={listPropForDrawerEdit.componentWillShow}\r\n                    />\r\n                </PanelWrapper>\r\n\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        feature: state.feature,\r\n        itemFeature: state.itemFeature,\r\n        numberFeature: state.numberFeature\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        handleAddFeature: (object, accesstoken)=>{\r\n            dispatch(reqAddFeature(object, accesstoken));\r\n        },\r\n        handleFindFeature: (id, accesstoken)=>{\r\n            dispatch(reqFindFeature(id, accesstoken));\r\n        },\r\n        handleUpdateFeature: (id, object, accesstoken)=>{\r\n            dispatch(reqUpdateFeature(id, object, accesstoken));\r\n        },\r\n        handleDeleteFeature: (id, accesstoken)=>{\r\n            dispatch(reqDeleteFeature(id, accesstoken));\r\n        },\r\n        loadDataPaging: (pageIndex, pageSize, accesstoken)=>{\r\n            dispatch(reqLoadDataPaging(pageIndex, pageSize, accesstoken));\r\n        },\r\n        countAllFeature: ( accesstoken)=>{\r\n            dispatch(reqCountData( accesstoken));\r\n        },\r\n        handleSearchFeature: (keyword, pageIndex, pageSize, accesstoken)=>{\r\n            dispatch(reqSearchFeature(keyword, pageIndex, pageSize, accesstoken))\r\n        }\r\n\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FeatureManagement));","import React, {Component} from 'react';\r\nimport {Button, Icon, Row,Col} from 'antd';\r\nimport './index.css';\r\nimport 'settings/css/global.scss';\r\n\r\nclass FunctionContent extends Component{\r\n    state={\r\n        fullScreen:true,\r\n        visibled:true,\r\n    }\r\n    onClose = () => { this.setState({ visibled: false, }) };\r\n    showDrawer = () => {  \r\n        this.setState({  visibled: true, },this.props.showDrawerAdd(this.state.visibled)); \r\n        \r\n    };\r\n    setFullScreen=()=>{\r\n        this.setState({fullScreen:true},this.props.handleFullScreenMode(this.state.fullScreen));\r\n    }\r\n    setNotFullScreen=()=>{\r\n        this.setState({fullScreen:false},this.props.handleFullScreenMode(this.state.fullScreen));\r\n    }\r\n    render(){\r\n       \r\n        return(\r\n            <Row className=\"function-bar-wrapper\">\r\n                <Col md={24}>\r\n                    <Button type=\"default\" onClick={this.showDrawer} size=\"small\" className=\"function-btn-left\">\r\n                        <Icon type=\"plus\" theme=\"outlined\" />\r\n                    </Button>\r\n                    <Button type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                        <Icon type=\"close\" theme=\"outlined\" />\r\n                    </Button>\r\n                    {\r\n                        (this.state.fullScreen)?\r\n                        <Button \r\n                            onClick={this.setNotFullScreen}\r\n                            type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                                <Icon type=\"fullscreen\" theme=\"outlined\" />\r\n                        </Button>:\r\n                        <Button \r\n                            onClick={this.setFullScreen}\r\n                            type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                            <Icon type=\"fullscreen-exit\" theme=\"outlined\" />\r\n                        </Button>\r\n                    }\r\n                </Col>\r\n                \r\n            </Row>\r\n        );\r\n    }\r\n\r\n}\r\nexport default FunctionContent;","export const layouts=[\r\n    [\r\n        {\r\n            attrbLayout:'city',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            attrbLayout:'country',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            attrbLayout:'address',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n    ],\r\n   \r\n   \r\n]","import React, {Component} from 'react';\r\nimport FormContent from 'components/ptp__form-layout';\r\nimport {layouts} from '../layout';\r\nimport {Row, Col, Button, Icon} from 'antd';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst edit_view = 0, edit_submit= 1;\r\nclass FormEditContent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            edit:edit_view, \r\n            dataSubmit:{\r\n            },\r\n            location:null,\r\n            id:'',\r\n\r\n        }\r\n    }\r\n\r\n    changeView = () => {\r\n        this.setState({edit: edit_submit});\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.setState({edit: edit_view});\r\n        \r\n        if(values!=='error'){\r\n            const obj= {\r\n                id:'12',\r\n                purchDate: '2018-12-22T09:48:25.350Z'\r\n            }\r\n            this.props.onSubmitAdd({...values, ...obj});\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const { edit,  } = this.state;\r\n        const classNames=\"field-no-radius form-light\";\r\n        const type=\"vertical\";\r\n        const trigger =[\r\n            {\r\n                attrbTrigger:'save',\r\n                render:{\r\n                    type:'BUTTON',\r\n                    size:'default',\r\n                    label:'Lưu lại',\r\n                    icon:'download',\r\n                }\r\n            },  \r\n        ]\r\n        const actions=[\r\n            {\r\n                attrbtn: 'save',\r\n                content: (val) => this.handleSubmit(val)\r\n            },\r\n        ]\r\n        const listFields=[\r\n            {\r\n                attrbField:'city',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    },\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập tên thành phố',\r\n                    label:'Tên thành phố: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'country',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    },\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập quốc gia ',\r\n                    label:'Quốc gia: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'address',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    },\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập địa chỉ ',\r\n                    label:'Địa chỉ: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n           \r\n           \r\n            \r\n        ] \r\n       \r\n        return(\r\n            <Row >\r\n                <Col md={24}>\r\n                    <FormContent\r\n                        layouts={layouts}\r\n                        actions={actions} \r\n                        trigger={trigger} \r\n                        classNames={classNames} \r\n                        type={type} \r\n                        listFields={listFields}\r\n                        submit= {edit}\r\n                        formID= \"addLocation\"\r\n                        mode= \"edit\"\r\n                        handleSubmit= {this.handleSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={24}>\r\n                    <Button onClick={()=>this.changeView()}>\r\n                        <Icon type=\"save\"></Icon> Save\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormEditContent));","import React, {Component} from 'react';\r\nimport FormContent from 'components/ptp__form-layout';\r\nimport {layouts} from '../layout';\r\nimport {Row, Col, Button, Icon} from 'antd';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst edit_view = 0, edit_submit= 1;\r\nclass FormEditContent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            edit:edit_view, \r\n            dataSubmit:{\r\n            },\r\n            id:'',\r\n\r\n        }\r\n    }\r\n\r\n    changeView = () => {\r\n        this.setState({edit: edit_submit});\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.setState({edit: edit_view});\r\n        \r\n        if(values!=='error'){\r\n            const id= this.props.id;\r\n            const obj= {\r\n                id: id,\r\n            }\r\n            this.props.onSubmitEdit( id, {...values, ...obj});\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const { edit,  } = this.state;\r\n        const { location } = this.props;\r\n        console.log(location);\r\n        const classNames=\"field-no-radius form-light\";\r\n        const type=\"vertical\";\r\n        const trigger =[\r\n            {\r\n                attrbTrigger:'save',\r\n                render:{\r\n                    type:'BUTTON',\r\n                    size:'default',\r\n                    label:'Lưu lại',\r\n                    icon:'download',\r\n                }\r\n            },  \r\n        ]\r\n        const actions=[\r\n            {\r\n                attrbtn: 'save',\r\n                content: (val) => this.handleSubmit(val)\r\n            },\r\n        ]\r\n        const listFields=[\r\n            {\r\n                attrbField:'city',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    defaultValue:location.city,\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    }\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập tên thành phố',\r\n                    label:'Tên thành phố: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'country',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    defaultValue:location.country,\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    }\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập quốc gia',\r\n                    label:'Quốc gia: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'address',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    defaultValue:location.address,\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    }\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập địa chỉ',\r\n                    label:'Địa chỉ: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n           \r\n           \r\n            \r\n        ] \r\n       \r\n        return(\r\n            <Row >\r\n                <Col md={24}>\r\n                    <FormContent\r\n                        layouts={layouts}\r\n                        actions={actions} \r\n                        trigger={trigger} \r\n                        classNames={classNames} \r\n                        type={type} \r\n                        listFields={listFields}\r\n                        submit= {edit}\r\n                        formID= \"editLocation\"\r\n                        mode= \"edit\"\r\n                        handleSubmit= {this.handleSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={24}>\r\n                    <Button onClick={()=>this.changeView()}>\r\n                        <Icon type=\"save\"></Icon> Save\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormEditContent));","import callApis from 'utils/callAPI/apiCaller';\r\nimport * as Types from './ActionTypes';\r\n\r\nexport const reqCountData = (accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Location/CountAll/pagesize/pageNow`, 'GET', null, accesstoken).then(res => {\r\n            dispatch(actCountData(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actCountData = (data) => {\r\n    return {\r\n        type: Types.COUNT_DATA,\r\n        data\r\n    }\r\n}\r\nexport const reqSearchLocation = (keyword, pageIndex, pageSize, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Location/PagingCondition/pagesize/pageNow/condition?pagesize=${pageSize}&pageNow=${pageIndex}&condition=${keyword}`, 'GET', null, accesstoken).then(res => {\r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\n\r\nexport const reqLoadDataPaging = (pageIndex,pageSize,accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Location/Paging/pagesize/pageNow?pagesize=${pageSize}&pageNow=${pageIndex}`, 'GET', null, accesstoken).then(res => {\r\n            console.log(res.data);    \r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const reqSearchProduct = (keyword, pageIndex, pageSize, sortLocation, priceStart, priceEnd, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(\r\n        `Location/PagingConditionPrice/condition/pageIndex/pageSize/sortLocation/priceStart/priceEnd?condition=${keyword}&pageIndex=${pageIndex}&pageSize=${pageSize}&sortLocation=${sortLocation}&priceStart=${priceStart}&priceEnd=${priceEnd}`,\r\n         'GET', null, accesstoken).then(res => {\r\n            console.log(res.data);    \r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actLoadDataPaging = (data) => {\r\n    return {\r\n        type: Types.LOAD_LOCATION,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqFindLocation = (id, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Location/GetById/${id}`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actFindLocation(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actFindLocation = (data) => {\r\n    return {\r\n        type: Types.FIND_LOCATION,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqDeleteLocation = (id, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Location/Delete/${id}`, 'DELETE', null, accesstoken).then(res => {\r\n            return callApis(`Location/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actDeleteLocation(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actDeleteLocation = (data) => {\r\n    return {\r\n        type: Types.DELETE_LOCATION,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqUpdateLocation = (id, Location, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Location/Update/${id}`, 'PUT', Location, accesstoken).then(res => {\r\n            return callApis(`Location/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actUpdateLocation(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actUpdateLocation = (data) => {\r\n    return {\r\n        type: Types.UPDATE_LOCATION,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqAddLocation = ( Location, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Location/Create`, 'POST', Location, accesstoken).then(res => {\r\n            console.log(res.data);\r\n            return callApis(`Location/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actAddLocation(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actAddLocation = (data) => {\r\n    return {\r\n        type: Types.ADD_LOCATION,\r\n        data\r\n    }\r\n}\r\n","import React,{Component} from 'react';\r\nimport {Row, Col, Button, Icon, Popover, Avatar, Select, notification,   } from 'antd';\r\nimport './index.css';\r\nimport FunctionbarContent from './function/index';\r\nimport PanelWrapper from 'containers/wrapper/Panel.style';\r\nimport TableContent from 'components/ptp__table/index';\r\n// import TableContent from 'components/table/MyTable';\r\n\r\n// import {demoData} from './list-Location-dumy';\r\nimport DrawerContent from 'components/Drawer/Drawer';\r\nimport FormLocation from './action/add/FormLocation'; \r\nimport FormEditLocation from './action/edit/edit'; \r\n\r\nimport { withRouter, } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {showNotification} from 'components/notification/Notification';\r\nimport {reqLoadDataPaging, reqSearchLocation, reqCountData,\r\n     reqFindLocation, reqDeleteLocation, reqAddLocation, reqUpdateLocation} from 'redux/location/actions';\r\nimport * as CONST_VARIABLE from 'utils/const/index';\r\n\r\nclass LocationManagement extends Component{\r\n    state={\r\n        pageSize:5,\r\n        pageIndex:1,\r\n        fullScreenMode:false,\r\n        \r\n        visibledAdd:false,\r\n        visibledEdit:false,\r\n\r\n        filteredInfo: null,\r\n        sortedInfo: null, \r\n        selectedRowKeys: [],\r\n        pagination:null,\r\n        recordSelected:null,\r\n        data:[],\r\n        idEdit:null\r\n    }\r\n    handleFullScreenMode=(val)=> {\r\n        this.setState(() => {\r\n            return {\r\n                fullScreenMode: val\r\n            };\r\n        });\r\n    }\r\n        \r\n    showDrawerAdd=()=>{ this.setState({visibledAdd:true}) }\r\n    onCloseAdd = () => { this.setState({ visibledAdd: false, }) };\r\n\r\n    showDrawerEdit=(id)=>{ \r\n        this.props.handleFindLocation(id);\r\n        this.setState({visibledEdit:true, idEdit: id});\r\n     }\r\n    onCloseEdit = () => { this.setState({ visibledEdit: false, }) };\r\n\r\n\r\n    onSelectChange = (selectedRowKeys) => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({ selectedRowKeys });\r\n    }\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter,\r\n            pagination: pagination\r\n        });\r\n\r\n    }\r\n\r\n    onRowSelect = (record) => {\r\n        this.setState({recordSelected:record});\r\n    }\r\n\r\n    clearFilters = (attr, name) => {\r\n        const filteredInfo = this.state.filteredInfo;\r\n        let arrayVal = filteredInfo[attr.val];\r\n        let ind = arrayVal.indexOf(name);\r\n        arrayVal.splice(ind, 1);\r\n        let attrFilter ={\r\n            [attr.val]: arrayVal\r\n        }\r\n        const obj= {...filteredInfo, ...attrFilter};\r\n        this.setState({ filteredInfo: obj });\r\n    }\r\n\r\n    clearSorted = () => {\r\n        this.setState({ sortedInfo: null, });\r\n    }\r\n    handleChangeSelectInRow =(value) => {\r\n        console.log(\"change value in rrow: \");\r\n        console.log(value, this.state.recordSelected);\r\n    }\r\n    \r\n    handleOnSearch= (val) =>{\r\n        console.log(this.state.pagination);\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        // console.log(val);\r\n        if(val!==''){\r\n            // this.props.countAllLocation(accesstoken);    \r\n            this.props.handleSearchLocation(val, this.state.pageIndex, this.state.pageSize, accesstoken);\r\n       \r\n        }else{\r\n            const {pageIndex, pageSize}= this.state;\r\n            this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n            this.props.countAllLocation(accesstoken);    \r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentWillMount(){\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        const {pageIndex, pageSize}= this.state;\r\n        this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n        this.props.countAllLocation(accesstoken);\r\n    }\r\n\r\n    componentDidMount(){\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        const {pageIndex, pageSize}= this.state;\r\n        this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n        this.props.countAllLocation(accesstoken);\r\n    }\r\n\r\n    handleSubmit=(obj)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleAddLocation(obj, accesstoken);\r\n        this.onCloseAdd();\r\n        showNotification(\"Thêm thành công\", \"Bạn vừa thực hiện thêm một locaiton!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n    handleDelete=(id)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleDeleteLocation(id, accesstoken);\r\n        showNotification(\"Xóa thành công\", \"Bạn vừa thực hiện xóa một location!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n    handleSubmitEdit=(id, obj)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleUpdateLocation(id, obj, accesstoken);\r\n        this.onCloseEdit();\r\n        this.setState({id:null});\r\n        showNotification(\"Sửa thành công\", \"Bạn vừa thực hiện cập nhật thông tin một location!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n   \r\n    render(){\r\n        let { sortedInfo, filteredInfo } = this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const info = {\r\n            sorted: sortedInfo,\r\n            filtered: filteredInfo\r\n        }\r\n        const columns = [\r\n            {\r\n                title: 'Tên thành phố',\r\n                dataIndex: 'city',\r\n                key: 'city',\r\n                sorter: (a, b) => a.city.length - b.city.length,\r\n                sortlocation: sortedInfo.columnKey === 'city' && sortedInfo.location,\r\n            }, \r\n            {\r\n                title: 'Quốc gia',\r\n                dataIndex: 'country',\r\n                key: 'country',\r\n               \r\n            }, \r\n            {\r\n                title: 'Địa chỉ',\r\n                dataIndex: 'address',\r\n                key: 'address',\r\n               \r\n            }, \r\n           \r\n            {\r\n                title: 'Action',\r\n                align:'center',\r\n                render:(text, record, index)=>{\r\n                    return(\r\n                        <div>\r\n                            <Button onClick={()=>this.showDrawerEdit(text)} className='btn btn-table' icon='edit'></Button>\r\n                            <Button \r\n                                onClick={()=>this.handleDelete(text)} \r\n                                className='btn btn-table' \r\n                                icon='delete'>\r\n                            </Button>\r\n                        </div>\r\n                    );\r\n                },\r\n                dataIndex: 'id',\r\n                key:'id',\r\n                width : 100\r\n               \r\n            },\r\n       ];\r\n        \r\n        const config ={\r\n            table:{\r\n                // blocationed: true\r\n            },\r\n            pagination:{\r\n                defaultPageSize:5,\r\n                total: this.props.numberLocation\r\n            },\r\n        }\r\n        const event={\r\n            table:{\r\n                onChange:this.handleChange,\r\n                clearSorted: this.clearSorted,\r\n                clearFiltered: this.clearFilters,\r\n                onRow: this.onRowSelect,\r\n                onSearch: this.handleOnSearch\r\n            },\r\n            pagination:{\r\n                onChange:\r\n                    (page, pageSize)=>{\r\n                        const accesstoken= sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n                        this.props.loadDataPaging(page, pageSize, accesstoken);\r\n                    },\r\n                onShowSizeChange:\r\n                    (page, pageSize)=>{\r\n                        const accesstoken= sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n                        this.props.loadDataPaging(page, pageSize, accesstoken);\r\n                    }\r\n            }\r\n        }\r\n        const { selectedRowKeys } = this.state;\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n            hideDefaultSelections: true,\r\n            selections: [{\r\n                key: 'all-data',\r\n                text: 'Select All Data',\r\n                onSelect: () => {\r\n                this.setState({\r\n                    selectedRowKeys: [...Array(46).keys()], // 0...45\r\n                });\r\n                },\r\n            }, {\r\n                key: 'odd',\r\n                text: 'Select Odd Row',\r\n                onSelect: (changableRowKeys) => {\r\n                let newSelectedRowKeys = [];\r\n                newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                    if (index % 2 !== 0) {\r\n                    return false;\r\n                    }\r\n                    return true;\r\n                });\r\n                this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                },\r\n            }, {\r\n                key: 'even',\r\n                text: 'Select Even Row',\r\n                onSelect: (changableRowKeys) => {\r\n                let newSelectedRowKeys = [];\r\n                newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                    if (index % 2 !== 0) {\r\n                    return true;\r\n                    }\r\n                    return false;\r\n                });\r\n                this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                },\r\n            }],\r\n            // onSelection: this.onSelection,\r\n        };\r\n\r\n\r\n        var listPropForDrawer={\r\n            styleProps:{\r\n              title:\"Nhập thông tin!\",\r\n              width:420,\r\n              height:'100%',\r\n              maskStyle:{\r\n                  color:'red'\r\n              },\r\n              mask:true,\r\n              maskClosable:true,\r\n              style:{\r\n                  backgroundColor:'#fafafa'\r\n              },\r\n              className:\"ok\",\r\n              zIndex:1,\r\n              placement:\"right\",\r\n              closable:this.state.visibledAdd,\r\n              destroyOnClose:false,\r\n            },\r\n            onClose:this.onCloseAdd,\r\n            visible:this.state.visibledAdd,\r\n            hasButtonFooter:false,\r\n            componentWillShow:(key)=> <FormLocation\r\n                    key={key}\r\n                    onSubmitAdd={this.handleSubmit}\r\n                />,\r\n        }\r\n        var listPropForDrawerEdit={\r\n            styleProps:{\r\n              title:\"Nhập thông tin sửa đổi!\",\r\n              width:420,\r\n              height:'100%',\r\n              maskStyle:{\r\n                  color:'red'\r\n              },\r\n              mask:true,\r\n              maskClosable:true,\r\n              style:{\r\n                  backgroundColor:'#fafafa'\r\n              },\r\n              className:\"ok\",\r\n              zIndex:1,\r\n              placement:\"right\",\r\n              closable:this.state.visibledEdit,\r\n              destroyOnClose:false,\r\n            },\r\n            onClose:this.onCloseEdit,\r\n            visible:this.state.visibledEdit,\r\n            hasButtonFooter:false,\r\n            componentWillShow:(key)=> <FormEditLocation \r\n                key={key}\r\n                id={this.state.idEdit} \r\n                location={this.props.itemLocation} \r\n                onSubmitEdit={this.handleSubmitEdit}\r\n            />,\r\n        }\r\n        console.log(\"adasdasdas\");\r\n        console.log(this.props.itemLocation);\r\n        console.log(\"adasdasdas\");\r\n        return (\r\n            <Row className=\"content_manager_wrapper\" style={{height:'100%'}}>\r\n                <PanelWrapper className={this.state.fullScreenMode ? \"full-screen-mode\" : \"\"}>\r\n                    <FunctionbarContent showDrawerAdd={this.showDrawerAdd} handleFullScreenMode={this.handleFullScreenMode}/>\r\n                    <Col md={24} className=\"table-wrapper\">\r\n                        <TableContent\r\n                            rowSelection={rowSelection}\r\n                            data={this.props.location} \r\n                            columns={columns} \r\n                            config={config} \r\n                            event={event}\r\n                            info={info}\r\n                        />\r\n                        \r\n                    </Col>\r\n                    <DrawerContent \r\n                        key={'addlocation'}\r\n                        styleProps={listPropForDrawer.styleProps} \r\n                        visible={listPropForDrawer.visible} \r\n                        onClose={listPropForDrawer.onClose}\r\n                        hasButtonFooter={listPropForDrawer.hasButtonFooter}    \r\n                        componentWillShow={listPropForDrawer.componentWillShow}\r\n                    />\r\n                    <DrawerContent \r\n                        key={'editlocation'}\r\n                        styleProps={listPropForDrawerEdit.styleProps} \r\n                        visible={listPropForDrawerEdit.visible} \r\n                        onClose={listPropForDrawerEdit.onClose}\r\n                        hasButtonFooter={listPropForDrawerEdit.hasButtonFooter}    \r\n                        componentWillShow={listPropForDrawerEdit.componentWillShow}\r\n                    />\r\n                </PanelWrapper>\r\n\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        location: state.location,\r\n        itemLocation: state.itemLocation,\r\n        numberLocation: state.numberLocation\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        handleAddLocation: (object, accesstoken)=>{\r\n            dispatch(reqAddLocation(object, accesstoken));\r\n        },\r\n        handleFindLocation: (id, accesstoken)=>{\r\n            dispatch(reqFindLocation(id, accesstoken));\r\n        },\r\n        handleUpdateLocation: (id, object, accesstoken)=>{\r\n            dispatch(reqUpdateLocation(id, object, accesstoken));\r\n        },\r\n        handleDeleteLocation: (id, accesstoken)=>{\r\n            dispatch(reqDeleteLocation(id, accesstoken));\r\n        },\r\n        loadDataPaging: (pageIndex, pageSize, accesstoken)=>{\r\n            dispatch(reqLoadDataPaging(pageIndex, pageSize, accesstoken));\r\n        },\r\n        countAllLocation: ( accesstoken)=>{\r\n            dispatch(reqCountData( accesstoken));\r\n        },\r\n        handleSearchLocation: (keyword, pageIndex, pageSize, accesstoken)=>{\r\n            dispatch(reqSearchLocation(keyword, pageIndex, pageSize, accesstoken))\r\n        }\r\n\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LocationManagement));","import React, {Component} from 'react';\r\nimport {Button, Icon, Row,Col} from 'antd';\r\nimport './index.css';\r\nimport 'settings/css/global.scss';\r\n\r\nclass FunctionContent extends Component{\r\n    state={\r\n        fullScreen:true,\r\n        visibled:true,\r\n    }\r\n    onClose = () => { this.setState({ visibled: false, }) };\r\n    showDrawer = () => {  \r\n        this.setState({  visibled: true, },this.props.showDrawerAdd(this.state.visibled)); \r\n        \r\n    };\r\n    setFullScreen=()=>{\r\n        this.setState({fullScreen:true},this.props.handleFullScreenMode(this.state.fullScreen));\r\n    }\r\n    setNotFullScreen=()=>{\r\n        this.setState({fullScreen:false},this.props.handleFullScreenMode(this.state.fullScreen));\r\n    }\r\n    render(){\r\n       \r\n        return(\r\n            <Row className=\"function-bar-wrapper\">\r\n                <Col md={24}>\r\n                    <Button type=\"default\" onClick={this.showDrawer} size=\"small\" className=\"function-btn-left\">\r\n                        <Icon type=\"plus\" theme=\"outlined\" />\r\n                    </Button>\r\n                    <Button type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                        <Icon type=\"close\" theme=\"outlined\" />\r\n                    </Button>\r\n                    {\r\n                        (this.state.fullScreen)?\r\n                        <Button \r\n                            onClick={this.setNotFullScreen}\r\n                            type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                                <Icon type=\"fullscreen\" theme=\"outlined\" />\r\n                        </Button>:\r\n                        <Button \r\n                            onClick={this.setFullScreen}\r\n                            type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                            <Icon type=\"fullscreen-exit\" theme=\"outlined\" />\r\n                        </Button>\r\n                    }\r\n                </Col>\r\n                \r\n            </Row>\r\n        );\r\n    }\r\n\r\n}\r\nexport default FunctionContent;","export const layouts=[\r\n    [\r\n        {\r\n            attrbLayout:'name',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            attrbLayout:'price',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n    ],\r\n   \r\n   \r\n]","import React, {Component} from 'react';\r\nimport FormContent from 'components/ptp__form-layout';\r\nimport {layouts} from '../layout';\r\nimport {Row, Col, Button, Icon} from 'antd';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst edit_view = 0, edit_submit= 1;\r\nclass FormEditContent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            edit:edit_view, \r\n            dataSubmit:{\r\n            },\r\n            feature:null,\r\n            id:'',\r\n\r\n        }\r\n    }\r\n\r\n    changeView = () => {\r\n        this.setState({edit: edit_submit});\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.setState({edit: edit_view});\r\n        \r\n        if(values!=='error'){\r\n            const obj= {\r\n                id:'12',\r\n                purchDate: '2018-12-22T09:48:25.350Z'\r\n            }\r\n            this.props.onSubmitAdd({...values, ...obj});\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const { edit,  } = this.state;\r\n        const classNames=\"field-no-radius form-light\";\r\n        const type=\"vertical\";\r\n        const trigger =[\r\n            {\r\n                attrbTrigger:'save',\r\n                render:{\r\n                    type:'BUTTON',\r\n                    size:'default',\r\n                    label:'Lưu lại',\r\n                    icon:'download',\r\n                }\r\n            },  \r\n        ]\r\n        const actions=[\r\n            {\r\n                attrbtn: 'save',\r\n                content: (val) => this.handleSubmit(val)\r\n            },\r\n        ]\r\n        const listFields=[\r\n            {\r\n                attrbField:'name',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    },\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập tên gói dịch vụ',\r\n                    label:'Tên gói dịch vụ: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'price',\r\n                data:{\r\n                    dataType:'NUMBER',\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    },\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập giá ',\r\n                    label:'Giá: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n           \r\n           \r\n            \r\n        ] \r\n       \r\n        return(\r\n            <Row >\r\n                <Col md={24}>\r\n                    <FormContent\r\n                        layouts={layouts}\r\n                        actions={actions} \r\n                        trigger={trigger} \r\n                        classNames={classNames} \r\n                        type={type} \r\n                        listFields={listFields}\r\n                        submit= {edit}\r\n                        formID= \"addPackages\"\r\n                        mode= \"edit\"\r\n                        handleSubmit= {this.handleSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={24}>\r\n                    <Button onClick={()=>this.changeView()}>\r\n                        <Icon type=\"save\"></Icon> Save\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormEditContent));","import React, {Component} from 'react';\r\nimport FormContent from 'components/ptp__form-layout';\r\nimport {layouts} from '../layout';\r\nimport {Row, Col, Button, Icon} from 'antd';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst edit_view = 0, edit_submit= 1;\r\nclass FormEditContent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            edit:edit_view, \r\n            dataSubmit:{\r\n            },\r\n            id:'',\r\n\r\n        }\r\n    }\r\n\r\n    changeView = () => {\r\n        this.setState({edit: edit_submit});\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.setState({edit: edit_view});\r\n        \r\n        if(values!=='error'){\r\n            const id= this.props.id;\r\n            const obj= {\r\n                id: id,\r\n            }\r\n            this.props.onSubmitEdit( id, {...values, ...obj});\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const { edit,  } = this.state;\r\n        const { packages } = this.props;\r\n        //console.log(feature);\r\n        const classNames=\"field-no-radius form-light\";\r\n        const type=\"vertical\";\r\n        const trigger =[\r\n            {\r\n                attrbTrigger:'save',\r\n                render:{\r\n                    type:'BUTTON',\r\n                    size:'default',\r\n                    label:'Lưu lại',\r\n                    icon:'download',\r\n                }\r\n            },  \r\n        ]\r\n        const actions=[\r\n            {\r\n                attrbtn: 'save',\r\n                content: (val) => this.handleSubmit(val)\r\n            },\r\n        ]\r\n        const listFields=[\r\n            {\r\n                attrbField:'name',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    defaultValue:packages.name,\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    }\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập tên gói dịch vụ',\r\n                    label:'Tên gói: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'price',\r\n                data:{\r\n                    dataType:'NUMBER',\r\n                    defaultValue:packages.price,\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    }\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập giá',\r\n                    label:'Giá: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n           \r\n           \r\n            \r\n        ] \r\n       \r\n        return(\r\n            <Row >\r\n                <Col md={24}>\r\n                    <FormContent\r\n                        layouts={layouts}\r\n                        actions={actions} \r\n                        trigger={trigger} \r\n                        classNames={classNames} \r\n                        type={type} \r\n                        listFields={listFields}\r\n                        submit= {edit}\r\n                        formID= \"editPackages\"\r\n                        mode= \"edit\"\r\n                        handleSubmit= {this.handleSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={24}>\r\n                    <Button onClick={()=>this.changeView()}>\r\n                        <Icon type=\"save\"></Icon> Save\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormEditContent));","import callApis from 'utils/callAPI/apiCaller';\r\nimport * as Types from './ActionTypes';\r\n\r\nexport const reqCountData = (accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Package/CountAll/pagesize/pageNow`, 'GET', null, accesstoken).then(res => {\r\n            dispatch(actCountData(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actCountData = (data) => {\r\n    return {\r\n        type: Types.COUNT_DATA,\r\n        data\r\n    }\r\n}\r\nexport const reqSearchPackage = (keyword, pageIndex, pageSize, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Package/PagingCondition/pagesize/pageNow/condition?pagesize=${pageSize}&pageNow=${pageIndex}&condition=${keyword}`, 'GET', null, accesstoken).then(res => {\r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\n\r\nexport const reqLoadDataPaging = (pageIndex,pageSize,accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Package/Paging/pagesize/pageNow?pagesize=${pageSize}&pageNow=${pageIndex}`, 'GET', null, accesstoken).then(res => {\r\n            console.log(res.data);    \r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const reqSearchProduct = (keyword, pageIndex, pageSize, sortPackage, priceStart, priceEnd, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(\r\n        `Package/PagingConditionPrice/condition/pageIndex/pageSize/sortPackage/priceStart/priceEnd?condition=${keyword}&pageIndex=${pageIndex}&pageSize=${pageSize}&sortPackage=${sortPackage}&priceStart=${priceStart}&priceEnd=${priceEnd}`,\r\n         'GET', null, accesstoken).then(res => {\r\n            console.log(res.data);    \r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actLoadDataPaging = (data) => {\r\n    return {\r\n        type: Types.LOAD_PACKAGE,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqFindPackage = (id, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Package/GetById/${id}`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actFindPackage(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actFindPackage = (data) => {\r\n    return {\r\n        type: Types.FIND_PACKAGE,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqDeletePackage = (id, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Package/Delete/${id}`, 'DELETE', null, accesstoken).then(res => {\r\n            return callApis(`Package/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actDeletePackage(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actDeletePackage = (data) => {\r\n    return {\r\n        type: Types.DELETE_PACKAGE,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqUpdatePackage = (id, Package, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Package/Update/${id}`, 'PUT', Package, accesstoken).then(res => {\r\n            return callApis(`Package/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actUpdatePackage(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actUpdatePackage = (data) => {\r\n    return {\r\n        type: Types.UPDATE_PACKAGE,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqAddPackage = (Package, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Package/Create`, 'POST', Package, accesstoken).then(res => {\r\n            console.log(Package);\r\n            return callApis(`Package/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actAddPackage(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actAddPackage = (data) => {\r\n    return {\r\n        type: Types.ADD_PACKAGE\r\n        ,\r\n        data\r\n    }\r\n}\r\n","import React,{Component} from 'react';\r\nimport {Row, Col, Button, Icon, Popover, Avatar, Select, notification,   } from 'antd';\r\nimport './index.css';\r\nimport FunctionbarContent from './function/index';\r\nimport PanelWrapper from 'containers/wrapper/Panel.style';\r\nimport TableContent from 'components/ptp__table/index';\r\n// import TableContent from 'components/table/MyTable';\r\n\r\n// import {demoData} from './list-Packages-dumy';\r\nimport DrawerContent from 'components/Drawer/Drawer';\r\nimport FormPackages from './action/add/FormPackages'; \r\nimport FormEditPackages from './action/edit/edit'; \r\n\r\nimport { withRouter, } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {showNotification} from 'components/notification/Notification';\r\nimport {reqLoadDataPaging, reqSearchPackage, reqCountData,\r\n     reqFindPackage, reqDeletePackage, reqAddPackage, reqUpdatePackage} from 'redux/packages/actions';\r\nimport * as CONST_VARIABLE from 'utils/const/index';\r\n\r\nclass PackagesManagement extends Component{\r\n    state={\r\n        pageSize:5,\r\n        pageIndex:1,\r\n        fullScreenMode:false,\r\n        \r\n        visibledAdd:false,\r\n        visibledEdit:false,\r\n\r\n        filteredInfo: null,\r\n        sortedInfo: null, \r\n        selectedRowKeys: [],\r\n        pagination:null,\r\n        recordSelected:null,\r\n        data:[],\r\n        idEdit:null\r\n    }\r\n    handleFullScreenMode=(val)=> {\r\n        this.setState(() => {\r\n            return {\r\n                fullScreenMode: val\r\n            };\r\n        });\r\n    }\r\n        \r\n    showDrawerAdd=()=>{ this.setState({visibledAdd:true}) }\r\n    onCloseAdd = () => { this.setState({ visibledAdd: false, }) };\r\n\r\n    showDrawerEdit=(id)=>{ \r\n        this.props.handleFindPackages(id);\r\n        this.setState({visibledEdit:true, idEdit: id});\r\n     }\r\n    onCloseEdit = () => { this.setState({ visibledEdit: false, }) };\r\n\r\n\r\n    onSelectChange = (selectedRowKeys) => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({ selectedRowKeys });\r\n    }\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter,\r\n            pagination: pagination\r\n        });\r\n\r\n    }\r\n\r\n    onRowSelect = (record) => {\r\n        this.setState({recordSelected:record});\r\n    }\r\n\r\n    clearFilters = (attr, name) => {\r\n        const filteredInfo = this.state.filteredInfo;\r\n        let arrayVal = filteredInfo[attr.val];\r\n        let ind = arrayVal.indexOf(name);\r\n        arrayVal.splice(ind, 1);\r\n        let attrFilter ={\r\n            [attr.val]: arrayVal\r\n        }\r\n        const obj= {...filteredInfo, ...attrFilter};\r\n        this.setState({ filteredInfo: obj });\r\n    }\r\n\r\n    clearSorted = () => {\r\n        this.setState({ sortedInfo: null, });\r\n    }\r\n    handleChangeSelectInRow =(value) => {\r\n        console.log(\"change value in rrow: \");\r\n        console.log(value, this.state.recordSelected);\r\n    }\r\n    \r\n    handleOnSearch= (val) =>{\r\n        console.log(this.state.pagination);\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        // console.log(val);\r\n        if(val!==''){\r\n            // this.props.countAllPackages(accesstoken);    \r\n            this.props.handleSearchPackages(val, this.state.pageIndex, this.state.pageSize, accesstoken);\r\n       \r\n        }else{\r\n            const {pageIndex, pageSize}= this.state;\r\n            this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n            this.props.countAllPackages(accesstoken);    \r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentWillMount(){\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        const {pageIndex, pageSize}= this.state;\r\n        this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n        this.props.countAllPackages(accesstoken);\r\n    }\r\n\r\n    componentDidMount(){\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        const {pageIndex, pageSize}= this.state;\r\n        this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n        this.props.countAllPackages(accesstoken);\r\n    }\r\n\r\n    handleSubmit=(obj)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleAddPackages(obj, accesstoken);\r\n        this.onCloseAdd();\r\n        showNotification(\"Thêm thành công\", \"Bạn vừa thực hiện thêm một tính năng!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n    handleDelete=(id)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleDeletePackages(id, accesstoken);\r\n        showNotification(\"Xóa thành công\", \"Bạn vừa thực hiện xóa một tính năng!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n    handleSubmitEdit=(id, obj)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleUpdatePackages(id, obj, accesstoken);\r\n        this.onCloseEdit();\r\n        this.setState({id:null});\r\n        showNotification(\"Sửa thành công\", \"Bạn vừa thực hiện cập nhật thông tin một tính năng!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n   \r\n    render(){\r\n        let { sortedInfo, filteredInfo } = this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const info = {\r\n            sorted: sortedInfo,\r\n            filtered: filteredInfo\r\n        }\r\n        const columns = [\r\n            {\r\n                title: 'Tên gói',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortpackages: sortedInfo.columnKey === 'name' && sortedInfo.packages,\r\n            }, \r\n            {\r\n                title: 'Giá',\r\n                dataIndex: 'price',\r\n                key: 'price',\r\n                defaultSortPackages: 'price',\r\n                sorter: (a, b) => a.typePackages - b.typePackages,\r\n                sortPackages: sortedInfo.columnKey === 'price' && sortedInfo.packages,\r\n            }, \r\n           \r\n            {\r\n                title: 'Action',\r\n                align:'center',\r\n                render:(text, record, index)=>{\r\n                    return(\r\n                        <div>\r\n                            <Button onClick={()=>this.showDrawerEdit(text)} className='btn btn-table' icon='edit'></Button>\r\n                            <Button \r\n                                onClick={()=>this.handleDelete(text)} \r\n                                className='btn btn-table' \r\n                                icon='delete'>\r\n                            </Button>\r\n                        </div>\r\n                    );\r\n                },\r\n                dataIndex: 'id',\r\n                key:'id',\r\n                width : 100\r\n               \r\n            },\r\n       ];\r\n        \r\n        const config ={\r\n            table:{\r\n                // bPackagesed: true\r\n            },\r\n            pagination:{\r\n                defaultPageSize:5,\r\n                total: this.props.numberPackages\r\n            },\r\n        }\r\n        const event={\r\n            table:{\r\n                onChange:this.handleChange,\r\n                clearSorted: this.clearSorted,\r\n                clearFiltered: this.clearFilters,\r\n                onRow: this.onRowSelect,\r\n                onSearch: this.handleOnSearch\r\n            },\r\n            pagination:{\r\n                onChange:\r\n                    (page, pageSize)=>{\r\n                        const accesstoken= sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n                        this.props.loadDataPaging(page, pageSize, accesstoken);\r\n                    },\r\n                onShowSizeChange:\r\n                    (page, pageSize)=>{\r\n                        const accesstoken= sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n                        this.props.loadDataPaging(page, pageSize, accesstoken);\r\n                    }\r\n            }\r\n        }\r\n        const { selectedRowKeys } = this.state;\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n            hideDefaultSelections: true,\r\n            selections: [{\r\n                key: 'all-data',\r\n                text: 'Select All Data',\r\n                onSelect: () => {\r\n                this.setState({\r\n                    selectedRowKeys: [...Array(46).keys()], // 0...45\r\n                });\r\n                },\r\n            }, {\r\n                key: 'odd',\r\n                text: 'Select Odd Row',\r\n                onSelect: (changableRowKeys) => {\r\n                let newSelectedRowKeys = [];\r\n                newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                    if (index % 2 !== 0) {\r\n                    return false;\r\n                    }\r\n                    return true;\r\n                });\r\n                this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                },\r\n            }, {\r\n                key: 'even',\r\n                text: 'Select Even Row',\r\n                onSelect: (changableRowKeys) => {\r\n                let newSelectedRowKeys = [];\r\n                newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                    if (index % 2 !== 0) {\r\n                    return true;\r\n                    }\r\n                    return false;\r\n                });\r\n                this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                },\r\n            }],\r\n            // onSelection: this.onSelection,\r\n        };\r\n\r\n\r\n        var listPropForDrawer={\r\n            styleProps:{\r\n              title:\"Nhập thông tin!\",\r\n              width:420,\r\n              height:'100%',\r\n              maskStyle:{\r\n                  color:'red'\r\n              },\r\n              mask:true,\r\n              maskClosable:true,\r\n              style:{\r\n                  backgroundColor:'#fafafa'\r\n              },\r\n              className:\"ok\",\r\n              zIndex:1,\r\n              placement:\"right\",\r\n              closable:this.state.visibledAdd,\r\n              destroyOnClose:false,\r\n            },\r\n            onClose:this.onCloseAdd,\r\n            visible:this.state.visibledAdd,\r\n            hasButtonFooter:false,\r\n            componentWillShow:(key)=> <FormPackages\r\n                    key={key}\r\n                    onSubmitAdd={this.handleSubmit}\r\n                />,\r\n        }\r\n        var listPropForDrawerEdit={\r\n            styleProps:{\r\n              title:\"Nhập thông tin sửa đổi!\",\r\n              width:420,\r\n              height:'100%',\r\n              maskStyle:{\r\n                  color:'red'\r\n              },\r\n              mask:true,\r\n              maskClosable:true,\r\n              style:{\r\n                  backgroundColor:'#fafafa'\r\n              },\r\n              className:\"ok\",\r\n              zIndex:1,\r\n              placement:\"right\",\r\n              closable:this.state.visibledEdit,\r\n              destroyOnClose:false,\r\n            },\r\n            onClose:this.onCloseEdit,\r\n            visible:this.state.visibledEdit,\r\n            hasButtonFooter:false,\r\n            componentWillShow:(key)=> <FormEditPackages \r\n                key={key}\r\n                id={this.state.idEdit} \r\n                packages={this.props.itemPackages} \r\n                onSubmitEdit={this.handleSubmitEdit}\r\n            />,\r\n        }\r\n        console.log(\"adasdasdas\");\r\n        console.log(this.props.itemPackages);\r\n        console.log(\"adasdasdas\");\r\n        return (\r\n            <Row className=\"content_manager_wrapper\" style={{height:'100%'}}>\r\n                <PanelWrapper className={this.state.fullScreenMode ? \"full-screen-mode\" : \"\"}>\r\n                    <FunctionbarContent showDrawerAdd={this.showDrawerAdd} handleFullScreenMode={this.handleFullScreenMode}/>\r\n                    <Col md={24} className=\"table-wrapper\">\r\n                        <TableContent\r\n                            rowSelection={rowSelection}\r\n                            data={this.props.packages} \r\n                            columns={columns} \r\n                            config={config} \r\n                            event={event}\r\n                            info={info}\r\n                        />\r\n                        \r\n                    </Col>\r\n                    <DrawerContent \r\n                        key={'addpackages'}\r\n                        styleProps={listPropForDrawer.styleProps} \r\n                        visible={listPropForDrawer.visible} \r\n                        onClose={listPropForDrawer.onClose}\r\n                        hasButtonFooter={listPropForDrawer.hasButtonFooter}    \r\n                        componentWillShow={listPropForDrawer.componentWillShow}\r\n                    />\r\n                    <DrawerContent \r\n                        key={'editpackages'}\r\n                        styleProps={listPropForDrawerEdit.styleProps} \r\n                        visible={listPropForDrawerEdit.visible} \r\n                        onClose={listPropForDrawerEdit.onClose}\r\n                        hasButtonFooter={listPropForDrawerEdit.hasButtonFooter}    \r\n                        componentWillShow={listPropForDrawerEdit.componentWillShow}\r\n                    />\r\n                </PanelWrapper>\r\n\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        packages: state.packages,\r\n        itemPackages: state.itemPackages,\r\n        numberPackages: state.numberPackages\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        handleAddPackages: (object, accesstoken)=>{\r\n            dispatch(reqAddPackage(object, accesstoken));\r\n        },\r\n        handleFindPackages: (id, accesstoken)=>{\r\n            dispatch(reqFindPackage(id, accesstoken));\r\n        },\r\n        handleUpdatePackages: (id, object, accesstoken)=>{\r\n            dispatch(reqUpdatePackage(id, object, accesstoken));\r\n        },\r\n        handleDeletePackages: (id, accesstoken)=>{\r\n            dispatch(reqDeletePackage(id, accesstoken));\r\n        },\r\n        loadDataPaging: (pageIndex, pageSize, accesstoken)=>{\r\n            dispatch(reqLoadDataPaging(pageIndex, pageSize, accesstoken));\r\n        },\r\n        countAllPackages: ( accesstoken)=>{\r\n            dispatch(reqCountData( accesstoken));\r\n        },\r\n        handleSearchPackages: (keyword, pageIndex, pageSize, accesstoken)=>{\r\n            dispatch(reqSearchPackage(keyword, pageIndex, pageSize, accesstoken))\r\n        }\r\n\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PackagesManagement));","import React, {Component} from 'react';\r\nimport {Button, Icon, Row,Col} from 'antd';\r\nimport './index.css';\r\nimport 'settings/css/global.scss';\r\n\r\nclass FunctionContent extends Component{\r\n    state={\r\n        fullScreen:true,\r\n        visibled:true,\r\n    }\r\n    onClose = () => { this.setState({ visibled: false, }) };\r\n    showDrawer = () => {  \r\n        this.setState({  visibled: true, },this.props.showDrawerAdd(this.state.visibled)); \r\n        \r\n    };\r\n    setFullScreen=()=>{\r\n        this.setState({fullScreen:true},this.props.handleFullScreenMode(this.state.fullScreen));\r\n    }\r\n    setNotFullScreen=()=>{\r\n        this.setState({fullScreen:false},this.props.handleFullScreenMode(this.state.fullScreen));\r\n    }\r\n    render(){\r\n       \r\n        return(\r\n            <Row className=\"function-bar-wrapper\">\r\n                <Col md={24}>\r\n                    <Button type=\"default\" onClick={this.showDrawer} size=\"small\" className=\"function-btn-left\">\r\n                        <Icon type=\"plus\" theme=\"outlined\" />\r\n                    </Button>\r\n                    <Button type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                        <Icon type=\"close\" theme=\"outlined\" />\r\n                    </Button>\r\n                    {\r\n                        (this.state.fullScreen)?\r\n                        <Button \r\n                            onClick={this.setNotFullScreen}\r\n                            type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                                <Icon type=\"fullscreen\" theme=\"outlined\" />\r\n                        </Button>:\r\n                        <Button \r\n                            onClick={this.setFullScreen}\r\n                            type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                            <Icon type=\"fullscreen-exit\" theme=\"outlined\" />\r\n                        </Button>\r\n                    }\r\n                </Col>\r\n                \r\n            </Row>\r\n        );\r\n    }\r\n\r\n}\r\nexport default FunctionContent;","export const layouts=[\r\n    [\r\n        {\r\n            attrbLayout:'namePayments',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            attrbLayout:'description',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n    ],\r\n   \r\n   \r\n]","import React, {Component} from 'react';\r\nimport FormContent from 'components/ptp__form-layout';\r\nimport {layouts} from '../layout';\r\nimport {Row, Col, Button, Icon} from 'antd';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst edit_view = 0, edit_submit= 1;\r\nclass FormEditContent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            edit:edit_view, \r\n            dataSubmit:{\r\n            },\r\n            payment:null,\r\n            id:'',\r\n\r\n        }\r\n    }\r\n\r\n    changeView = () => {\r\n        this.setState({edit: edit_submit});\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.setState({edit: edit_view});\r\n        \r\n        if(values!=='error'){\r\n            const obj= {\r\n                id:'12',\r\n                purchDate: '2018-12-22T09:48:25.350Z'\r\n            }\r\n            this.props.onSubmitAdd({...values, ...obj});\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const { edit,  } = this.state;\r\n        const classNames=\"field-no-radius form-light\";\r\n        const type=\"vertical\";\r\n        const trigger =[\r\n            {\r\n                attrbTrigger:'save',\r\n                render:{\r\n                    type:'BUTTON',\r\n                    size:'default',\r\n                    label:'Lưu lại',\r\n                    icon:'download',\r\n                }\r\n            },  \r\n        ]\r\n        const actions=[\r\n            {\r\n                attrbtn: 'save',\r\n                content: (val) => this.handleSubmit(val)\r\n            },\r\n        ]\r\n        const listFields=[\r\n            {\r\n                attrbField:'namePayments',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    },\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập tên gói thanh toán',\r\n                    label:'Tên gói thanh toán: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'description',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    },\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập mô tả ',\r\n                    label:'Mô tả: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n           \r\n           \r\n            \r\n        ] \r\n       \r\n        return(\r\n            <Row >\r\n                <Col md={24}>\r\n                    <FormContent\r\n                        layouts={layouts}\r\n                        actions={actions} \r\n                        trigger={trigger} \r\n                        classNames={classNames} \r\n                        type={type} \r\n                        listFields={listFields}\r\n                        submit= {edit}\r\n                        formID= \"addPayment\"\r\n                        mode= \"edit\"\r\n                        handleSubmit= {this.handleSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={24}>\r\n                    <Button onClick={()=>this.changeView()}>\r\n                        <Icon type=\"save\"></Icon> Save\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormEditContent));","import React, {Component} from 'react';\r\nimport FormContent from 'components/ptp__form-layout';\r\nimport {layouts} from '../layout';\r\nimport {Row, Col, Button, Icon} from 'antd';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst edit_view = 0, edit_submit= 1;\r\nclass FormEditContent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            edit:edit_view, \r\n            dataSubmit:{\r\n            },\r\n            id:'',\r\n\r\n        }\r\n    }\r\n\r\n    changeView = () => {\r\n        this.setState({edit: edit_submit});\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.setState({edit: edit_view});\r\n        \r\n        if(values!=='error'){\r\n            const id= this.props.id;\r\n            const obj= {\r\n                id: id,\r\n            }\r\n            this.props.onSubmitEdit( id, {...values, ...obj});\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const { edit,  } = this.state;\r\n        const { payment } = this.props;\r\n        //console.log(feature);\r\n        const classNames=\"field-no-radius form-light\";\r\n        const type=\"vertical\";\r\n        const trigger =[\r\n            {\r\n                attrbTrigger:'save',\r\n                render:{\r\n                    type:'BUTTON',\r\n                    size:'default',\r\n                    label:'Lưu lại',\r\n                    icon:'download',\r\n                }\r\n            },  \r\n        ]\r\n        const actions=[\r\n            {\r\n                attrbtn: 'save',\r\n                content: (val) => this.handleSubmit(val)\r\n            },\r\n        ]\r\n        const listFields=[\r\n            {\r\n                attrbField:'namePayments',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    defaultValue:payment.namePayments,\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    }\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập tên thanh toán',\r\n                    label:'Tên thanh toán: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'description',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    defaultValue:payment.description,\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    }\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập mô tả',\r\n                    label:'Mô tả: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n           \r\n           \r\n            \r\n        ] \r\n       \r\n        return(\r\n            <Row >\r\n                <Col md={24}>\r\n                    <FormContent\r\n                        layouts={layouts}\r\n                        actions={actions} \r\n                        trigger={trigger} \r\n                        classNames={classNames} \r\n                        type={type} \r\n                        listFields={listFields}\r\n                        submit= {edit}\r\n                        formID= \"editPayment\"\r\n                        mode= \"edit\"\r\n                        handleSubmit= {this.handleSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={24}>\r\n                    <Button onClick={()=>this.changeView()}>\r\n                        <Icon type=\"save\"></Icon> Save\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormEditContent));","import callApis from 'utils/callAPI/apiCaller';\r\nimport * as Types from './ActionTypes';\r\n\r\nexport const reqCountData = (accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Payment/CountAll/pagesize/pageNow`, 'GET', null, accesstoken).then(res => {\r\n            dispatch(actCountData(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actCountData = (data) => {\r\n    return {\r\n        type: Types.COUNT_DATA,\r\n        data\r\n    }\r\n}\r\nexport const reqSearchPayment = (keyword, pageIndex, pageSize, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Payment/PagingCondition/pagesize/pageNow/condition?pagesize=${pageSize}&pageNow=${pageIndex}&condition=${keyword}`, 'GET', null, accesstoken).then(res => {\r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\n\r\nexport const reqLoadDataPaging = (pageIndex,pageSize,accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Payment/Paging/pagesize/pageNow?pagesize=${pageSize}&pageNow=${pageIndex}`, 'GET', null, accesstoken).then(res => {\r\n            console.log(res.data);    \r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const reqSearchProduct = (keyword, pageIndex, pageSize, sortPayment, priceStart, priceEnd, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(\r\n        `Payment/PagingConditionPrice/condition/pageIndex/pageSize/sortPayment/priceStart/priceEnd?condition=${keyword}&pageIndex=${pageIndex}&pageSize=${pageSize}&sortPayment=${sortPayment}&priceStart=${priceStart}&priceEnd=${priceEnd}`,\r\n         'GET', null, accesstoken).then(res => {\r\n            console.log(res.data);    \r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actLoadDataPaging = (data) => {\r\n    return {\r\n        type: Types.LOAD_PAYMENT,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqFindPayment = (id, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Payment/GetById/${id}`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actFindPayment(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actFindPayment = (data) => {\r\n    return {\r\n        type: Types.FIND_PAYMENT,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqDeletePayment = (id, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Payment/Delete/${id}`, 'DELETE', null, accesstoken).then(res => {\r\n            return callApis(`Payment/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actDeletePayment(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actDeletePayment = (data) => {\r\n    return {\r\n        type: Types.DELETE_PAYMENT,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqUpdatePayment = (id, Payment, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Payment/Update/${id}`, 'PUT', Payment, accesstoken).then(res => {\r\n            return callApis(`Payment/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actUpdatePayment(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actUpdatePayment = (data) => {\r\n    return {\r\n        type: Types.UPDATE_PAYMENT,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqAddPayment = (Payment, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Payment/Create`, 'POST', Payment, accesstoken).then(res => {\r\n            console.log(Payment);\r\n            return callApis(`Payment/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actAddPayment(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actAddPayment = (data) => {\r\n    return {\r\n        type: Types.ADD_PAYMENT,\r\n        data\r\n    }\r\n}\r\n","import React,{Component} from 'react';\r\nimport {Row, Col, Button, Icon, Popover, Avatar, Select, notification,   } from 'antd';\r\nimport './index.css';\r\nimport FunctionbarContent from './function/index';\r\nimport PanelWrapper from 'containers/wrapper/Panel.style';\r\nimport TableContent from 'components/ptp__table/index';\r\n// import TableContent from 'components/table/MyTable';\r\n\r\n// import {demoData} from './list-Payment-dumy';\r\nimport DrawerContent from 'components/Drawer/Drawer';\r\nimport FormPayment from './action/add/FormPayment'; \r\nimport FormEditPayment from './action/edit/edit'; \r\n\r\nimport { withRouter, } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {showNotification} from 'components/notification/Notification';\r\nimport {reqLoadDataPaging, reqSearchPayment, reqCountData,\r\n     reqFindPayment, reqDeletePayment, reqAddPayment, reqUpdatePayment} from 'redux/payment/actions';\r\nimport * as CONST_VARIABLE from 'utils/const/index';\r\n\r\nclass PaymentManagement extends Component{\r\n    state={\r\n        pageSize:5,\r\n        pageIndex:1,\r\n        fullScreenMode:false,\r\n        \r\n        visibledAdd:false,\r\n        visibledEdit:false,\r\n\r\n        filteredInfo: null,\r\n        sortedInfo: null, \r\n        selectedRowKeys: [],\r\n        pagination:null,\r\n        recordSelected:null,\r\n        data:[],\r\n        idEdit:null\r\n    }\r\n    handleFullScreenMode=(val)=> {\r\n        this.setState(() => {\r\n            return {\r\n                fullScreenMode: val\r\n            };\r\n        });\r\n    }\r\n        \r\n    showDrawerAdd=()=>{ this.setState({visibledAdd:true}) }\r\n    onCloseAdd = () => { this.setState({ visibledAdd: false, }) };\r\n\r\n    showDrawerEdit=(id)=>{ \r\n        this.props.handleFindPayment(id);\r\n        this.setState({visibledEdit:true, idEdit: id});\r\n     }\r\n    onCloseEdit = () => { this.setState({ visibledEdit: false, }) };\r\n\r\n\r\n    onSelectChange = (selectedRowKeys) => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({ selectedRowKeys });\r\n    }\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter,\r\n            pagination: pagination\r\n        });\r\n\r\n    }\r\n\r\n    onRowSelect = (record) => {\r\n        this.setState({recordSelected:record});\r\n    }\r\n\r\n    clearFilters = (attr, name) => {\r\n        const filteredInfo = this.state.filteredInfo;\r\n        let arrayVal = filteredInfo[attr.val];\r\n        let ind = arrayVal.indexOf(name);\r\n        arrayVal.splice(ind, 1);\r\n        let attrFilter ={\r\n            [attr.val]: arrayVal\r\n        }\r\n        const obj= {...filteredInfo, ...attrFilter};\r\n        this.setState({ filteredInfo: obj });\r\n    }\r\n\r\n    clearSorted = () => {\r\n        this.setState({ sortedInfo: null, });\r\n    }\r\n    handleChangeSelectInRow =(value) => {\r\n        console.log(\"change value in rrow: \");\r\n        console.log(value, this.state.recordSelected);\r\n    }\r\n    \r\n    handleOnSearch= (val) =>{\r\n        console.log(this.state.pagination);\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        // console.log(val);\r\n        if(val!==''){\r\n            // this.props.countAllPayment(accesstoken);    \r\n            this.props.handleSearchPayment(val, this.state.pageIndex, this.state.pageSize, accesstoken);\r\n       \r\n        }else{\r\n            const {pageIndex, pageSize}= this.state;\r\n            this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n            this.props.countAllPayment(accesstoken);    \r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentWillMount(){\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        const {pageIndex, pageSize}= this.state;\r\n        this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n        this.props.countAllPayment(accesstoken);\r\n    }\r\n\r\n    componentDidMount(){\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        const {pageIndex, pageSize}= this.state;\r\n        this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n        this.props.countAllPayment(accesstoken);\r\n    }\r\n\r\n    handleSubmit=(obj)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleAddPayment(obj, accesstoken);\r\n        this.onCloseAdd();\r\n        showNotification(\"Thêm thành công\", \"Bạn vừa thực hiện thêm một payment!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n    handleDelete=(id)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleDeletePayment(id, accesstoken);\r\n        showNotification(\"Xóa thành công\", \"Bạn vừa thực hiện xóa một payment!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n    handleSubmitEdit=(id, obj)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleUpdatePayment(id, obj, accesstoken);\r\n        this.onCloseEdit();\r\n        this.setState({id:null});\r\n        showNotification(\"Sửa thành công\", \"Bạn vừa thực hiện cập nhật thông tin một payment!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n   \r\n    render(){\r\n        let { sortedInfo, filteredInfo } = this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const info = {\r\n            sorted: sortedInfo,\r\n            filtered: filteredInfo\r\n        }\r\n        const columns = [\r\n            {\r\n                title: 'Tên payment',\r\n                dataIndex: 'namePayments',\r\n                key: 'namePayments',\r\n                sorter: (a, b) => a.namePayments.length - b.namePayments.length,\r\n                sortpayment: sortedInfo.columnKey === 'namePayments' && sortedInfo.payment,\r\n            }, \r\n            {\r\n                title: 'Mô tả',\r\n                dataIndex: 'description',\r\n                key: 'description',\r\n                defaultSortPayment: 'description',\r\n                sorter: (a, b) => a.typePayment - b.typePayment,\r\n                sortPayment: sortedInfo.columnKey === 'description' && sortedInfo.payment,\r\n            }, \r\n           \r\n            {\r\n                title: 'Action',\r\n                align:'center',\r\n                render:(text, record, index)=>{\r\n                    return(\r\n                        <div>\r\n                            <Button onClick={()=>this.showDrawerEdit(text)} className='btn btn-table' icon='edit'></Button>\r\n                            <Button \r\n                                onClick={()=>this.handleDelete(text)} \r\n                                className='btn btn-table' \r\n                                icon='delete'>\r\n                            </Button>\r\n                        </div>\r\n                    );\r\n                },\r\n                dataIndex: 'id',\r\n                key:'id',\r\n                width : 100\r\n               \r\n            },\r\n       ];\r\n        \r\n        const config ={\r\n            table:{\r\n                // bpaymented: true\r\n            },\r\n            pagination:{\r\n                defaultPageSize:5,\r\n                total: this.props.numberPayment\r\n            },\r\n        }\r\n        const event={\r\n            table:{\r\n                onChange:this.handleChange,\r\n                clearSorted: this.clearSorted,\r\n                clearFiltered: this.clearFilters,\r\n                onRow: this.onRowSelect,\r\n                onSearch: this.handleOnSearch\r\n            },\r\n            pagination:{\r\n                onChange:\r\n                    (page, pageSize)=>{\r\n                        const accesstoken= sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n                        this.props.loadDataPaging(page, pageSize, accesstoken);\r\n                    },\r\n                onShowSizeChange:\r\n                    (page, pageSize)=>{\r\n                        const accesstoken= sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n                        this.props.loadDataPaging(page, pageSize, accesstoken);\r\n                    }\r\n            }\r\n        }\r\n        const { selectedRowKeys } = this.state;\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n            hideDefaultSelections: true,\r\n            selections: [{\r\n                key: 'all-data',\r\n                text: 'Select All Data',\r\n                onSelect: () => {\r\n                this.setState({\r\n                    selectedRowKeys: [...Array(46).keys()], // 0...45\r\n                });\r\n                },\r\n            }, {\r\n                key: 'odd',\r\n                text: 'Select Odd Row',\r\n                onSelect: (changableRowKeys) => {\r\n                let newSelectedRowKeys = [];\r\n                newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                    if (index % 2 !== 0) {\r\n                    return false;\r\n                    }\r\n                    return true;\r\n                });\r\n                this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                },\r\n            }, {\r\n                key: 'even',\r\n                text: 'Select Even Row',\r\n                onSelect: (changableRowKeys) => {\r\n                let newSelectedRowKeys = [];\r\n                newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                    if (index % 2 !== 0) {\r\n                    return true;\r\n                    }\r\n                    return false;\r\n                });\r\n                this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                },\r\n            }],\r\n            // onSelection: this.onSelection,\r\n        };\r\n\r\n\r\n        var listPropForDrawer={\r\n            styleProps:{\r\n              title:\"Nhập thông tin!\",\r\n              width:420,\r\n              height:'100%',\r\n              maskStyle:{\r\n                  color:'red'\r\n              },\r\n              mask:true,\r\n              maskClosable:true,\r\n              style:{\r\n                  backgroundColor:'#fafafa'\r\n              },\r\n              className:\"ok\",\r\n              zIndex:1,\r\n              placement:\"right\",\r\n              closable:this.state.visibledAdd,\r\n              destroyOnClose:false,\r\n            },\r\n            onClose:this.onCloseAdd,\r\n            visible:this.state.visibledAdd,\r\n            hasButtonFooter:false,\r\n            componentWillShow:(key)=> <FormPayment\r\n                    key={key}\r\n                    onSubmitAdd={this.handleSubmit}\r\n                />,\r\n        }\r\n        var listPropForDrawerEdit={\r\n            styleProps:{\r\n              title:\"Nhập thông tin sửa đổi!\",\r\n              width:420,\r\n              height:'100%',\r\n              maskStyle:{\r\n                  color:'red'\r\n              },\r\n              mask:true,\r\n              maskClosable:true,\r\n              style:{\r\n                  backgroundColor:'#fafafa'\r\n              },\r\n              className:\"ok\",\r\n              zIndex:1,\r\n              placement:\"right\",\r\n              closable:this.state.visibledEdit,\r\n              destroyOnClose:false,\r\n            },\r\n            onClose:this.onCloseEdit,\r\n            visible:this.state.visibledEdit,\r\n            hasButtonFooter:false,\r\n            componentWillShow:(key)=> <FormEditPayment \r\n                key={key}\r\n                id={this.state.idEdit} \r\n                payment={this.props.itemPayment} \r\n                onSubmitEdit={this.handleSubmitEdit}\r\n            />,\r\n        }\r\n        console.log(\"adasdasdas\");\r\n        console.log(this.props.itemPayment);\r\n        console.log(\"adasdasdas\");\r\n        return (\r\n            <Row className=\"content_manager_wrapper\" style={{height:'100%'}}>\r\n                <PanelWrapper className={this.state.fullScreenMode ? \"full-screen-mode\" : \"\"}>\r\n                    <FunctionbarContent showDrawerAdd={this.showDrawerAdd} handleFullScreenMode={this.handleFullScreenMode}/>\r\n                    <Col md={24} className=\"table-wrapper\">\r\n                        <TableContent\r\n                            rowSelection={rowSelection}\r\n                            data={this.props.payment} \r\n                            columns={columns} \r\n                            config={config} \r\n                            event={event}\r\n                            info={info}\r\n                        />\r\n                        \r\n                    </Col>\r\n                    <DrawerContent \r\n                        key={'addpayment'}\r\n                        styleProps={listPropForDrawer.styleProps} \r\n                        visible={listPropForDrawer.visible} \r\n                        onClose={listPropForDrawer.onClose}\r\n                        hasButtonFooter={listPropForDrawer.hasButtonFooter}    \r\n                        componentWillShow={listPropForDrawer.componentWillShow}\r\n                    />\r\n                    <DrawerContent \r\n                        key={'editpayment'}\r\n                        styleProps={listPropForDrawerEdit.styleProps} \r\n                        visible={listPropForDrawerEdit.visible} \r\n                        onClose={listPropForDrawerEdit.onClose}\r\n                        hasButtonFooter={listPropForDrawerEdit.hasButtonFooter}    \r\n                        componentWillShow={listPropForDrawerEdit.componentWillShow}\r\n                    />\r\n                </PanelWrapper>\r\n\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        payment: state.payment,\r\n        itemPayment: state.itemPayment,\r\n        numberPayment: state.numberPayment\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        handleAddPayment: (object, accesstoken)=>{\r\n            dispatch(reqAddPayment(object, accesstoken));\r\n        },\r\n        handleFindPayment: (id, accesstoken)=>{\r\n            dispatch(reqFindPayment(id, accesstoken));\r\n        },\r\n        handleUpdatePayment: (id, object, accesstoken)=>{\r\n            dispatch(reqUpdatePayment(id, object, accesstoken));\r\n        },\r\n        handleDeletePayment: (id, accesstoken)=>{\r\n            dispatch(reqDeletePayment(id, accesstoken));\r\n        },\r\n        loadDataPaging: (pageIndex, pageSize, accesstoken)=>{\r\n            dispatch(reqLoadDataPaging(pageIndex, pageSize, accesstoken));\r\n        },\r\n        countAllPayment: ( accesstoken)=>{\r\n            dispatch(reqCountData( accesstoken));\r\n        },\r\n        handleSearchPayment: (keyword, pageIndex, pageSize, accesstoken)=>{\r\n            dispatch(reqSearchPayment(keyword, pageIndex, pageSize, accesstoken))\r\n        }\r\n\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PaymentManagement));","import React, {Component} from 'react';\r\nimport {Button, Icon, Row,Col} from 'antd';\r\nimport './index.css';\r\nimport 'settings/css/global.scss';\r\n\r\nclass FunctionContent extends Component{\r\n    state={\r\n        fullScreen:true,\r\n        visibled:true,\r\n    }\r\n    onClose = () => { this.setState({ visibled: false, }) };\r\n    showDrawer = () => {  \r\n        this.setState({  visibled: true, },this.props.showDrawerAdd(this.state.visibled)); \r\n        \r\n    };\r\n    setFullScreen=()=>{\r\n        this.setState({fullScreen:true},this.props.handleFullScreenMode(this.state.fullScreen));\r\n    }\r\n    setNotFullScreen=()=>{\r\n        this.setState({fullScreen:false},this.props.handleFullScreenMode(this.state.fullScreen));\r\n    }\r\n    render(){\r\n       \r\n        return(\r\n            <Row className=\"function-bar-wrapper\">\r\n                <Col md={24}>\r\n                    <Button type=\"default\" onClick={this.showDrawer} size=\"small\" className=\"function-btn-left\">\r\n                        <Icon type=\"plus\" theme=\"outlined\" />\r\n                    </Button>\r\n                    <Button type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                        <Icon type=\"close\" theme=\"outlined\" />\r\n                    </Button>\r\n                    {\r\n                        (this.state.fullScreen)?\r\n                        <Button \r\n                            onClick={this.setNotFullScreen}\r\n                            type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                                <Icon type=\"fullscreen\" theme=\"outlined\" />\r\n                        </Button>:\r\n                        <Button \r\n                            onClick={this.setFullScreen}\r\n                            type=\"default\" size=\"small\" className=\"function-btn-right\">\r\n                            <Icon type=\"fullscreen-exit\" theme=\"outlined\" />\r\n                        </Button>\r\n                    }\r\n                </Col>\r\n                \r\n            </Row>\r\n        );\r\n    }\r\n\r\n}\r\nexport default FunctionContent;","export const layouts=[\r\n    [\r\n        {\r\n            attrbLayout:'name',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            attrbLayout:'description',\r\n            width:{\r\n                sm:24,  md:24, lg:24, xl:24,  xxl:24,\r\n            }\r\n        },\r\n    ],\r\n   \r\n   \r\n]","import React, {Component} from 'react';\r\nimport FormContent from 'components/ptp__form-layout';\r\nimport {layouts} from '../layout';\r\nimport {Row, Col, Button, Icon} from 'antd';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst edit_view = 0, edit_submit= 1;\r\nclass FormEditContent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            edit:edit_view, \r\n            dataSubmit:{\r\n            },\r\n            procedure:null,\r\n            id:'',\r\n\r\n        }\r\n    }\r\n\r\n    changeView = () => {\r\n        this.setState({edit: edit_submit});\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.setState({edit: edit_view});\r\n        \r\n        if(values!=='error'){\r\n            const obj= {\r\n                id:'12',\r\n                purchDate: '2018-12-22T09:48:25.350Z'\r\n            }\r\n            this.props.onSubmitAdd({...values, ...obj});\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const { edit,  } = this.state;\r\n        const classNames=\"field-no-radius form-light\";\r\n        const type=\"vertical\";\r\n        const trigger =[\r\n            {\r\n                attrbTrigger:'save',\r\n                render:{\r\n                    type:'BUTTON',\r\n                    size:'default',\r\n                    label:'Lưu lại',\r\n                    icon:'download',\r\n                }\r\n            },  \r\n        ]\r\n        const actions=[\r\n            {\r\n                attrbtn: 'save',\r\n                content: (val) => this.handleSubmit(val)\r\n            },\r\n        ]\r\n        const listFields=[\r\n            {\r\n                attrbField:'name',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    },\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập tên thủ tục',\r\n                    label:'Tên thủ tục: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'description',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    },\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập mô tả ',\r\n                    label:'Mô tả: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n           \r\n           \r\n            \r\n        ] \r\n       \r\n        return(\r\n            <Row >\r\n                <Col md={24}>\r\n                    <FormContent\r\n                        layouts={layouts}\r\n                        actions={actions} \r\n                        trigger={trigger} \r\n                        classNames={classNames} \r\n                        type={type} \r\n                        listFields={listFields}\r\n                        submit= {edit}\r\n                        formID= \"addProcedure\"\r\n                        mode= \"edit\"\r\n                        handleSubmit= {this.handleSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={24}>\r\n                    <Button onClick={()=>this.changeView()}>\r\n                        <Icon type=\"save\"></Icon> Save\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormEditContent));","import React, {Component} from 'react';\r\nimport FormContent from 'components/ptp__form-layout';\r\nimport {layouts} from '../layout';\r\nimport {Row, Col, Button, Icon} from 'antd';\r\nimport { withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst edit_view = 0, edit_submit= 1;\r\nclass FormEditContent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            edit:edit_view, \r\n            dataSubmit:{\r\n            },\r\n            id:'',\r\n\r\n        }\r\n    }\r\n\r\n    changeView = () => {\r\n        this.setState({edit: edit_submit});\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.setState({edit: edit_view});\r\n        \r\n        if(values!=='error'){\r\n            const id= this.props.id;\r\n            const obj= {\r\n                id: id,\r\n            }\r\n            this.props.onSubmitEdit( id, {...values, ...obj});\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const { edit,  } = this.state;\r\n        const { procedure } = this.props;\r\n        console.log(procedure);\r\n        const classNames=\"field-no-radius form-light\";\r\n        const type=\"vertical\";\r\n        const trigger =[\r\n            {\r\n                attrbTrigger:'save',\r\n                render:{\r\n                    type:'BUTTON',\r\n                    size:'default',\r\n                    label:'Lưu lại',\r\n                    icon:'download',\r\n                }\r\n            },  \r\n        ]\r\n        const actions=[\r\n            {\r\n                attrbtn: 'save',\r\n                content: (val) => this.handleSubmit(val)\r\n            },\r\n        ]\r\n        const listFields=[\r\n            {\r\n                attrbField:'name',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    defaultValue:procedure.name,\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    }\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập tên thủ tục',\r\n                    label:'Tên thủ tục: ',\r\n\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n            {\r\n                attrbField:'description',\r\n                data:{\r\n                    dataType:'TEXT',\r\n                    defaultValue:procedure.description,\r\n                    validation:{\r\n                        rules: [\r\n                            {\r\n                              required: true,\r\n                              message: 'Trường dữ liệu này là bắt buộc!!!'\r\n                            }\r\n                        ],\r\n                    }\r\n                },\r\n                render:{\r\n                    placeholder:'Vui lòng nhập mô tả',\r\n                    label:'Mô tả: ',\r\n                },\r\n                action:{\r\n                }\r\n            },\r\n           \r\n           \r\n            \r\n        ] \r\n       \r\n        return(\r\n            <Row >\r\n                <Col md={24}>\r\n                    <FormContent\r\n                        layouts={layouts}\r\n                        actions={actions} \r\n                        trigger={trigger} \r\n                        classNames={classNames} \r\n                        type={type} \r\n                        listFields={listFields}\r\n                        submit= {edit}\r\n                        formID= \"editProcedure\"\r\n                        mode= \"edit\"\r\n                        handleSubmit= {this.handleSubmit}\r\n                    />\r\n                </Col>\r\n                <Col md={24}>\r\n                    <Button onClick={()=>this.changeView()}>\r\n                        <Icon type=\"save\"></Icon> Save\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormEditContent));","import callApis from 'utils/callAPI/apiCaller';\r\nimport * as Types from './ActionTypes';\r\n\r\nexport const reqCountData = (accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Procedure/CountAll/pagesize/pageNow`, 'GET', null, accesstoken).then(res => {\r\n            dispatch(actCountData(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actCountData = (data) => {\r\n    return {\r\n        type: Types.COUNT_DATA,\r\n        data\r\n    }\r\n}\r\nexport const reqSearchProcedure = (keyword, pageIndex, pageSize, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Procedure/PagingCondition/pagesize/pageNow/condition?pagesize=${pageSize}&pageNow=${pageIndex}&condition=${keyword}`, 'GET', null, accesstoken).then(res => {\r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\n\r\nexport const reqLoadDataPaging = (pageIndex,pageSize,accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Procedure/Paging/pagesize/pageNow?pagesize=${pageSize}&pageNow=${pageIndex}`, 'GET', null, accesstoken).then(res => {\r\n            console.log(res.data);    \r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const reqSearchProduct = (keyword, pageIndex, pageSize, sortProcedure, priceStart, priceEnd, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(\r\n        `Procedure/PagingConditionPrice/condition/pageIndex/pageSize/sortProcedure/priceStart/priceEnd?condition=${keyword}&pageIndex=${pageIndex}&pageSize=${pageSize}&sortProcedure=${sortProcedure}&priceStart=${priceStart}&priceEnd=${priceEnd}`,\r\n         'GET', null, accesstoken).then(res => {\r\n            console.log(res.data);    \r\n            dispatch(actLoadDataPaging(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actLoadDataPaging = (data) => {\r\n    return {\r\n        type: Types.LOAD_PROCEDURE,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqFindProcedure = (id, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Procedure/GetById/${id}`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actFindProcedure(res.data));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actFindProcedure = (data) => {\r\n    return {\r\n        type: Types.FIND_PROCEDURE,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqDeleteProcedure = (id, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Procedure/Delete/${id}`, 'DELETE', null, accesstoken).then(res => {\r\n            return callApis(`Procedure/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actDeleteProcedure(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actDeleteProcedure = (data) => {\r\n    return {\r\n        type: Types.DELETE_PROCEDURE,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqUpdateProcedure = (id, Procedure, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Procedure/Update/${id}`, 'PUT', Procedure, accesstoken).then(res => {\r\n            return callApis(`Procedure/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actUpdateProcedure(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actUpdateProcedure = (data) => {\r\n    return {\r\n        type: Types.UPDATE_PROCEDURE,\r\n        data\r\n    }\r\n}\r\n\r\nexport const reqAddProcedure = (Procedure, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`Procedure/Create`, 'POST', Procedure, accesstoken).then(res => {\r\n            console.log(Procedure);\r\n            return callApis(`Procedure/Paging/pagesize/pageNow?pagesize=5&pageNow=1`, 'GET', null, accesstoken).then(res => {\r\n                dispatch(actAddProcedure(res.data));\r\n            }).catch(error => console.log(\"Fetch Error \"+ error));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actAddProcedure = (data) => {\r\n    return {\r\n        type: Types.ADD_PROCEDURE,\r\n        data\r\n    }\r\n}\r\n","import React,{Component} from 'react';\r\nimport {Row, Col, Button, Icon, Popover, Avatar, Select, notification,   } from 'antd';\r\nimport './index.css';\r\nimport FunctionbarContent from './function/index';\r\nimport PanelWrapper from 'containers/wrapper/Panel.style';\r\nimport TableContent from 'components/ptp__table/index';\r\n// import TableContent from 'components/table/MyTable';\r\n\r\n// import {demoData} from './list-Procedure-dumy';\r\nimport DrawerContent from 'components/Drawer/Drawer';\r\nimport FormProcedure from './action/add/FormProcedure'; \r\nimport FormEditProcedure from './action/edit/edit'; \r\n\r\nimport { withRouter, } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {showNotification} from 'components/notification/Notification';\r\nimport {reqLoadDataPaging, reqSearchProcedure, reqCountData,\r\n     reqFindProcedure, reqDeleteProcedure, reqAddProcedure, reqUpdateProcedure} from 'redux/procedure/actions';\r\nimport * as CONST_VARIABLE from 'utils/const/index';\r\n\r\nclass ProcedureManagement extends Component{\r\n    state={\r\n        pageSize:5,\r\n        pageIndex:1,\r\n        fullScreenMode:false,\r\n        \r\n        visibledAdd:false,\r\n        visibledEdit:false,\r\n\r\n        filteredInfo: null,\r\n        sortedInfo: null, \r\n        selectedRowKeys: [],\r\n        pagination:null,\r\n        recordSelected:null,\r\n        data:[],\r\n        idEdit:null\r\n    }\r\n    handleFullScreenMode=(val)=> {\r\n        this.setState(() => {\r\n            return {\r\n                fullScreenMode: val\r\n            };\r\n        });\r\n    }\r\n        \r\n    showDrawerAdd=()=>{ this.setState({visibledAdd:true}) }\r\n    onCloseAdd = () => { this.setState({ visibledAdd: false, }) };\r\n\r\n    showDrawerEdit=(id)=>{ \r\n        this.props.handleFindProcedure(id);\r\n        this.setState({visibledEdit:true, idEdit: id});\r\n     }\r\n    onCloseEdit = () => { this.setState({ visibledEdit: false, }) };\r\n\r\n\r\n    onSelectChange = (selectedRowKeys) => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        this.setState({ selectedRowKeys });\r\n    }\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter,\r\n            pagination: pagination\r\n        });\r\n\r\n    }\r\n\r\n    onRowSelect = (record) => {\r\n        this.setState({recordSelected:record});\r\n    }\r\n\r\n    clearFilters = (attr, name) => {\r\n        const filteredInfo = this.state.filteredInfo;\r\n        let arrayVal = filteredInfo[attr.val];\r\n        let ind = arrayVal.indexOf(name);\r\n        arrayVal.splice(ind, 1);\r\n        let attrFilter ={\r\n            [attr.val]: arrayVal\r\n        }\r\n        const obj= {...filteredInfo, ...attrFilter};\r\n        this.setState({ filteredInfo: obj });\r\n    }\r\n\r\n    clearSorted = () => {\r\n        this.setState({ sortedInfo: null, });\r\n    }\r\n    handleChangeSelectInRow =(value) => {\r\n        console.log(\"change value in rrow: \");\r\n        console.log(value, this.state.recordSelected);\r\n    }\r\n    \r\n    handleOnSearch= (val) =>{\r\n        console.log(this.state.pagination);\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        // console.log(val);\r\n        if(val!==''){\r\n            // this.props.countAllProcedure(accesstoken);    \r\n            this.props.handleSearchProcedure(val, this.state.pageIndex, this.state.pageSize, accesstoken);\r\n       \r\n        }else{\r\n            const {pageIndex, pageSize}= this.state;\r\n            this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n            this.props.countAllProcedure(accesstoken);    \r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentWillMount(){\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        const {pageIndex, pageSize}= this.state;\r\n        this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n        this.props.countAllProcedure(accesstoken);\r\n    }\r\n\r\n    componentDidMount(){\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        const {pageIndex, pageSize}= this.state;\r\n        this.props.loadDataPaging(pageIndex, pageSize,  accesstoken);\r\n        this.props.countAllProcedure(accesstoken);\r\n    }\r\n\r\n    handleSubmit=(obj)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleAddProcedure(obj, accesstoken);\r\n        this.onCloseAdd();\r\n        showNotification(\"Thêm thành công\", \"Bạn vừa thực hiện thêm một procedure!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n    handleDelete=(id)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleDeleteProcedure(id, accesstoken);\r\n        showNotification(\"Xóa thành công\", \"Bạn vừa thực hiện xóa một procedure!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n    handleSubmitEdit=(id, obj)=>{\r\n        var accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleUpdateProcedure(id, obj, accesstoken);\r\n        this.onCloseEdit();\r\n        this.setState({id:null});\r\n        showNotification(\"Sửa thành công\", \"Bạn vừa thực hiện cập nhật thông tin một procedure!!!\", \"topRight\", \"success\");\r\n    }\r\n\r\n   \r\n    render(){\r\n        let { sortedInfo, filteredInfo } = this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const info = {\r\n            sorted: sortedInfo,\r\n            filtered: filteredInfo\r\n        }\r\n        const columns = [\r\n            {\r\n                title: 'Tên tính năng',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortprocedure: sortedInfo.columnKey === 'name' && sortedInfo.procedure,\r\n            }, \r\n            {\r\n                title: 'Mô tả',\r\n                dataIndex: 'description',\r\n                key: 'description',\r\n                defaultSortProcedure: 'description',\r\n                sorter: (a, b) => a.typeProcedure - b.typeProcedure,\r\n                sortProcedure: sortedInfo.columnKey === 'description' && sortedInfo.procedure,\r\n            }, \r\n           \r\n            {\r\n                title: 'Action',\r\n                align:'center',\r\n                render:(text, record, index)=>{\r\n                    return(\r\n                        <div>\r\n                            <Button onClick={()=>this.showDrawerEdit(text)} className='btn btn-table' icon='edit'></Button>\r\n                            <Button \r\n                                onClick={()=>this.handleDelete(text)} \r\n                                className='btn btn-table' \r\n                                icon='delete'>\r\n                            </Button>\r\n                        </div>\r\n                    );\r\n                },\r\n                dataIndex: 'id',\r\n                key:'id',\r\n                width : 100\r\n               \r\n            },\r\n       ];\r\n        \r\n        const config ={\r\n            table:{\r\n                // bprocedureed: true\r\n            },\r\n            pagination:{\r\n                defaultPageSize:5,\r\n                total: this.props.numberProcedure\r\n            },\r\n        }\r\n        const event={\r\n            table:{\r\n                onChange:this.handleChange,\r\n                clearSorted: this.clearSorted,\r\n                clearFiltered: this.clearFilters,\r\n                onRow: this.onRowSelect,\r\n                onSearch: this.handleOnSearch\r\n            },\r\n            pagination:{\r\n                onChange:\r\n                    (page, pageSize)=>{\r\n                        const accesstoken= sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n                        this.props.loadDataPaging(page, pageSize, accesstoken);\r\n                    },\r\n                onShowSizeChange:\r\n                    (page, pageSize)=>{\r\n                        const accesstoken= sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n                        this.props.loadDataPaging(page, pageSize, accesstoken);\r\n                    }\r\n            }\r\n        }\r\n        const { selectedRowKeys } = this.state;\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectChange,\r\n            hideDefaultSelections: true,\r\n            selections: [{\r\n                key: 'all-data',\r\n                text: 'Select All Data',\r\n                onSelect: () => {\r\n                this.setState({\r\n                    selectedRowKeys: [...Array(46).keys()], // 0...45\r\n                });\r\n                },\r\n            }, {\r\n                key: 'odd',\r\n                text: 'Select Odd Row',\r\n                onSelect: (changableRowKeys) => {\r\n                let newSelectedRowKeys = [];\r\n                newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                    if (index % 2 !== 0) {\r\n                    return false;\r\n                    }\r\n                    return true;\r\n                });\r\n                this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                },\r\n            }, {\r\n                key: 'even',\r\n                text: 'Select Even Row',\r\n                onSelect: (changableRowKeys) => {\r\n                let newSelectedRowKeys = [];\r\n                newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                    if (index % 2 !== 0) {\r\n                    return true;\r\n                    }\r\n                    return false;\r\n                });\r\n                this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                },\r\n            }],\r\n            // onSelection: this.onSelection,\r\n        };\r\n\r\n\r\n        var listPropForDrawer={\r\n            styleProps:{\r\n              title:\"Nhập thông tin!\",\r\n              width:420,\r\n              height:'100%',\r\n              maskStyle:{\r\n                  color:'red'\r\n              },\r\n              mask:true,\r\n              maskClosable:true,\r\n              style:{\r\n                  backgroundColor:'#fafafa'\r\n              },\r\n              className:\"ok\",\r\n              zIndex:1,\r\n              placement:\"right\",\r\n              closable:this.state.visibledAdd,\r\n              destroyOnClose:false,\r\n            },\r\n            onClose:this.onCloseAdd,\r\n            visible:this.state.visibledAdd,\r\n            hasButtonFooter:false,\r\n            componentWillShow:(key)=> <FormProcedure\r\n                    key={key}\r\n                    onSubmitAdd={this.handleSubmit}\r\n                />,\r\n        }\r\n        var listPropForDrawerEdit={\r\n            styleProps:{\r\n              title:\"Nhập thông tin sửa đổi!\",\r\n              width:420,\r\n              height:'100%',\r\n              maskStyle:{\r\n                  color:'red'\r\n              },\r\n              mask:true,\r\n              maskClosable:true,\r\n              style:{\r\n                  backgroundColor:'#fafafa'\r\n              },\r\n              className:\"ok\",\r\n              zIndex:1,\r\n              placement:\"right\",\r\n              closable:this.state.visibledEdit,\r\n              destroyOnClose:false,\r\n            },\r\n            onClose:this.onCloseEdit,\r\n            visible:this.state.visibledEdit,\r\n            hasButtonFooter:false,\r\n            componentWillShow:(key)=> <FormEditProcedure \r\n                key={key}\r\n                id={this.state.idEdit} \r\n                procedure={this.props.itemProcedure} \r\n                onSubmitEdit={this.handleSubmitEdit}\r\n            />,\r\n        }\r\n        console.log(\"adasdasdas\");\r\n        console.log(this.props.itemProcedure);\r\n        console.log(\"adasdasdas\");\r\n        return (\r\n            <Row className=\"content_manager_wrapper\" style={{height:'100%'}}>\r\n                <PanelWrapper className={this.state.fullScreenMode ? \"full-screen-mode\" : \"\"}>\r\n                    <FunctionbarContent showDrawerAdd={this.showDrawerAdd} handleFullScreenMode={this.handleFullScreenMode}/>\r\n                    <Col md={24} className=\"table-wrapper\">\r\n                        <TableContent\r\n                            rowSelection={rowSelection}\r\n                            data={this.props.procedure} \r\n                            columns={columns} \r\n                            config={config} \r\n                            event={event}\r\n                            info={info}\r\n                        />\r\n                        \r\n                    </Col>\r\n                    <DrawerContent \r\n                        key={'addprocedure'}\r\n                        styleProps={listPropForDrawer.styleProps} \r\n                        visible={listPropForDrawer.visible} \r\n                        onClose={listPropForDrawer.onClose}\r\n                        hasButtonFooter={listPropForDrawer.hasButtonFooter}    \r\n                        componentWillShow={listPropForDrawer.componentWillShow}\r\n                    />\r\n                    <DrawerContent \r\n                        key={'editprocedure'}\r\n                        styleProps={listPropForDrawerEdit.styleProps} \r\n                        visible={listPropForDrawerEdit.visible} \r\n                        onClose={listPropForDrawerEdit.onClose}\r\n                        hasButtonFooter={listPropForDrawerEdit.hasButtonFooter}    \r\n                        componentWillShow={listPropForDrawerEdit.componentWillShow}\r\n                    />\r\n                </PanelWrapper>\r\n\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        procedure: state.procedure,\r\n        itemProcedure: state.itemProcedure,\r\n        numberProcedure: state.numberProcedure\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        handleAddProcedure: (object, accesstoken)=>{\r\n            dispatch(reqAddProcedure(object, accesstoken));\r\n        },\r\n        handleFindProcedure: (id, accesstoken)=>{\r\n            dispatch(reqFindProcedure(id, accesstoken));\r\n        },\r\n        handleUpdateProcedure: (id, object, accesstoken)=>{\r\n            dispatch(reqUpdateProcedure(id, object, accesstoken));\r\n        },\r\n        handleDeleteProcedure: (id, accesstoken)=>{\r\n            dispatch(reqDeleteProcedure(id, accesstoken));\r\n        },\r\n        loadDataPaging: (pageIndex, pageSize, accesstoken)=>{\r\n            dispatch(reqLoadDataPaging(pageIndex, pageSize, accesstoken));\r\n        },\r\n        countAllProcedure: ( accesstoken)=>{\r\n            dispatch(reqCountData( accesstoken));\r\n        },\r\n        handleSearchProcedure: (keyword, pageIndex, pageSize, accesstoken)=>{\r\n            dispatch(reqSearchProcedure(keyword, pageIndex, pageSize, accesstoken))\r\n        }\r\n\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ProcedureManagement));","import { Route, } from 'react-router-dom';\r\nimport React, { Component } from \"react\";\r\nimport CarManagement from 'containers/private/management/car/index';\r\nimport PartnerManagement from 'containers/private/management/partner/index';\r\nimport OrderManagement from 'containers/private/management/orders/index';\r\nimport TypecarManagement from 'containers/private/management/typecar/index';\r\nimport CustomerManagement from 'containers/private/management/customer/index';\r\nimport FeatureManagement from 'containers/private/management/feature/index';\r\nimport LocationManagement from 'containers/private/management/location/index';\r\nimport PackagesManagement from 'containers/private/management/packages/index';\r\nimport PaymentManagement from 'containers/private/management/payment/index';\r\nimport ProcedureManagement from 'containers/private/management/procedure/index';\r\nconst adminRoutes = [\r\n  {\r\n    path: \"car\",\r\n    exact: false,\r\n    component: ()=> <CarManagement/>\r\n  },\r\n  {\r\n    path: \"partner\",\r\n    exact: false,\r\n    component: ()=> <PartnerManagement/>\r\n  },\r\n  {\r\n    path: \"oders\",\r\n    exact: false,\r\n    component: ()=> <OrderManagement/>\r\n  },\r\n  {\r\n    path: \"typecar\",\r\n    exact: false,\r\n    component: ()=> <TypecarManagement/>\r\n  },\r\n  {\r\n    path: \"customer\",\r\n    exact: false,\r\n    component: ()=> <CustomerManagement/>\r\n  },\r\n  \r\n  {\r\n    path: \"feature\",\r\n    exact: false,\r\n    component: ()=> <FeatureManagement/>\r\n  },\r\n  {\r\n    path: \"location\",\r\n    exact: false,\r\n    component: ()=> <LocationManagement/>\r\n  },\r\n  {\r\n    path: \"packages\",\r\n    exact: false,\r\n    component: ()=> <PackagesManagement/>\r\n  },\r\n  {\r\n    path: \"payment\",\r\n    exact: false,\r\n    component: ()=> <PaymentManagement/>\r\n  },\r\n  {\r\n    path: \"procedure\",\r\n    exact: false,\r\n    component: ()=> <ProcedureManagement/>\r\n  },\r\n \r\n];\r\n\r\nclass AppRouter extends Component { \r\n  render() {\r\n    const { url, style } = this.props;\r\n    return (\r\n      <div style={style}>\r\n        {adminRoutes.map(singleRoute => {\r\n          const { path,component, exact, ...otherProps } = singleRoute;\r\n          return (\r\n            <Route\r\n              // exact={exact === false ? false : true}\r\n              exact={true}\r\n              key={path}\r\n              path={`${url}/${path}`}\r\n              component={component}\r\n              {...otherProps}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppRouter;\r\n","import React ,{Component} from 'react';\r\nimport { Layout,Row,Col } from 'antd';\r\nimport BreadcumbContent from 'components/breadcrumb/index';\r\nimport SidebarContent from './sidebar/index';\r\nimport ManagementRouter from '../route';\r\nconst {Content } = Layout;\r\nclass LayoutContent extends Component{\r\n    render(){\r\n        const {url} = this.props.match;\r\n        return(\r\n            <Layout style={{display:'flex', flexDirection:'row',height:'100%',border:'1px solid rgba(0,0,0,0.12)'}}>\r\n                <SidebarContent url={url}/>\r\n                <Content>\r\n                    <Layout >\r\n                        <BreadcumbContent/>\r\n                        <Content >\r\n                            <Row style={{display:'flex', flexDirection:'column'}}>\r\n                                <Col md={24}>\r\n                                    <ManagementRouter url={url}/>\r\n                                </Col>\r\n                            </Row>\r\n                        </Content>\r\n                    </Layout>\r\n                </Content>\r\n            </Layout>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default LayoutContent;","import { Route, } from 'react-router-dom';\r\nimport React, { Component } from \"react\";\r\nimport App from 'containers/private/layout-management/index';\r\nconst adminRoutes = [\r\n  {\r\n    path: \"management\",\r\n    exact: true,\r\n    component: (props)=> <App {...props}/>\r\n  },\r\n];\r\n\r\nclass AppRouter extends Component { \r\n  render() {\r\n    const { url, style } = this.props;\r\n    return (\r\n      <div style={style} >\r\n        {adminRoutes.map(singleRoute => {\r\n          const { path,component, exact, ...otherProps } = singleRoute;\r\n          return (\r\n            <Route\r\n              // exact={exact === false ? false : true}\r\n              exact={false}\r\n              key={path}\r\n              path={`${url}/${path}`}\r\n              component={component}\r\n              {...otherProps}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppRouter;\r\n","import React,{Component} from 'react';\r\nimport {Row, Col,Icon ,Button,List, Avatar} from 'antd';\r\nimport './css/pricing.css';\r\nimport {Link} from 'react-router-dom';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport plus2Image from 'images/car/hyundai.png';\r\nconst data = [\r\n    {\r\n        title: 'Ant Design Title 1',\r\n        description:'Ant Design, a design language for background applications, is refined by Ant UED Team'\r\n    },\r\n    {\r\n        title: 'Ant Design Title 2',\r\n        description:'Ant Design, a design language for background applications, is refined by Ant UED Team'\r\n    },\r\n    {\r\n        title: 'Ant Design Title 3',\r\n        description:'Ant Design, a design language for background applications, is refined by Ant UED Team'\r\n    },\r\n    {\r\n        title: 'Ant Design Title 4',\r\n        description:'Ant Design, a design language for background applications, is refined by Ant UED Team'\r\n    },\r\n  ];\r\nclass Pricing extends Component{\r\n    renderListDetail=(dataRender)=>{\r\n        return <InfiniteScroll\r\n            initialLoad={false}\r\n            pageStart={0}\r\n            useWindow={false}\r\n            >\r\n            <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={dataRender}\r\n                size='small'\r\n                className=\"list-footer-detail\"\r\n                renderItem={item => (\r\n                    <List.Item>\r\n                        <List.Item.Meta\r\n                            avatar={<Avatar icon=\"check-circle\" />}\r\n                            title={<Link to=\"#\">{item.title}</Link>}\r\n                            description={<span>{item.description}</span>}\r\n                        />\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </InfiniteScroll>\r\n    }\r\n    render(){\r\n        return(\r\n            <Row className=\"package-wrapper-pricing\" gutter={0}>\r\n                <Col md={8} className=\"package-service-pricing\">\r\n                    <div className=\"title-header-package\">Rental car</div>\r\n                    <div className=\"content-package\">\r\n                        Bạn sẽ đăng tải được 5 xe lên hệ thống của chúng tôi.\r\n                        <div className=\"image-about-package\">\r\n                            <img src={plus2Image}/>\r\n                        </div>\r\n                        <Button className=\"btn-select-package\" ><Icon type=\"check\"/>Chọn gói</Button>\r\n                    </div>\r\n                    <div className=\"detail-package\">\r\n                        {this.renderListDetail(data)}\r\n                    </div>\r\n                </Col>\r\n                <Col md={8} className=\"package-service-pricing\">\r\n                    <div className=\"title-header-package\">Rental Plus</div>\r\n                    <div className=\"content-package\">\r\n                        Bạn sẽ đăng tải được 15 xe lên hệ thống của chúng tôi.\r\n                        <div className=\"image-about-package\">\r\n                            <img src={plus2Image}/>\r\n                        </div>\r\n                        <Button className=\"btn-select-package\" ><Icon type=\"check\"/>Chọn gói</Button>\r\n                    </div>\r\n                    <div className=\"detail-package\">\r\n                        {this.renderListDetail(data)}\r\n                    </div>\r\n                </Col>\r\n                <Col md={8} className=\"package-service-pricing\">\r\n                    <div className=\"title-header-package\">Rental plus+</div>\r\n                    <div className=\"content-package\">\r\n                        Bạn sẽ đăng tải được 25 xe lên hệ thống của chúng tôi.\r\n                        <div className=\"image-about-package\">\r\n                            <img src={plus2Image}/>\r\n                        </div>\r\n                        <Button className=\"btn-select-package\" ><Icon type=\"check\"/>Chọn gói</Button>\r\n                    </div>\r\n                    <div className=\"detail-package\">\r\n                        {this.renderListDetail(data)}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nexport default Pricing;","import React,{Component} from 'react';\r\n// import AppRouter from 'containers/private/route';\r\nimport AppRouter from './AppRoute';\r\nimport {Link,} from 'react-router-dom';\r\nimport { Layout,Row,Col,Button, Icon,Modal } from 'antd';\r\nimport MenuContent from 'containers/menu/Menu';\r\nimport './css/App.css';\r\nimport Pricing from 'containers/private/pricing/pricing';\r\nconst {  Content } = Layout;\r\nclass App extends Component {\r\n    state={\r\n        visible: false,\r\n        showModal:false,\r\n        auth:false,\r\n        // visible: false,\r\n        // showModal:true,\r\n        // auth:true,\r\n    }\r\n    onCloseModal=()=>{\r\n        this.setState({showModal:false, auth:true});\r\n    }\r\n    render(){\r\n        const {url} = this.props.match;\r\n        const {auth} = this.state;\r\n       return (\r\n            <Layout>\r\n                {\r\n                    (auth)?\r\n                    <Row>\r\n                        <Col md={24} style={{height:'50px',width:'100%', background: \"#fafafa\",}}>\r\n                            <MenuContent/>\r\n                        </Col>\r\n                        <Col md={24} >\r\n                            <Pricing/>\r\n                        </Col>\r\n                        <Col md={24} style={{height:'50px',width:'100%', background: \"#fafafa\",}}>\r\n                            <Modal\r\n                                visible={this.state.showModal}\r\n                                title=\"Chào mừng bạn đến với hệ thống của chúng tôi!\"\r\n                                closable={true}\r\n                                onCancel={this.onCloseModal}\r\n                                footer={null}\r\n                                width={900}\r\n                            >   \r\n                                <Row className=\"modal-content-wrapper\">\r\n                                    <Col md={24}>\r\n                                        <div className=\"title-about-use-service\">Bạn muốn sử dụng dịch vụ gì của chúng tôi?</div>\r\n                                        <div className></div>\r\n                                    </Col>\r\n                                    <Col md={24} className=\"service-content\">\r\n                                        <Col md={8} className=\"service-items\">\r\n                                            <div className=\"image-service-1\"></div>\r\n                                            <div>Dùng thử tính năng cho thuê xe của hệ thống</div>\r\n                                            <Link to=\"dashboard/management\" onClick={this.onCloseModal}  >\r\n                                                <Button  >\r\n                                                <Icon type=\"car\" theme=\"outlined\" />Dùng thử một lần</Button>\r\n                                            </Link>\r\n                                        </Col>\r\n                                        <Col md={8} className=\"service-items\">\r\n                                            <div className=\"image-service-2\"></div>\r\n                                            <div>Dịch vụ này đang cập nhật</div>\r\n                                            <Link to=\"dashboard/management\" >\r\n                                                <Button onClick={this.onCloseModal} disabled >\r\n                                                <Icon type=\"car\" theme=\"outlined\" />Dùng thử một lần</Button>\r\n                                            </Link>\r\n                                        </Col>\r\n                                        <Col md={8} className=\"service-items\">\r\n                                            <div className=\"image-service-3\"></div>\r\n                                            <div>Dịch vụ này đang cập nhật</div>\r\n                                            <Link to=\"dashboard/management\" >\r\n                                                <Button onClick={this.onCloseModal}  disabled={true}  >\r\n                                                <Icon type=\"car\" theme=\"outlined\"/>Dùng thử một lần</Button>\r\n                                            </Link>\r\n                                        </Col>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Modal>\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    <Row>\r\n                        <Layout>\r\n                            <Content>\r\n                                    <AppRouter url={url} style={{height:'100%'}}/>\r\n                            </Content>\r\n                        </Layout>\r\n                    </Row>\r\n                    }\r\n            </Layout>\r\n       );\r\n    }\r\n}\r\nexport default App;","import { Form,DatePicker , Select, Row, Col, Button, } from 'antd';\r\nimport React,{Component} from 'react';\r\nimport moment from 'moment';\r\nimport {Link} from 'react-router-dom';\r\nimport 'views/page/home/css/form.css';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nconst range=(start, end)=> {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n}\r\nclass BookCar extends Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n    city:'ThuDuc',\r\n    dateRental:null,\r\n    dateReturn:null,\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  }\r\n  disabledDate=(current) =>{\r\n    return current && current < moment().endOf('day');\r\n  }\r\n  \r\n  disabledDateTime=() =>{\r\n    return {\r\n      disabledHours: () => range(0, 24).splice(4, 20),\r\n      disabledMinutes: () => range(30, 60),\r\n      disabledSeconds: () => [55, 56],\r\n    };\r\n  }\r\n  \r\n  disabledRangeTime=(_, type)=> {\r\n    if (type === 'start') {\r\n      return {\r\n        disabledHours: () => range(0, 60).splice(4, 20),\r\n        disabledMinutes: () => range(30, 60),\r\n        disabledSeconds: () => [55, 56],\r\n      };\r\n    }\r\n    return {\r\n      disabledHours: () => range(0, 60).splice(20, 4),\r\n      disabledMinutes: () => range(0, 31),\r\n      disabledSeconds: () => [55, 56],\r\n    };\r\n  }\r\n\r\n  handleCityChange=(val)=>{\r\n    this.setState({city:val});\r\n    this.props.onChangeCity(val);\r\n  }\r\n\r\n  onChangeDateRental=(value, dateString)=> {\r\n    this.setState({dateRental: dateString});\r\n    this.props.onChangeDateRental(dateString);\r\n  }\r\n\r\n  onChangeDateReturn=(value, dateString)=> {\r\n    const numDayRental = new Date(dateString).getDate() - new Date(this.state.dateRental).getDate();\r\n    this.setState({dateReturn: dateString, numDayRental: numDayRental });\r\n    this.props.onChangeDateReturn(dateString);\r\n  }\r\n\r\n  render() {\r\n    // const { getFieldDecorator } = this.props.form;\r\n    const { formLayout } = this.state;\r\n    const formItemLayout = formLayout === 'horizontal' ? {\r\n        labelCol: { span: 4 },\r\n        wrapperCol: { span: 14 },\r\n      } : null;\r\n      const {dateReturn, dateRental, city} = this.props;\r\n    return (\r\n      <Row className=\"form_content\">\r\n          <Col span={24} >\r\n            <Form layout={null} onSubmit={this.handleSubmit}>\r\n                <FormItem\r\n                    {...formItemLayout}\r\n                    label=\"Chọn Tỉnh/ Thành phố\"\r\n                    >\r\n                    <Select\r\n                        style={{ width: '100%' }}\r\n                        defaultValue={city}\r\n                        onChange={this.handleCityChange}\r\n                        >\r\n                            <Option value=\"BinhDuong\">Bình Dương</Option>\r\n                            <Option value=\"ThuDuc\">Thủ Đức</Option>\r\n                    </Select>\r\n                </FormItem>\r\n                <FormItem\r\n                    {...formItemLayout}\r\n                    label=\"Chọn ngày thuê \"\r\n                    >\r\n                      <DatePicker\r\n                        format=\"YYYY-MM-DD\"\r\n                        placeholder=\"Select date\"\r\n                        disabledDate={this.disabledDate}\r\n                        disabledTime={this.disabledRangeTime}\r\n                        onChange={this.onChangeDateRental}\r\n                        style={{width:'100%'}}\r\n                        defaultValue={moment(dateRental, 'YYYY-MM-DD')}\r\n                        />\r\n                </FormItem>\r\n                <FormItem\r\n                    {...formItemLayout}\r\n                    label=\"Chọn ngày trả\"\r\n                    >\r\n                      <DatePicker\r\n                        // showTime\r\n                        format=\"YYYY-MM-D\"\r\n                        placeholder=\"Select date\"\r\n                        disabledDate={this.disabledDate}\r\n                        disabledTime={this.disabledRangeTime}\r\n                        onChange={this.onChangeDateReturn}\r\n                        style={{width:'100%'}}\r\n                        defaultValue={moment(dateReturn, 'YYYY-MM-DD')}\r\n                        />\r\n                </FormItem>\r\n                {/* <FormItem style={{float:'right'}}>\r\n                        <Link to={{ \r\n                            pathname: '/tim-xe', \r\n                            state: { \r\n                              city: this.state.city, \r\n                              dateRental: this.state.dateRental,\r\n                              dateReturn: this.state.dateReturn\r\n                              }\r\n                            }}>\r\n                          <Button type=\"primary\" htmlType=\"submit\">Chọn xe</Button>\r\n                        </Link>\r\n                </FormItem> */}\r\n            </Form>\r\n          </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst QuickBook = Form.create()(BookCar );\r\nexport default QuickBook;","import React, {Component} from 'react';\r\nimport {   Slider,Row,Col } from 'antd';\r\nimport QuickBook from './QuickBook';\r\n// const {  Sider,  } = Layout;\r\nclass SidebarContent extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            priceStart:0,\r\n            priceEnd:100000000,\r\n        }\r\n    }\r\n    filterPrice=(val)=>{\r\n        this.setState({priceStart:val[0]*100000,priceEnd:val[1]*100000});\r\n        this.props.onSearchPrice(val[0]*100000, val[1]*100000);\r\n    }\r\n    render(){\r\n        const rowstyle={\r\n            display:'flex',\r\n            flexDirection:'column',\r\n            justifyContent:'center',\r\n            alignItems:'center',\r\n            backgroundColor:'rgba(255, 255, 255, 0.815)',\r\n            margin:'10px 0px',\r\n            padding:'10px 0px',\r\n        }\r\n        const {\r\n            dateReturn, dateRental, city, \r\n            onChangeCity, onChangeDateRental, onChangeDateReturn\r\n        } = this.props;\r\n        return ( \r\n            <Row style={rowstyle}>\r\n                <Col span={20}>\r\n                    <QuickBook\r\n                        city={city}\r\n                        dateReturn={dateReturn}\r\n                        dateRental={dateRental}\r\n                        onChangeCity={onChangeCity}\r\n                        onChangeDateRental={onChangeDateRental}\r\n                        onChangeDateReturn={onChangeDateReturn}\r\n                    />\r\n                </Col>\r\n                <Col span={20}>\r\n                    <Slider onChange={this.filterPrice} range defaultValue={[this.state.priceStart, this.state.priceEnd]} disabled={false} />\r\n                    <span>Tầm giá từ {this.state.priceStart} đến {this.state.priceEnd}</span>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\nexport default SidebarContent;","// import { Menu, Icon } from 'antd';\r\nimport React,{Component} from 'react';\r\n// import HeaderContent from './Header';\r\nclass FooterContent extends Component {\r\n\r\n  render() {\r\n    return (\r\n     <div>\r\n      {/* <HeaderContent/> */}\r\n     </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FooterContent;","import { Menu,   } from 'antd';\r\nimport React,{Component} from 'react';\r\nimport { Select ,Input} from 'antd';\r\nconst Option = Select.Option;\r\nconst Search = Input.Search;\r\nclass HeaderContent extends Component {\r\n  state = {\r\n    current: 'mail',\r\n    order: 'ASC'\r\n  }\r\n  handleChange=(val)=>{\r\n    this.setState({order: val.key});\r\n    this.props.onSearch('', val.key);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Menu\r\n        onClick={this.handleClick}\r\n        selectedKeys={[this.state.current]}\r\n        mode=\"horizontal\"\r\n      >\r\n      <Menu.Item key=\"search\">\r\n        <Search\r\n          placeholder=\"Input search text\"\r\n          onSearch={value => this.props.onSearch(value, this.state.order)}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Menu.Item>\r\n      <Menu.Item key=\"filter\">\r\n        <Select labelInValue defaultValue={{ key: 'ASC' }} style={{ width: '120%' }} onChange={this.handleChange}>\r\n          <Option value=\"ASC\">Giá tăng dần</Option>\r\n          <Option value=\"des\">Giá giảm dần</Option>\r\n        </Select>\r\n      </Menu.Item>\r\n      \r\n    </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderContent;","import { Steps } from 'antd';\r\nimport React,{Component} from 'react';\r\nimport './step.css';\r\nconst Step = Steps.Step;\r\nclass StepContent extends Component{\r\n    render(){\r\n        return(\r\n            <Steps size=\"small\" current={this.props.step-1}>\r\n                <Step title=\"Chọn xe\" />\r\n                <Step title=\"Xem thông tin xe\" />\r\n                <Step title=\"Điền thông tin của bạn\" />\r\n                <Step title=\"Hoàn tất\" />\r\n            </Steps>      \r\n        );\r\n    }\r\n}\r\nexport default StepContent;","import { Card, Icon, Avatar, Row, Col } from 'antd';\r\nimport React,{Component} from 'react';\r\nimport img from 'images/banner6.png';\r\nimport {Link} from 'react-router-dom';\r\nimport './css/product.css';\r\n\r\nclass ItemCar extends Component{\r\n    render(){\r\n        const {car} =this.props;\r\n        const {dateReturn, dateRental, city} = this.props;\r\n        return(\r\n            <Card\r\n                className=\"item-car\"\r\n                style={{ width: '100%'  }}\r\n                cover={<img height=\"135px\" alt=\"example\"  src={car.imageLink} />}\r\n                actions={\r\n                    [\r\n                        <Icon type=\"eye\" theme=\"outlined\" />,\r\n                        <Icon type=\"select\" theme=\"outlined\" />,\r\n                        <Link \r\n                            to={{ \r\n                                pathname: `detail/${car.id}`, \r\n                                state: { \r\n                                    city: city, \r\n                                    dateRental: dateRental,\r\n                                    dateReturn: dateReturn\r\n                                }\r\n                            }}\r\n                        >\r\n                            <Icon type=\"shopping-cart\" theme=\"outlined\" />\r\n                        </Link>\r\n                    ]\r\n                }\r\n            >\r\n                <div style={{height:'40px', textAlign:'center'}} >\r\n                    <span style={{color:'red', fontSize:20}}>{car.price}</span>\r\n                    <div style={{color:'BLUE'}}>{car.name}</div>\r\n                </div>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nexport default ItemCar;","import {  Row ,Col } from 'antd';\r\nimport React,{Component} from 'react';\r\nimport ItemCar from './ItemCar';\r\nconst gridStyle = {\r\n    padding:'0 20px',\r\n};\r\nclass GridItem extends Component{\r\n    renderListCard=(products)=>{\r\n        \r\n        const {dateReturn, dateRental, city} = this.props;\r\n        return(\r\n            <Row title=\"List car\" className=\"responsive_list_car\" gutter={0}>\r\n            { \r\n                products.map((car,ind)=>{\r\n                    return(\r\n                    <Col key={car.id} sm={24} md={6} style={gridStyle}>\r\n                        <ItemCar \r\n                            city={city}\r\n                            dateReturn={dateReturn}\r\n                            dateRental={dateRental}\r\n                            key={ind} \r\n                            car={car}/>\r\n                    </Col>\r\n                    )\r\n                })\r\n            }\r\n            </Row>\r\n        ) \r\n    }\r\n    render(){\r\n        const {products} =this.props;\r\n        return (\r\n            <div>\r\n                {this.renderListCard(products)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default GridItem;","import { Pagination,Row,Col } from 'antd';\r\nimport React,{Component} from 'react';\r\n\r\nclass PaginationContent extends Component{\r\n    render(){\r\n        return (\r\n            <Row>\r\n                <Col>\r\n                    <Pagination \r\n                        defaultPageSize={12}\r\n                        showSizeChanger \r\n                        onChange={\r\n                            (page, pageSize)=>{\r\n                                this.props.onShowSizeChange(page, pageSize );\r\n                            }\r\n                        }\r\n                        onShowSizeChange={\r\n                            (page, pageSize)=>{\r\n                                this.props.onShowSizeChange(page, pageSize);\r\n                            }\r\n                        }\r\n                        pageSizeOptions={[\"12\", \"24\", \"36\", \"48\"]}\r\n                        defaultCurrent={1} \r\n                        total={this.props.total} \r\n                        showTotal={(total, range) => `${range[0]}-${range[1]} of ${total} items`}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\nexport default PaginationContent;","import React ,{Component} from 'react';\r\nimport { Layout, Row,Col } from 'antd';\r\nimport SidebarContent from './Sidebar';\r\nimport HeaderContent from 'views/layout/Header'; \r\nimport FooterContent from 'views/layout/Footer';\r\nimport FunctionFilter from 'containers/filterbar/FunctionFilter';\r\nimport StepContent from 'containers/step/Step';\r\nimport GridCard from './GridCard';\r\nimport PaginationContent from 'components/pagination/Pagination'\r\nimport 'containers/filterbar/function.css';\r\nimport './css/sidebar.css';\r\nimport { withRouter,Link} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {reqLoadDataPaging, reqSearchProduct, reqCountData} from 'redux/car/actions';\r\n\r\nimport * as CONST_VARIABLE from 'utils/const/index';\r\nconst { Header, Content,Footer } = Layout;\r\nclass ContentApp extends Component{\r\n    state={\r\n        collapsed: false,\r\n        pageIndex:1, \r\n        pageSize: 12,\r\n        priceStart:0, \r\n        priceEnd:1000000,\r\n        dateRental:null,\r\n        dateReturn:null,\r\n        city:null,\r\n    }\r\n    toggle = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        });\r\n    }\r\n    componentWillMount(){\r\n        const accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        const {pageIndex, pageSize,} = this.state;\r\n        this.props.loadProductAct(pageIndex,pageSize,accesstoken);\r\n        this.props.loadCountData();\r\n\r\n        this.setState({\r\n            dateRental:this.props.location.state.dateRental,\r\n            dateReturn:this.props.location.state.dateReturn,\r\n            city: this.props.location.state.city\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.loadCountData();\r\n    }\r\n\r\n    onShowSizeChange = (current, pageSize)=> {\r\n        // console.log(current, pageSize);\r\n        const accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.loadProductAct(current,pageSize,accesstoken);\r\n    }\r\n\r\n    onSearch= (keyword, order) =>{\r\n        console.log(keyword);\r\n        const accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        const {pageIndex, pageSize, priceStart, priceEnd} = this.state;\r\n        this.props.searchProductAct(keyword, pageIndex, pageSize, order, priceStart, priceEnd, accesstoken);\r\n    }\r\n\r\n    onSearchPrice=(priceStart, priceEnd)=>{\r\n        const accesstoken = sessionStorage.getItem(CONST_VARIABLE.ACCESS_TOKEN);\r\n        const {pageIndex, pageSize,} = this.state;\r\n        const keyword= '';\r\n        const order= 'ASC';\r\n        this.props.searchProductAct(keyword, pageIndex, pageSize, order, priceStart, priceEnd, accesstoken);\r\n    }\r\n\r\n    onChangeCity=(val)=>{this.setState({city:val})}\r\n    onChangeDateRental=(val)=>{this.setState({dateRental:val})}\r\n    onChangeDateReturn=(val)=>{this.setState({dateReturn:val})}\r\n    \r\n    render() {\r\n        const {car} = this.props;\r\n        const {dateReturn, dateRental, city} = this.state;\r\n    return (\r\n    <Layout>\r\n        <Header className=\"header_content\">\r\n            <HeaderContent/>\r\n        </Header>\r\n        <Content>\r\n            <div className=\"step_content\">\r\n                <StepContent step={1}/>\r\n            </div>\r\n            <Layout>\r\n                <Row className=\"resposive_content_find_car\" gutter={8} >\r\n                    <Col md={6} className=\"sidebar_content\" >\r\n                        <SidebarContent \r\n                            city={city}\r\n                            dateReturn={dateReturn}\r\n                            dateRental={dateRental}\r\n                            onSearchPrice={this.onSearchPrice} \r\n                            onChangeCity={this.onChangeCity}\r\n                            onChangeDateRental={this.onChangeDateRental}\r\n                            onChangeDateReturn={this.onChangeDateReturn}\r\n                            collapsed={this.state.collapsed}/>\r\n                    </Col>\r\n                    <Col md={18}>\r\n                        <Row style={{display:'flex',flexDirection:'column'}}>\r\n                            <Col md={24}>\r\n                                <FunctionFilter onSearch={this.onSearch} className=\"function_filter\"/>\r\n                            </Col>\r\n                            <br/>\r\n                            <Col md={24}>\r\n                                <Content style={{ marginTop: '34px', padding: '12px 0', background: '#fff' }}>\r\n                                    <Row>\r\n                                        <Col md={24} sm={24}>\r\n                                            <GridCard \r\n                                                city={city}\r\n                                                dateReturn={dateReturn}\r\n                                                dateRental={dateRental}\r\n                                                products={car}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md={24} sm={24} className=\"pagination-bar\" >\r\n                                            <PaginationContent \r\n                                                total={this.props.numberCar} \r\n                                                onShowSizeChange={this.onShowSizeChange}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Content>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Layout>\r\n        </Content>\r\n        <Footer>\r\n            <FooterContent/>\r\n        </Footer>\r\n    </Layout>\r\n        \r\n    );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        car: state.car,\r\n        numberCar: state.numberCar\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        loadProductAct:(pageIndex,pageSize,accesstoken)=>{\r\n            dispatch(reqLoadDataPaging(pageIndex,pageSize,accesstoken)) ;\r\n        },\r\n        \r\n        searchProductAct:(keyword, pageIndex, pageSize, sortOrder, priceStart, priceEnd, accesstoken)=>{\r\n            dispatch(reqSearchProduct(keyword, pageIndex, pageSize, sortOrder, priceStart, priceEnd, accesstoken)) ;\r\n        },\r\n\r\n        loadCountData:()=>{\r\n            dispatch(reqCountData()) ;\r\n        },\r\n\r\n    }\r\n  }\r\n  \r\n  export default withRouter(connect(mapStateToProps, mapDispatchToProps)(ContentApp));","import { Form, Input,DatePicker , Select, Row, Col, Button,  } from 'antd';\r\nimport React,{Component} from 'react';\r\nimport moment from 'moment';\r\nimport {Link} from 'react-router-dom';\r\nimport '../css/form.css';\r\n\r\nimport PaypalBtn from 'react-paypal-checkout';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nconst range=(start, end)=> {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n}\r\n\r\nclass BookCar extends Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n    dateRental:null,\r\n    dateReturn:null,\r\n    numDayRental:0,\r\n    err:'Số ngày mượn phải lớn hơn 1 ngày',\r\n    city:null,\r\n\r\n  };\r\n\r\n  componentWillMount(){\r\n    this.setState({\r\n      dateRental:this.props.dateRental,\r\n      dateReturn:this.props.dateReturn,\r\n      city: this.props.city\r\n    });\r\n    this.getDateRental(new Date(this.props.dateReturn), new Date(this.props.dateRental));\r\n  }\r\n\r\n  onChangeDateRental=(value, dateString)=> {\r\n    // console.log('Selected Time: ', value);\r\n    // console.log('Formatted Selected Time: ', dateString);\r\n    this.setState({dateRental: dateString});\r\n  }\r\n\r\n  getDateRental=(dateEnd, dateStart)=>{\r\n    let error='';\r\n    let yearStart = dateStart.getFullYear();\r\n    let yearEnd = dateEnd.getFullYear();\r\n    let year= yearEnd- yearStart;\r\n    let monthEnd = (year*12 )+ dateEnd.getMonth();\r\n    let monthStart = dateStart.getMonth();\r\n    let month = monthEnd- monthStart;\r\n    if(month>1){\r\n      error ='Số ngày mượn phải nhỏ hơn 1 tháng';\r\n      this.setState({numDayRental: day, err: error });\r\n      return  error;\r\n    } \r\n    \r\n    let arr = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n    let dayEnd = ((month) * arr[monthStart]) + dateEnd.getDate();\r\n    let dayStart = dateStart.getDate();\r\n    let day= dayEnd- dayStart;\r\n    if(day>1){\r\n      this.setState({numDayRental: day, err: 'OK' });\r\n    }else{\r\n      this.setState({err:'Phải mượn xe lớn hơn 1 ngày'});\r\n    }\r\n    return error;\r\n  }\r\n  \r\n  onChangeDateReturn=(value, dateString)=> {\r\n    // console.log('Selected Time: ', value);\r\n    // console.log('Formatted Selected Time: ', dateString);\r\n    const numDayRental = new Date(dateString).getDate() - new Date(this.state.dateRental).getDate();\r\n    this.setState({dateReturn: dateString, numDayRental: numDayRental });\r\n    this.getDateRental(new Date(dateString), new Date(this.state.dateRental));\r\n\r\n  }\r\n  \r\n  onOk=(value)=> {\r\n    // console.log('onOk: ', value);\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  }\r\n  \r\n  disabledDate=(current) =>{\r\n    return current && current < moment().endOf('day');\r\n  }\r\n  \r\n   disabledDateTime=() =>{\r\n    return {\r\n      disabledHours: () => range(0, 24).splice(4, 20),\r\n      disabledMinutes: () => range(30, 60),\r\n      disabledSeconds: () => [55, 56],\r\n    };\r\n  }\r\n  \r\n   disabledRangeTime=(_, type)=> {\r\n    if (type === 'start') {\r\n      return {\r\n        disabledHours: () => range(0, 60).splice(4, 20),\r\n        disabledMinutes: () => range(30, 60),\r\n        disabledSeconds: () => [55, 56],\r\n      };\r\n    }\r\n    return {\r\n      disabledHours: () => range(0, 60).splice(20, 4),\r\n      disabledMinutes: () => range(0, 31),\r\n      disabledSeconds: () => [55, 56],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    // const { getFieldDecorator } = this.props.form;\r\n    const onSuccess = (payment) => {\r\n\t\t\tconsole.log(\"The payment was succeeded!\", payment);\r\n\t\t}\t\t\r\n\r\n\t\tconst onCancel = (data) => {\r\n\t\t\tconsole.log('The payment was cancelled!', data);\r\n\t\t}\t\r\n\r\n\t\tconst onError = (err) => {\r\n\t\t\tconsole.log(\"Error!\", err);\t\t\r\n\t\t}\t\t\t\r\n\r\n\t\tlet env = 'sandbox'; // you can set here to 'production' for production\r\n\t\tlet currency = 'USD'; // or you can set this value from your props or state  \r\n\t\tlet total = this.state.numDayRental* this.props.itemCar.price;  // same as above, this is the total amount (based on currency) to be \r\n\t\tlet locale = 'en_US'; \r\n\t\tlet style = {\r\n\t\t\t'label':'pay', \r\n\t\t\t'tagline': false, \r\n\t\t\t'size':'medium', \r\n\t\t\t'shape':'pill', \r\n\t\t\t'color':'gold'\r\n\t\t};\r\n\r\n\t\tconst client = {\r\n      sandbox:    'AY1jSZZWe9ubj79SyF4ixwYn32ExUwpeBwUBGiqjcTF3vCdQN3VPOZ7l4GF7SsBYifOWxo4x0RlceB11',\r\n      production: 'EPOgRKs0mDvWhvRXnGFsAcqp3ny-hYeYoSPQPxIYKvc1kGKqgCpV0xI2c7bs0qU8okWyyqbl7ajjH43z',\r\n\t\t}\r\n    const { formLayout } = this.state;\r\n    const formItemLayout = formLayout === 'horizontal' ? {\r\n        labelCol: { span: 4 },\r\n        wrapperCol: { span: 14 },\r\n      } : null;\r\n    const rowStyleOrder={\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        // alignItems:'left',\r\n        justifyContent:'space-between'\r\n    }\r\n    const {dateReturn, dateRental, city} = this.state;\r\n    const {itemCar} = this.props;\r\n    return (\r\n      <Row className=\"form_content\">\r\n          <Col md={24} >\r\n            <Form layout={null} onSubmit={this.handleSubmit}>\r\n                <FormItem\r\n                    {...formItemLayout}\r\n                    label=\"Hình thức nhận xe\"\r\n                    >\r\n                    <Select\r\n                        // value={state.currency}\r\n                        // size={size}\r\n                        defaultValue=\"AT_PRODUCER\"\r\n                        style={{ width: '100%' }}\r\n                        // onChange={this.handleCurrencyChange}\r\n                        >\r\n                            <Option value=\"AT_HOME\">Nhận xe tại nhà</Option>\r\n                            <Option value=\"AT_PRODUCER\">Nhận xe tại đại lý</Option>\r\n                    </Select>\r\n                </FormItem>\r\n                <FormItem\r\n                    {...formItemLayout}\r\n                    label=\"Chọn ngày thuê \"\r\n                    >\r\n                      <DatePicker\r\n                        // showTime\r\n                        format=\"YYYY-MM-DD\"\r\n                        placeholder=\"Select Time\"\r\n                        disabledDate={this.disabledDate}\r\n                        disabledTime={this.disabledRangeTime}\r\n                        onChange={this.onChangeDateRental}\r\n                        // onOk={this.onOk}\r\n                        style={{width:'100%'}}\r\n                        defaultValue={moment(dateRental, 'YYYY-MM-DD')}\r\n                        />\r\n                </FormItem>\r\n                <FormItem\r\n                    {...formItemLayout}\r\n                    label=\"Chọn ngày trả\"\r\n                    >\r\n                      <DatePicker\r\n                        // showTime\r\n                        format=\"YYYY-MM-DD\"\r\n                        placeholder=\"Select Time\"\r\n                        disabledDate={this.disabledDate}\r\n                        disabledTime={this.disabledRangeTime}\r\n                        onChange={this.onChangeDateReturn}\r\n                        // onOk={this.onOk}\r\n                        defaultValue={moment(dateReturn, 'YYYY-MM-DD')}\r\n                        style={{width:'100%'}}\r\n                        />\r\n                </FormItem>\r\n                <FormItem\r\n                    {...formItemLayout}\r\n                    label=\"Mã giảm giá: \"\r\n                    >\r\n                      <Input style={{width:'100%'}} placeholder=\"Nhập mã giảm giá\" />\r\n                </FormItem>\r\n                <FormItem\r\n                    {...formItemLayout}\r\n                    label=\"Giới hạn quảng đường: \"\r\n                    >\r\n                      <p className=\"text\">Tối đa 250km/ngày, phụ trội 3.000 đ/km</p>\r\n                </FormItem>\r\n                <FormItem\r\n                    {...formItemLayout}\r\n                    label=\"Chi tiết giá: \"\r\n                    >\r\n                      <Row style={rowStyleOrder} className=\"row-info-order\">\r\n                          <Col span={12} ><span>Đơn giá ngày</span></Col>\r\n                          <Col span={12} ><span className=\"span-info-order\">{itemCar.price}</span></Col>\r\n                      </Row>\r\n                      <Row style={rowStyleOrder} className=\"row-info-order\">\r\n                          <Col span={12}><span>Ngày</span></Col>\r\n                          <Col span={12}><span className=\"span-info-order\">{this.state.numDayRental} Ngày</span></Col>\r\n                      </Row>\r\n                      <hr/>\r\n                      <Row style={rowStyleOrder} className=\"row-info-order\">\r\n                          <Col span={12}><span>TỔNG</span></Col>\r\n                          <Col span={12}><span className=\"span-info-order\">{`${this.state.numDayRental* itemCar.price}`}</span></Col>\r\n                      </Row>\r\n\r\n                </FormItem>\r\n                <FormItem style={{float:'right',width:'100%'}}>\r\n                    <Row >\r\n                {\r\n                  (this.state.err==='OK')?\r\n                    <Col md={24}>\r\n                     <PaypalBtn \r\n                        env={env} \r\n                        client={client} \r\n                        currency={currency} \r\n                        total={total} \r\n                        locale={locale} \r\n                        style={style}\r\n                        onError={onError} \r\n                        onSuccess={onSuccess} \r\n                        onCancel={onCancel}\r\n                      />\r\n                      <Link to=\"/final\">\r\n                        <Button style={{width:'100%'}} type=\"primary\" htmlType=\"submit\">Hoàn tất</Button>\r\n                      </Link>\r\n                    </Col>:\r\n                    <Col><span style={{color: 'red'}}>{this.state.err}</span></Col>\r\n\r\n\r\n                }\r\n                       \r\n                  </Row>\r\n                </FormItem>\r\n            </Form>\r\n          </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst QuickBook = Form.create()(BookCar );\r\nexport default QuickBook;","import React, {Component} from 'react';\r\nimport {   Row,Col } from 'antd';\r\nimport FormContent from 'views/page/detail/sidebar/FormContent';\r\nimport {reqFindCar} from 'redux/car/actions';\r\nimport { withRouter,} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as CONST_VARIABLE from 'utils/const/index';\r\nclass SidebarContent extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            priceStart:0,\r\n            priceEnd:1000000,\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        this.props.handleFindCar(this.props.id, CONST_VARIABLE.ACCESS_TOKEN);\r\n    }\r\n    render(){\r\n        const rowstyle={\r\n            display:'flex',\r\n            flexDirection:'column',\r\n            justifyContent:'center',\r\n            alignItems:'center',\r\n            backgroundColor:'rgba(255, 255, 255, 0.815)',\r\n        }\r\n        const {dateReturn, dateRental, city, itemCar} = this.props;\r\n        return (\r\n            <Row style={rowstyle}>\r\n                <Col md={20}>\r\n                    <FormContent\r\n                        city={city}\r\n                        dateReturn={dateReturn}\r\n                        dateRental={dateRental}\r\n                        itemCar={itemCar}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        itemCar: state.itemCar\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        handleFindCar:(id ,accesstoken)=>{\r\n            dispatch(reqFindCar(id ,accesstoken)) ;\r\n        },\r\n    }\r\n  }\r\n  \r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SidebarContent));","import callApis from 'utils/callAPI/apiCaller';\r\nimport * as Types from './ActionTypes';\r\nexport const loadDataDetailOfCar = (id, accesstoken) => {\r\n    return (dispatch) => {\r\n        return callApis(`CustomerOrderJoin/Join?idCar=${id}`, 'GET', null, accesstoken).then(res => {\r\n            const arrFeature= res.data.feature.split('*');\r\n            arrFeature.pop();\r\n            const arrProcedure= res.data.procedure.split('*');\r\n            arrProcedure.pop();\r\n\r\n            var detail = {\r\n                name: res.data.name,\r\n                price: res.data.price,\r\n                feature: arrFeature,\r\n                procedure: arrProcedure\r\n            }\r\n            dispatch(actLoadDataDatailOfCar(detail));\r\n        }).catch(error => console.log(\"Fetch Error \"+ error));\r\n    }\r\n}\r\n\r\nexport const actLoadDataDatailOfCar = (carDetail) => {\r\n    return {\r\n        type: Types.LOAD_DETAIL_CAR,\r\n        carDetail\r\n    }\r\n}","import { Row, Col,Rate,Icon  } from 'antd';\r\nimport React, {Component} from 'react';\r\nimport './InfoCar.css';\r\nimport {reqFindCar} from 'redux/car/actions';\r\nimport {loadDataDetailOfCar} from 'redux/car-detail/actProduct';\r\nimport { withRouter,} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as CONST_VARIABLE from 'utils/const/index';\r\nclass ContentInfoCar extends Component{\r\n\r\n    componentWillMount(){\r\n        this.props.handleDataDetail(this.props.id, CONST_VARIABLE.ACCESS_TOKEN);\r\n        this.props.handleFindCar(this.props.id, CONST_VARIABLE.ACCESS_TOKEN);\r\n\r\n    }\r\n\r\n    render(){\r\n        const rowInfoImgStyle={\r\n            display:'flex',\r\n            flexDirection:'column',\r\n        }\r\n        const {carDetail, itemCar} = this.props;\r\n        \r\n        return(\r\n        <Row >\r\n        {\r\n        (carDetail.name)?\r\n            (\r\n            <Col md={24} style={rowInfoImgStyle}>\r\n                <Row className=\"infor-car\" gutter={8}>\r\n                    <Col md={4} className=\"image_car\">\r\n                        <img src={itemCar.imageLink} width=\"100%\" height=\"100%\" alt=\"\" />\r\n                    </Col>\r\n                    <Col md={15} >\r\n                        <Row className=\"car_name\">\r\n                            <Col md={24}>\r\n                                <h5>{itemCar.name}</h5>\r\n                                <Rate allowClear={false} defaultValue={3} /> \r\n                                <p>{itemCar.description}</p>\r\n                            </Col>\r\n                            <Col md={20} className=\"grid-feature\">\r\n                                <Row style={{display:'flex', flexDirection:'row'}}> \r\n                                    <Col md={8} className=\"grid-icon-feature\">\r\n                                        <Icon type=\"select\" theme=\"outlined\" />\r\n                                        <span className=\"text-feature\">Xăng</span>\r\n                                    </Col>\r\n                                    <Col md={8} className=\"grid-icon-feature\">\r\n                                        <Icon type=\"select\" theme=\"outlined\" />\r\n                                        <span className=\"text-feature\">1.5 Lit</span>\r\n                                    </Col>\r\n                                    <Col md={8} className=\"grid-icon-feature\">\r\n                                        <Icon type=\"select\" theme=\"outlined\" />\r\n                                        <span className=\"text-feature\">Số tự động</span>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row style={{display:'flex', flexDirection:'row'}}> \r\n                                    <Col md={8} className=\"grid-icon-feature\">\r\n                                        <Icon type=\"select\" theme=\"outlined\" />\r\n                                        <span className=\"text-feature\">5 chỗ</span>\r\n                                    </Col>\r\n                                    <Col md={8} className=\"grid-icon-feature\">\r\n                                        <Icon type=\"select\" theme=\"outlined\" />\r\n                                        <span className=\"text-feature\">Sedan</span>\r\n                                    </Col>\r\n                                    <Col md={8} className=\"grid-icon-feature\">\r\n                                        <Icon type=\"select\" theme=\"outlined\" />\r\n                                        <span className=\"text-feature\">250km/h</span>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{padding:'20px 20px'}}> \r\n                    <p className=\"title-label\">Tính năng:</p>\r\n                    {\r\n                        carDetail.feature.map((val, ind)=>{\r\n                            return(\r\n                            <Col md={6} key={val}>\r\n                                <Icon type=\"select\" theme=\"outlined\" />\r\n                                <span className=\"text-feature\">{val}</span>\r\n                            </Col>\r\n                            )         \r\n                        })\r\n                    }\r\n                </Row>\r\n                <Row style={{padding:'20px 20px'}}> \r\n                    <p className=\"title-label\">Thủ tục: </p>\r\n                    {\r\n                        carDetail.procedure.map((val, ind)=>{\r\n                            return (\r\n                            <Col key={val} md={6}>\r\n                                <Icon type=\"select\" theme=\"outlined\" />\r\n                                <span className=\"text-feature\">{val}</span>\r\n                            </Col>\r\n                            )\r\n                        })\r\n                    }\r\n                    \r\n                    \r\n                </Row>\r\n                <Row style={{padding:'20px 20px'}}> \r\n                    <p className=\"title-label\">Chấp nhận thanh toán: </p>\r\n                    <Col md={6}>\r\n                        <Icon type=\"select\" theme=\"outlined\" />\r\n                        <span className=\"text-feature\">Trả sau</span>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{padding:'20px 20px'}}> \r\n                    <p className=\"title-label\">Ghi chú: </p>\r\n                    <Col md={24}>\r\n                        <p className=\"text-note\">- Nên mang theo tiền mặt khi nhận xe </p>\r\n                        <p className=\"text-note\">- Phải giữ gìn cẩn thận sản phẩm của đối tác trong quá trình thuê xe</p>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            ):\r\n            (\r\n                <p></p>\r\n            )\r\n        }\r\n        </Row>\r\n      )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        carDetail: state.carDetail,\r\n        itemCar: state.itemCar\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        handleDataDetail:(id ,accesstoken)=>{\r\n            dispatch(loadDataDetailOfCar(id ,accesstoken)) ;\r\n        },\r\n        handleFindCar:(id ,accesstoken)=>{\r\n            dispatch(reqFindCar(id ,accesstoken)) ;\r\n        },\r\n\r\n    }\r\n  }\r\n  \r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ContentInfoCar));","import React ,{Component} from 'react';\r\nimport { Layout ,Row,Col } from 'antd';\r\nimport SidebarContent from 'views/page/detail/sidebar/Sidebar';\r\nimport HeaderContent from 'views/layout/Header';\r\nimport FooterContent from 'views/layout/Footer';\r\n// import FunctionFilter from 'containers/filterbar/FunctionFilter';\r\nimport StepContent from 'containers/step/Step';\r\nimport InfoCarContent from './content';\r\n// import PaginationContent from 'components/pagination/Pagination'\r\nimport 'containers/filterbar/function.css';\r\nimport './css/sidebar.css';\r\nimport './css/index.css';\r\nconst { Header, Content,Footer } = Layout;\r\nclass ContentApp extends Component{\r\n    state={\r\n        collapsed: false, \r\n        city:null,\r\n        dateRental:null,\r\n        dateReturn:null\r\n    }\r\n    componentWillMount(){\r\n        this.setState({\r\n            dateRental:this.props.location.state.dateRental,\r\n            dateReturn:this.props.location.state.dateReturn,\r\n            city: this.props.location.state.city\r\n        });\r\n    }\r\n    toggle = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        });\r\n    }\r\n      render() {\r\n        const id = this.props.match.params.id;\r\n        const {dateReturn, dateRental, city} = this.state;\r\n        return (\r\n            <Layout>\r\n                <Header className=\"header_content\">\r\n                    <HeaderContent/>\r\n                </Header>\r\n                <Content>\r\n                    <div className=\"step_content\">\r\n                        <StepContent step={2}/>\r\n                    </div>\r\n                    <Layout>\r\n                        <Row className=\"resposive_content_detail_car\" gutter={8} >\r\n                            <Col md={18}>\r\n                                <Row style={{display:'flex',flexDirection:'column'}}>\r\n                                    <Col md={24}>\r\n                                        <Content style={{ padding: '12px 0', background: '#fff' }}>\r\n                                            <Row>\r\n                                                <Col md={24} sm={24}>\r\n                                                    <InfoCarContent id={id}/>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Content>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col md={6} className=\"sidebar_content\" >\r\n                                 <SidebarContent \r\n                                    city={city}\r\n                                    dateReturn={dateReturn}\r\n                                    dateRental={dateRental}\r\n                                    id={id}\r\n                                 />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Layout>\r\n                </Content>\r\n                <Footer>\r\n                    <FooterContent/>\r\n                </Footer>\r\n            </Layout>\r\n          \r\n        );\r\n    }\r\n}\r\nexport default ContentApp;","import { Form , Row, Col, Button,  } from 'antd';\r\nimport React,{Component} from 'react';\r\nimport moment from 'moment';\r\nimport {Link} from 'react-router-dom';\r\nimport '../css/form.css';\r\n// const FormItem = Form.Item;\r\n\r\nconst range=(start, end)=> {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n}\r\nclass BookCar extends Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n  };\r\n\r\n  onChange=(value, dateString)=> {\r\n    console.log('Selected Time: ', value);\r\n    console.log('Formatted Selected Time: ', dateString);\r\n  }\r\n  \r\n  onOk=(value)=> {\r\n    console.log('onOk: ', value);\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  }\r\n  \r\n  disabledDate=(current) =>{\r\n    return current && current < moment().endOf('day');\r\n  }\r\n  \r\n   disabledDateTime=() =>{\r\n    return {\r\n      disabledHours: () => range(0, 24).splice(4, 20),\r\n      disabledMinutes: () => range(30, 60),\r\n      disabledSeconds: () => [55, 56],\r\n    };\r\n  }\r\n  \r\n   disabledRangeTime=(_, type)=> {\r\n    if (type === 'start') {\r\n      return {\r\n        disabledHours: () => range(0, 60).splice(4, 20),\r\n        disabledMinutes: () => range(30, 60),\r\n        disabledSeconds: () => [55, 56],\r\n      };\r\n    }\r\n    return {\r\n      disabledHours: () => range(0, 60).splice(20, 4),\r\n      disabledMinutes: () => range(0, 31),\r\n      disabledSeconds: () => [55, 56],\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    // const { formLayout } = this.state;\r\n    // const formItemLayout = formLayout === 'horizontal' ? {\r\n    //     labelCol: { span: 4 },\r\n    //     wrapperCol: { span: 14 },\r\n    //   } : null;\r\n    const rowStyleOrder={\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        justifyContent:'space-between'\r\n    }\r\n    return (\r\n      <Row className=\"form_content\">\r\n          <Col md={24} >\r\n            <Row>\r\n              <Col md={24}>\r\n                <p className=\"title-label\">Hình thức nhận xe:</p>\r\n                <span className=\"text-order\">Nhận xe tại nhà</span>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={24}>\r\n                <p className=\"title-label\">Thời gian:</p>\r\n                <span className=\"text-order\">22:00 31/10/2018 - 19:00 01/11/2018</span>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={24}>\r\n                <p className=\"title-label\">Mã giảm giá:</p>\r\n                <span className=\"text-order\">SCH134KsfnH</span>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={24}>\r\n                <p className=\"title-label\">Giới hạn quảng đường:</p>\r\n                <span className=\"text-order\">Tối đa 250km/ngày, phụ trội 3.000 đ/km</span>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={24}>\r\n                <p className=\"title-label\">Chi tiết giá:</p>\r\n                \r\n                <Row style={rowStyleOrder} className=\"row-info-order\">\r\n                    <Col span={12} ><span>Đơn giá ngày</span></Col>\r\n                    <Col span={12} ><span className=\"span-info-order\">900 000đ</span></Col>\r\n                </Row>\r\n                <Row style={rowStyleOrder} className=\"row-info-order\">\r\n                    <Col span={12}><span>Ngày</span></Col>\r\n                    <Col span={12}><span className=\"span-info-order\">7 Ngày</span></Col>\r\n                </Row>\r\n                <hr/>\r\n                <Row style={rowStyleOrder} className=\"row-info-order\">\r\n                    <Col span={12}><span>TỔNG</span></Col>\r\n                    <Col span={12}><span className=\"span-info-order\">7 Đ</span></Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            <Row >\r\n                <Col md={24} style={{float:'right',width:'100%',padding:'10px 0'}}>\r\n                    <Link to=\"tim-xe\">\r\n                        <Button style={{width:'100%'}} type=\"primary\" htmlType=\"submit\">Chọn xe này</Button>\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n          </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst QuickBook = Form.create()(BookCar );\r\nexport default QuickBook;","import React, {Component} from 'react';\r\nimport { Icon,Row,Col, } from 'antd';\r\nimport FormContentReadly from 'views/page/info-order/sidebar/FormContent';\r\nimport imageCar from 'images/car/hyundai.png';\r\nimport '../css/sidebar.css';\r\nclass SidebarContent extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            priceStart:0,\r\n            priceEnd:1000000,\r\n        }\r\n    }\r\n    filterPrice=(val)=>{\r\n        this.setState({priceStart:val[0]*1000,priceEnd:val[1]*1000})\r\n    }\r\n    render(){\r\n        const rowstyle={\r\n            display:'flex',\r\n            flexDirection:'column',\r\n            justifyContent:'center',\r\n            alignItems:'center',\r\n            padding:'10px 10px'\r\n        }\r\n        return (\r\n            <Row style={rowstyle}>\r\n                <Col md={22} className=\"image_car\">\r\n                    <img src={imageCar} width=\"100%\" height=\"100%\" alt=\"\" />\r\n                </Col>\r\n                <Col md={22}>\r\n                    <p className=\"name-car\">TOYOTA VIOS 1.5G (CVT) 2018</p>\r\n                </Col>\r\n                <Col md={22}>\r\n                    <Row style={{display:'flex', flexDirection:'row'}}> \r\n                        <Col md={12} className=\"grid-icon-feature\">\r\n                            <Icon type=\"select\" theme=\"outlined\" />\r\n                            <span className=\"text-feature\">Xăng</span>\r\n                        </Col>\r\n                        <Col md={12} className=\"grid-icon-feature\">\r\n                            <Icon type=\"select\" theme=\"outlined\" />\r\n                            <span className=\"text-feature\">1.5 Lit</span>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{display:'flex', flexDirection:'row'}}> \r\n                        <Col md={12} className=\"grid-icon-feature\">\r\n                            <Icon type=\"select\" theme=\"outlined\" />\r\n                            <span className=\"text-feature\">Số tự động</span>\r\n                        </Col>\r\n                        <Col md={12} className=\"grid-icon-feature\">\r\n                            <Icon type=\"select\" theme=\"outlined\" />\r\n                            <span className=\"text-feature\">5 chỗ</span>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{display:'flex', flexDirection:'row'}}> \r\n                        <Col md={12} className=\"grid-icon-feature\">\r\n                            <Icon type=\"select\" theme=\"outlined\" />\r\n                            <span className=\"text-feature\">Sedan</span>\r\n                        </Col>\r\n                        <Col md={12} className=\"grid-icon-feature\">\r\n                            <Icon type=\"select\" theme=\"outlined\" />\r\n                            <span className=\"text-feature\">81/100km</span>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col span={22}>\r\n                    <FormContentReadly/>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\nexport default SidebarContent;","import { Form, Icon, Input,Row,Col, Button, Select } from 'antd';\r\nimport React,{Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../css/form.css';\r\nconst FormItem = Form.Item;\r\nconst { TextArea } = Input;\r\n\r\nconst Option = Select.Option;\r\nclass NormalLoginForm extends Component {\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Row style={{display:'flex',justifyContent:'center'}}>\r\n          <Col md={12}>\r\n            <p className=\"title-header\">Nhập thông tin của bạn</p>\r\n            <Form onSubmit={this.handleSubmit} className=\"login-form\" layout=\"vertical\">\r\n                <FormItem label=\"Họ và tên:\" >\r\n                    {getFieldDecorator('fullname', {\r\n                        rules: [{ required: true, message: 'Vui lòng nhập họ và tên!' }],\r\n                    })(\r\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Họ và tên\" />\r\n                    )}\r\n                </FormItem>\r\n                <FormItem label=\"Số điện thoại:\" >\r\n                    {getFieldDecorator('phone', {\r\n                        rules: [{ required: true, message: 'Vui lòng nhập số điện thoại' }],\r\n                    })(\r\n                        <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"number\" placeholder=\"Số điện thoại\" />\r\n                    )}\r\n                </FormItem>\r\n                <FormItem label=\"Email:\" >\r\n                    {getFieldDecorator('email', {\r\n                        rules: [{ required: true, message: 'Vui lòng nhập email!' }],\r\n                    })(\r\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Email\" />\r\n                    )}\r\n                </FormItem>\r\n                <FormItem label=\"Hình thức thanh toán:\" >\r\n                    {getFieldDecorator('paymentMethod', {\r\n                        rules: [{ required: true, message: 'Vui lòng chọn hình thức thanh toán!' }],\r\n                    })(\r\n                        <Select\r\n                            // value={state.currency}\r\n                            // size={size}\r\n                            defaultValue=\"AT_PRODUCER\"\r\n                            style={{ width: '100%' }}\r\n                            // onChange={this.handleCurrencyChange}\r\n                            >\r\n                                <Option value=\"AT_HOME\">Nhận xe tại nhà</Option>\r\n                                <Option value=\"AT_PRODUCER\">Nhận xe tại đại lý</Option>\r\n                        </Select>    \r\n                    )}\r\n                </FormItem>\r\n                <FormItem label=\"Lưu ý:\" >\r\n                    <TextArea rows={4} />\r\n                </FormItem>\r\n                <FormItem>\r\n                    <Link to=\"/final\">\r\n                        <Button style={{float:'right'}} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                            Hoàn tất\r\n                        </Button>\r\n                    </Link>\r\n                </FormItem>\r\n            </Form>\r\n          </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\r\n\r\nexport default WrappedNormalLoginForm ;","import React ,{Component} from 'react';\r\nimport { Layout, Row,Col } from 'antd';\r\nimport SidebarContent from './sidebar/Sidebar';\r\nimport HeaderContent from 'views/layout/Header';\r\nimport FooterContent from 'views/layout/Footer';\r\nimport StepContent from 'containers/step/Step';\r\nimport FormInfoCustomer from './content';\r\nimport 'containers/filterbar/function.css';\r\nimport './css/sidebar.css';\r\nimport './css/index.css';\r\nconst { Header, Content,Footer } = Layout;\r\nclass ContentApp extends Component{\r\n    state={\r\n        collapsed: false,\r\n    }\r\n    toggle = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        });\r\n    }\r\n      render() {\r\n        return (\r\n            <Layout>\r\n                <Header className=\"header_content\">\r\n                    <HeaderContent/>\r\n                </Header>\r\n                <Content>\r\n                    <div className=\"step_content\">\r\n                        <StepContent step={3}/>\r\n                    </div>\r\n                    <Layout>\r\n                        <Row className=\"resposive_content_info_order\" gutter={32} >\r\n                            <Col md={6} className=\"sidebar_content\" >\r\n                                <SidebarContent collapsed={this.state.collapsed}/>\r\n                            </Col>\r\n                            <Col md={18} style={{padding: '12px 32px', background: '#fff' }}>\r\n                                <FormInfoCustomer/>\r\n                            </Col>\r\n                        </Row>\r\n                    </Layout>\r\n                </Content>\r\n                <Footer>\r\n                    <FooterContent/>\r\n                </Footer>\r\n            </Layout>\r\n          \r\n        );\r\n    }\r\n}\r\nexport default ContentApp;","import { Form , Row, Col,   } from 'antd';\r\nimport React,{Component} from 'react';\r\nimport '../css/form.css';\r\n\r\nclass BookCar extends Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n  };\r\n  \r\n  render() {\r\n\r\n    return ( \r\n      <Row className=\"form_content\">\r\n          <Col span={24} >\r\n            <Row>\r\n              <p className=\"title-header-banner\">Thông tin liên hệ</p>\r\n            </Row>\r\n            <Row>\r\n              <Col md={24}>\r\n                <p className=\"title-label\">Họ và tên:</p>\r\n                <span className=\"text-order\">Nguyễn Lê Phong</span>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={24}>\r\n                <p className=\"title-label\">Số điện thoại:</p>\r\n                <span className=\"text-order\">01643081322</span>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={24}>\r\n                <p className=\"title-label\">Email:</p>\r\n                <span className=\"text-order\">nguyenlephong1997@mail.com</span>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst QuickBook = Form.create()(BookCar );\r\nexport default QuickBook;","import { Form , Row, Col,   } from 'antd';\r\nimport React,{Component} from 'react';\r\nimport '../css/form.css';\r\n\r\nclass BookCar extends Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n  };\r\n  \r\n  render() {\r\n\r\n    return ( \r\n      <Row className=\"form_content\">\r\n          <Col span={24} >\r\n            <Row>\r\n              <p className=\"title-header-banner\">Chi tiết đặt xe</p>\r\n            </Row>\r\n            <Row>\r\n              <Col md={24}>\r\n                <p className=\"title-label\">Trạng thái:</p>\r\n                <span className=\"text-order\">Xe đã sẳn sàng</span>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={24}>\r\n                <p className=\"title-label\">Thanh toán:</p>\r\n                <span className=\"text-order\">Trả sau</span>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={24}>\r\n                <p className=\"title-label\">Giá trị:</p>\r\n                <span className=\"text-order\">1.800.000 VNĐ</span>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={24}>\r\n                <p className=\"title-label\">Loại xe:</p>\r\n                <span className=\"text-order\">yota Vios 1.5G (CVT) 2018</span>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={24}>\r\n                <p className=\"title-label\">Hình thức nhận xe:</p>\r\n                <span className=\"text-order\">Nhận xe tại đại lý</span>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={24}>\r\n                <p className=\"title-label\">Thời gian:</p>\r\n                <span className=\"text-order\">07:00 02/11/2018 - 19:00 03/11/2018</span>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst QuickBook = Form.create()(BookCar );\r\nexport default QuickBook;","import React, {Component} from 'react';\r\nimport { Row,Col, } from 'antd';\r\nimport InfoCustomer from 'views/page/final/sidebar/InfoCustomer';\r\nimport InfoDetail from './InfoDetail';\r\nimport '../css/sidebar.css';\r\n// const {  Sider,  } = Layout;\r\nclass SidebarContent extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            priceStart:0,\r\n            priceEnd:1000000,\r\n        }\r\n    }\r\n    filterPrice=(val)=>{\r\n        this.setState({priceStart:val[0]*1000,priceEnd:val[1]*1000})\r\n    }\r\n    render(){\r\n        const rowstyle={\r\n            display:'flex',\r\n            flexDirection:'column',\r\n            justifyContent:'center',\r\n            alignItems:'center',\r\n            padding:'10px 10px'\r\n        }\r\n        return (\r\n            <Row style={rowstyle} gutter={16}>\r\n                <Col md={22} >\r\n                    <InfoCustomer/>\r\n                </Col>\r\n                <br/>\r\n                <Col md={22}>\r\n                    <InfoDetail/>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\nexport default SidebarContent;","import { Form,Row,Col, } from 'antd';\r\nimport React,{Component} from 'react';\r\nimport '../css/form.css';\r\nimport iconSuccess from 'images/icon/step3.png';\r\nclass NormalLoginForm extends Component {\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    //   0\r\n    return (\r\n      <Row style={{display:'flex',justifyContent:'center',flexDirection:'column'}}>\r\n          <Col md={24}>\r\n            <Row className=\"content_order_wrapper\">\r\n                <Col md={16}>\r\n                    <img src={iconSuccess} width=\"180\" />\r\n                    <p className=\"title-header-final\">Đặt xe thành công</p>\r\n                </Col>\r\n                <Col md={16}>\r\n                    <p >Mã đặt xe của bạn:</p>\r\n                    <p className=\"code-order\">HNIOT181110166</p>\r\n                </Col>\r\n                <Col md={16}>\r\n                    <p >\r\n                        Yêu cầu đặt xe của bạn đã được hệ thống ghi nhận.\r\n                        Chúng tôi sẽ liên lạc lại với bạn để thông báo tình trạng \r\n                        của xe ít nhất 6h trước thời điểm thuê xe.\r\n                    </p>\r\n                </Col>\r\n            </Row>\r\n          </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\r\n\r\nexport default WrappedNormalLoginForm ;","import React ,{Component} from 'react';\r\nimport { Layout, Row,Col } from 'antd';\r\nimport SidebarContent from './sidebar/Sidebar';\r\nimport HeaderContent from 'views/layout/Header';\r\nimport FooterContent from 'views/layout/Footer';\r\nimport StepContent from 'containers/step/Step';\r\nimport FormInfoCustomer from './content';\r\nimport 'containers/filterbar/function.css';\r\nimport './css/sidebar.css';\r\nimport './css/index.css';\r\n\r\n\r\nconst { Header, Content,Footer } = Layout;\r\nclass ContentApp extends Component{\r\n    state={\r\n        collapsed: false,\r\n    }\r\n    toggle = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        });\r\n    }\r\n      render() {\r\n        return (\r\n            <Layout>\r\n                <Header className=\"header_content\">\r\n                    <HeaderContent/>\r\n                </Header>\r\n                <Content>\r\n                    <div className=\"step_content\">\r\n                        <StepContent step={4}/>\r\n                    </div>\r\n                    <Layout>\r\n                        <Row className=\"resposive_content_final_order\" gutter={16} >\r\n                            <Col md={6} className=\"sidebar_content\" >\r\n                                <SidebarContent collapsed={this.state.collapsed}/>\r\n                            </Col>\r\n                            <Col md={17} style={{padding: 16, background: '#fff',height:\"100%\"}}>\r\n                                <FormInfoCustomer/>\r\n                            </Col>\r\n                        </Row>\r\n                    </Layout>\r\n                </Content>\r\n                <Footer>\r\n                    <FooterContent/>\r\n                </Footer>\r\n            </Layout>\r\n          \r\n        );\r\n    }\r\n}\r\nexport default ContentApp;","import React from 'react';\r\nimport { Route,Router } from 'react-router-dom';\r\n// import {ConnectedRouter} from 'connected-react-router';\r\nimport App from 'views/App';\r\nimport MainApp from 'app/App';\r\nimport SearchCar from 'views/page/product';\r\nimport DetailCar from 'views/page/detail';\r\nimport InfoRentalCar from 'views/page/info-order';\r\nimport FinalRentalCar from 'views/page/final';\r\n// import Management  from 'containers/private/layout-management/index';\r\nconst PublicRoutes = ({ history, }) => {\r\n  return (\r\n    <Router history={history}>\r\n        <div>\r\n          <Route\r\n            exact\r\n            path={'/'}\r\n            component={App}\r\n          />\r\n          <Route\r\n            exact\r\n            path={'/tim-xe'}\r\n            component={SearchCar}\r\n          />\r\n          <Route\r\n            exact\r\n            path={'/detail/:id'}\r\n            component={DetailCar}\r\n          />\r\n          <Route\r\n            exact\r\n            path={'/info-rental-car'}\r\n            component={InfoRentalCar}\r\n          />\r\n          <Route\r\n            exact\r\n            path={'/final'}\r\n            component={FinalRentalCar}\r\n          />\r\n          <Route\r\n            // exact={true}\r\n            path={'/dashboard'}\r\n            component={MainApp}\r\n          />\r\n          {/* <Route\r\n            exact={true}\r\n            path={'/dashboard/management'}\r\n            component={Management}\r\n          /> */}\r\n        </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default PublicRoutes;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware ,compose} from 'redux'; \r\nimport appReducers from './redux/index'\r\n\r\nimport thunk from 'redux-thunk';\r\nimport PublicRoutes from \"./router\";\r\nimport { createBrowserHistory } from 'history';\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nconst history = createBrowserHistory();\r\nconst reactRouterMiddleware = routerMiddleware(history); \r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst middleWares = [ thunk, reactRouterMiddleware ];\r\nconst store = createStore(\r\n    connectRouter(history)(appReducers), \r\n    composeEnhancer(\r\n        applyMiddleware(...middleWares)\r\n    ),\r\n);\r\nclass Apply extends React.Component{\r\n    render(){\r\n        return(\r\n            <Provider store={store}>\r\n                <PublicRoutes history={history} />\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(<Apply />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/hyundai.50f854c4.png\";"],"sourceRoot":""}